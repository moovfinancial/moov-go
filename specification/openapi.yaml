openapi: 3.0.2
info:
  contact:
    email: help@moov.io
    url: https://moov.io
  description: |
    Moov is a platform that enables developers to integrate all aspects of money movement with ease and speed. The Moov API makes it simple for platforms to send, receive, and store money. Our API is based upon REST principles, returns JSON responses, and uses standard HTTP response codes. To learn more about how Moov works at a high level, read our [concepts](https://docs.moov.io/guides/get-started/glossary/) guide.
  license:
    name: Unlicensed
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Moov API
  version: v0
  x-logo:
    url: https://moov.io/images/logo.png
    altText: Moov logo
servers:
- description: Production Environment
  url: https://api.moov.io
tags:
- description: |
    For server-to-server communication, use your API key's public key and secret key with Basic authentication. When using Basic authentication, you don't need to send a scope.

    Set the Authorization header to `Basic <credentials>` where credentials is the Base64 encoding of public key and private key joined by a single colon `:`.
  name: API authentication
- description: |
    When making requests to Moov from a browser, you can use OAuth with JSON Web Tokens (JWT).

    Our authentication flow follows the OAuth 2.0 standard. With this endpoint, you'll [create an access token](https://docs.moov.io/guides/quick-start/#create-an-access-token) that you will pass along with API requests or when initializing Moov.js. To generate an authentication token, you’ll need to specify [scopes](https://docs.moov.io/guides/developer-tools/scopes/) that enable the token to use a specific set of API endpoints. <br><br> If a scope is required, it will be listed in the description of the endpoint.
  name: Access token
- description: "[Accounts](https://docs.moov.io/guides/accounts/) represent a legal\
    \ entity (either a business or an individual) in Moov. You can create an account\
    \ for yourself or set up accounts for others, requesting different [capabilities](https://docs.moov.io/guides/accounts/capabilities/)\
    \ depending on what you need to be able to do with that account. You can retrieve\
    \ an account to get details on the business or individual account holder, such\
    \ as an email address or employer identification number (EIN). \n\nBased on the\
    \ type of account and its requested capabilities, we have certain [verification\
    \ requirements](https://docs.moov.io/guides/accounts/identity-verification/).\
    \ To see what capabilities that account has, you can use the [GET capability endpoint](https://docs.moov.io/api/moov-accounts/capabilities/get/).\
    \ \n\nWhen you sign up for the Moov Dashboard, you will have a **facilitator account**\
    \ which can be used to facilitate money movement between other accounts. A facilitator\
    \ account will not show up in your list of accounts and cannot be created via\
    \ API. To update your facilitator account information, use the settings page of\
    \ the Moov Dashboard.\n\nYou can disconnect an account within the account's settings\
    \ in the Moov Dashboard. This action cannot be undone. When an account is disconnected,\
    \ the account's history and wallet is retained, but transfers cannot be submitted,\
    \ and no actions can be taken on the account. See the [Dashboard](https://docs.moov.io/guides/dashboard/accounts/#disconnect-accounts)\
    \ guide for more information. It is not possible to permanently delete an account.\n"
  name: Accounts
- description: |
    You can retrieve helpful at-a-glance information about your account by getting metrics on categories such as new accounts, transfer counts, and transfer volume over different time periods.
  name: Analytics
- description: |
    Apple Pay offers a fast, easy, and secure way to accept card payments. The use of Apple Pay requires adherence to Apple's [guidelines](https://developer.apple.com/apple-pay/acceptable-use-guidelines-for-websites/) and [server requirements](https://developer.apple.com/documentation/apple_pay_on_the_web/setting_up_your_server). See our step-by-step [Apple Pay](https://docs.moov.io/guides/money-movement/card-acceptance/apple-pay/) guide for more information.
  name: Apple Pay
- description: |
    An application allows an account to connect to other accounts and gain access to their information and move money on their behalf.
  name: Application
- description: |
    You can retrieve an account's profile image. This is especially useful if you'd like to use the profile image for a corresponding account in your own product.
  name: Avatars
- description: "To transfer money with Moov, you’ll need to link a bank account to\
    \ your Moov account, then verify that account. You can link a bank account to\
    \ a Moov account by providing the bank account number, routing number, and Moov\
    \ account ID. \n\nWe require micro-deposit verification to reduce the risk of\
    \ fraud or unauthorized activity. You can verify a bank account by initiating\
    \ [micro-deposits](https://docs.moov.io/guides/sources/bank-accounts/#micro-deposit-verification),\
    \ sending two small credit transfers to the bank account you want to confirm.\
    \ Note that there is no way to initiate a micro-deposit from your bank of choice.\
    \ \n\nAlternatively, you can link and verify a bank account in one step through\
    \ an instant account verification token from a third party provider like [Plaid](https://docs.moov.io/guides/sources/bank-accounts/plaid)\
    \ or [MX](https://docs.moov.io/guides/sources/bank-accounts/mx/). Bank accounts\
    \ can have the following statuses: `new`, `pending`, `verified`, `verificationFailed`,\
    \ `errored`. Learn more by reading our guide on [bank accounts](https://docs.moov.io/guides/sources/bank-accounts/).\n"
  name: Bank accounts
- description: "Capabilities determine what a Moov account can do. Each capability\
    \ has specific [verification requirements](https://docs.moov.io/guides/accounts/identity-verification/),\
    \ depending on risk and compliance standards associated with different account\
    \ activities. For example, there are more information requirements for a business\
    \ that wants to charge other accounts than for an individual who simply wants\
    \ to receive funds. \n\nWhen you request a capability, we list the information\
    \ requirements for that capability. Once you submit the required information,\
    \ we need to verify the data. Because of this, a requested capability may not\
    \ immediately become active. Note, if an account requests and is approved for\
    \ `send-funds` or `collect-funds`, the `wallet` capability is automatically enabled\
    \ as well. For more detailed information on capabilities and capability IDs, read\
    \ our [capabilities guide](https://docs.moov.io/guides/accounts/capabilities/).\n"
  name: Capabilities
- description: |
    A Moov wallet can serve as a funding source for issuing virtual cards. Note that we currently only issue Visa cards. Virtual cards can then be used to spend funds from the wallet.

    <em> The `card-issuing` and `wallet` capabilities are required to be enabled before any card issuing functionality is available. Moov is in a private beta with select customers for card issuing.</em>
  name: Card issuing
  x-displayName: Cards
- description: You can link credit or debit cards to Moov accounts. You can use a
    card as a source for making transfers, which charges the card. To link a card
    to a Moov account and avoid some of the burden of PCI compliance, use the [card
    link Moov Drop](https://docs.moov.io/moovjs/drops/card-link). You cannot add a
    card via the Dashboard. If you're linking a card via API, you must provide Moov
    with a copy of your PCI attestation of compliance. When testing cards, use the
    designated [card numbers for test mode](https://docs.moov.io/guides/set-up-your-account/test-mode/#card-acceptance).
    You must contact Moov before going live in production with cards. Read our guide
    on [cards](https://docs.moov.io/guides/sources/cards/) for more information.
  name: Cards
- description: A connection forms a relationship between two accounts, allowing them
    to transact with each other. When you create an account for someone else, your
    account automatically has a connection with the account you've just created.
  name: Connections
- description: A [dispute](https://docs.moov.io/guides/money-movement/cards/disputes/)
    is a situation where a cardholder formally questions a transaction on their account
    with their card issuer. This could be for a number of reasons ranging from billing
    errors to fraudulent activity or dissatisfactory goods/services. If the dispute
    is recognized as legitimate, the issuer will reverse the payment (otherwise known
    as a chargeback).
  name: Disputes
- description: Authentication via using a email and password.
  name: Email/Password
- description: |
    Search for valid addresses using a partial or full address.
  name: Enriched address
- description: |
    By supplying an email address, you can retrieve a profile with enriched data fields. This service is offered in collaboration with Clearbit.
  name: Enriched profile
- description: |
    Files can be used for a multitude of different use cases including but not limited to, individual identity verification and business underwriting. You may need to provide documentation to enable capabilities or to keep capabilities enabled for an account. The maximum file size is 10MB. Each account is allowed a maximum of 50 files. Acceptable file types include csv, jpg, pdf, and png. To learn about uploading files in the Moov Dashboard, read our [file upload guide](https://docs.moov.io/guides/dashboard/accounts/#file-upload).
  name: Files
- description: |
    Information about industries and their merchant codes.
  name: Industries
- description: |
    Lookup ACH and wire participating financial institutions. We recommend using this endpoint when an end-user enters a routing number to confirm their bank or credit union.
  name: Institutions
- description: |
    Transfer allow you Moov money
  name: Money movement
- description: Meant for internal use by Moov
  name: Moov internal
  x-traitTag: true
- description: |
    We require users to multi factor in when using a new device.
  name: Multi-factor
- description: Details on Moov's open id connect implementation
  name: Open ID Connect
- description: |
    [Payment methods](https://docs.moov.io/guides/money-movement/payment-methods/) represent all of the ways an account can move funds to another Moov account. Payment methods are generated programmatically when a card or bank account is added or the status is updated e.g., `ach-debit-fund` will be added as a payment method once the bank account is verified.

    <em>RTP® and Push to Card are not yet generally available on Moov. Contact us for more information.</em>
  name: Payment methods
- description: |
    We strongly suggest using the /reversals endpoint for its functionality and enhanced flexibility when dealing with refunds (the /refunds endpoint is still supported).

    A reversal will dynamically orchestrate a cancellation or refund based on the status of settlement process. A cancellation occurs if the transfer has not been settled. A refund occurs if the transfer is in the process of settling, or has already been settled.

    A reversal cannot exceed the original transfer amount, and once the reversal process has started, it cannot be cancelled.
  name: Refunds
- description: |
    We think of a representative as an individual who can take major actions on behalf of a business. A representative can be the business owner, or anyone who owns 25% or more of the business. Some examples of representatives are the CEO, CFO, COO, or president. We require all business accounts to have valid information for at least one representative. Moov accounts must have verified business representatives before a business account can send funds, collect money from other accounts, or store funds in a wallet. To learn more, read our guide on [business representatives](https://docs.moov.io/guides/accounts/business-representatives/).
  name: Representatives
- description: How to sign a user up via app.moov.io
  name: Signup
- description: |
    A transaction is a record of a card's activity on a particular Moov account.
  name: Transactions
- description: |
    A [transfer](https://docs.moov.io/guides/money-movement/) is the movement of money between Moov accounts, from source to destination. Provided you have linked a bank account which has been verified, you can initiate a transfer to another Moov account. All you need to do is note a [paymentMethod](#tag/Payment-methods), the $ amount of the transfer, and a brief description. With Moov, you can also implement transfer groups, allowing you to associate multiple transfers together and run them sequentially. To learn more, read our guide on [transfer groups](https://docs.moov.io/guides/money-movement/transfer-groups/#transfer-statuses).
  name: Transfers
- description: |
    [Underwriting](https://docs.moov.io/guides/accounts/underwriting) is a tool Moov uses to understand a business’s profile before allowing them to collect funds on our platform. This profile includes information like a description of the company or the merchant’s business model, the industry they operate in, and transaction volume. Through underwriting, we can understand and prevent unnecessary financial risk for Moov and those transacting on our platform. Note that underwriting can be instant, but in some cases make take around 2 business days before approval.
  name: Underwriting
- description: |
    This allows app.moov.io invite new users to an account.
  name: User invites
- description: |
    Users are lightweight objects that handle signing in to our app.moov.io
  name: Users
- description: |
    Wallet transactions provide insight into funds that move in and out of an account’s wallet. For each Moov transfer, we create a corresponding transaction that represents how that initial source impacted a wallet. Read more about [wallet transactions](https://docs.moov.io/guides/wallets/transactions).
  name: Wallet transactions
- description: |
    A [Moov wallet](https://docs.moov.io/guides/wallet/) can serve as a funding source as you accumulate funds. You can also use the Moov wallet to:
     - Pre-fund transfers for faster payouts
     - Transfer funds between Moov wallets for instantly available funds

     <em> If you've requested the `send-funds` or `collect-funds` capability, the `wallet` capability will be automatically requested as well. Read more on the [data requirements for wallets here](https://docs.moov.io/guides/accounts/capabilities/#wallet).</em>
  name: Wallets
paths:
  /signup:
    post:
      description: Allows a user to sign themselves up off the website. They will
        receive an email allowing them to create an user to signin with.
      operationId: selfSignup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        description: Values to register with
        required: true
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Successful empty response for unauthorized or any other returned
            http status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Self signup
      tags:
      - Signup
  /auth/signin/password:
    post:
      description: Allows a user to signin with a password
      operationId: SigninWithPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signin'
        description: Values to register with
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The user successfully signed in
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Signin a user with email & password
      tags:
      - Email/Password
  /auth/signin/password/register:
    post:
      description: Sets up password authentication
      operationId: setupPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setup'
        description: Values to register with
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The user successfully registered
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Register user with password
      tags:
      - Email/Password
  /auth/signin/password/change-password:
    post:
      description: Allows a user to change their password
      operationId: ChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        description: Current password and new
        required: true
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Successful empty response for unauthorized or any other returned
            http status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Change password
      tags:
      - Email/Password
  /auth/signin/password/recover:
    post:
      description: Allows a user recover their account via an email flow
      operationId: RecoverPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recover'
        description: Email to send recovery instructions to
        required: true
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Successful empty response for unauthorized or any other returned
            http status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Recover password
      tags:
      - Email/Password
  /auth/signin/password/recover/reset-password:
    post:
      description: Allows the user to set a password after recovering their account
      operationId: ResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        description: Email to send recovery instructions to
        required: true
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Successful empty response for unauthorized or any other returned
            http status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Set password for recovery
      tags:
      - Email/Password
  /auth/signin/oidc/{providerID}:
    get:
      description: "Initiates the authentication with the Provider specified by `providerID`.\n\
        This will redirect to the provider who will authenticate the user. Once the\
        \ provider has authenticated \nthe user it will redirect them back to us on\
        \ the `/callback` url.\n"
      operationId: OIDCAuthentication
      parameters:
      - description: Name of the Provider to use
        in: path
        name: providerID
        required: true
        schema:
          example: my-oidc-provider
          maxLength: 20
          pattern: ^[a-z0-9-]+$
          type: string
      responses:
        "302":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: |
            If using the OpenID Connect or OAuth 2.0 provider it issues a redirect to the providers page.
          headers:
            Location:
              schema:
                $ref: '#/components/schemas/URL'
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Authenticate with OIDC Provider
      tags:
      - Open ID Connect
  /auth/signin/oidc/{providerID}/callback:
    get:
      description: "This is called by the users browser once their OpenID Connect\
        \ provider has authenticated the user. The \nOIDC provider will send tokens\
        \ we inspect and use to obtain their information and log them into the system.\n"
      operationId: OIDCCallback
      parameters:
      - description: Name of the Provider to use
        in: path
        name: providerID
        required: true
        schema:
          example: my-oidc-provider
          maxLength: 20
          pattern: ^[a-z0-9-]+$
          type: string
      responses:
        "302":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: |
            Redirects to where we want to send the user to handle verification of device
          headers:
            Location:
              schema:
                $ref: '#/components/schemas/URL'
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Callback from OIDC Provider
      tags:
      - Open ID Connect
  /auth/verify:
    post:
      description: Checks to ensure a device is verified and if not how to go about
        getting it verified
      operationId: isDeviceVerified
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceInfo'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeviceVerification'
                maxItems: 300
                type: array
          description: Devices
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Device verification
      tags:
      - Verification
  /auth/verify/email:
    post:
      description: Checks to ensure a device is verified and if not how to go about
        getting it verified
      operationId: checkVerificationCodeFromEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyViaEmail'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceVerification'
          description: Devices
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Device verification
      tags:
      - Verification
  /auth/verify/email/send:
    post:
      description: Send device verification code via email to the email address of
        the user
      operationId: sendVerificationCodeViaEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendViaEmail'
        required: true
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Send code via email
      tags:
      - Verification
  /oauth2/token:
    post:
      description: Use the `client_id` and `client_secret` to generate an access token.
      operationId: CreateOAuth2Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCredentialsGrantToAccessTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCredentialsGrantToAccessTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
          description: Successfully exchanged the code to create a token
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenErrorResponse'
          description: Failure create token
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      security:
      - OAuth2Credentials: []
      summary: Create access token
      tags:
      - Access token
  /oauth2/revoke:
    post:
      description: Allows clients to notify the authorization server that a previously
        obtained refresh or access token is no longer needed
      operationId: RevokeOAuth2Token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RevokeTokenRequest'
        required: true
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Successful empty response for unauthorized or any other returned
            http status code.
        "400":
          description: Failed to revoke token
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      security:
      - OAuth2Credentials: []
      summary: Revoke access token
      tags:
      - Access token
  /session:
    delete:
      description: Logs out of the current session and disables it
      operationId: disableSession
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Delete this session and logout
      tags:
      - Session
    get:
      description: Returns session information if still valid
      operationId: getSession
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: session information
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get current session information
      tags:
      - Session
  /session-refresh:
    post:
      description: Refresh the cookie to keep a user logged in
      operationId: refreshSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceInfo'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: session information
      summary: Refresh Cookie
      tags:
      - Devices
  /invites:
    get:
      description: List outstanding invites for an account
      operationId: listInvites
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invite'
                maxItems: 300
                type: array
          description: Invites that are outstanding
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List invites
      tags:
      - Invites
    parameters:
    - description: ID of the account.
      explode: false
      in: header
      name: X-Account-ID
      required: false
      schema:
        $ref: '#/components/schemas/AccountID'
      style: simple
    post:
      description: Send an email invite to a user
      operationId: sendInvite
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendInvite'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
          description: Invite sent
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Send invite
      tags:
      - Invites
  /invites/{inviteID}:
    delete:
      description: Revoke an invite that was sent and invalidate the token.
      operationId: disableInvite
      parameters:
      - description: InviteID of the invite to disable
        in: path
        name: inviteID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "204":
          description: Invite was removed
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Disable invite
      tags:
      - Invites
  /invites/{inviteID}/accept:
    put:
      description: Accept an invite and add user to the account
      operationId: acceptInvite
      parameters:
      - description: InviteID of the invite to accept
        in: path
        name: inviteID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: Invite was accepted
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Accept invite
      tags:
      - Invites
  /invites/{inviteID}/decline:
    put:
      description: Decline an invite
      operationId: declineInvite
      parameters:
      - description: InviteID of the invite to decline
        in: path
        name: inviteID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "204":
          description: Invite was declined
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Decline invite
      tags:
      - Invites
  /invites/resend:
    parameters:
    - description: ID of the account.
      explode: false
      in: header
      name: X-Account-ID
      required: false
      schema:
        $ref: '#/components/schemas/AccountID'
      style: simple
    post:
      description: Send an email re-invite to a user
      operationId: resendInvite
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendInvite'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
          description: Invite sent
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Resend invite
      tags:
      - Invites
  /confirm/invite:
    get:
      description: Confirm an invite is valid
      operationId: confirmInvite
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Call was accepted, check response body for verification data.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      summary: Confirm invite
      tags:
      - Invites
  /accounts:
    get:
      description: |
        List or search accounts to which the caller is connected.<br><br>
        All supported query parameters are optional. If none are provided
        the response will include all connected accounts. Pagination is
        supported via the `skip` and `count` query parameters.<br><br>
        Searching by name and email will overlap and return results based on relevance.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listAccounts
      parameters:
      - description: |
          Filter connected accounts by name.<br><br>
          If provided, this query will attempt to find matches against the following Account and Profile fields:
          <ul>
            <li>Account `displayName`</li>
            <li>Individual Profile `firstName`, `middleName`, and `lastName`</li>
            <li>Business Profile `legalBusinessName`</li>
          </ul>
        example: Frank
        in: query
        name: name
        schema:
          type: string
      - description: |
          Filter connected accounts by email address.<br><br>
          Provide the full email address to filter by email.
        example: someone@moov.io
        in: query
        name: email
        schema:
          type: string
      - description: |
          Filter connected accounts by AccountType.<br><br>
          If the `type` parameter is used in combination with `name`, only the corresponding type's name fields will be searched.
          For example, if `type=business` and `name=moov`, the search will attempt to find matches against the display name and Business Profile name fields (`legalBusinessName`, and `doingBusinessAs`).
        example: business
        in: query
        name: type
        schema:
          $ref: '#/components/schemas/AccountType'
      - description: |
          Serves as an optional alias from a foreign/external system which can be used to reference this resource.
        example: 4528aba-b9a1-11eb-8529-0242ac13003
        in: query
        name: foreignID
        schema:
          $ref: '#/components/schemas/ForeignID'
      - description: |
          Filter by the `verificationStatus` of accounts.
        example: resubmit
        in: query
        name: verification_status
        schema:
          $ref: '#/components/schemas/AccountVerificationStatus'
      - description: |
          Filter disconnected accounts.<br><br>
          If true, the response will include disconnected accounts.
        example: true
        in: query
        name: includeDisconnected
        schema:
          type: boolean
      - description: Optional parameter to limit the number of results in the query.
        example: 10
        in: query
        name: count
        schema:
          default: 20
          maximum: 200
          type: integer
      - description: The number of items to offset before starting to collect the
          result set.
        example: 10
        in: query
        name: skip
        schema:
          type: integer
      - description: |
          Filter connected accounts by the capability.
        in: query
        name: capability
        schema:
          $ref: '#/components/schemas/CapabilityID'
      - description: |
          Filter connected accounts by the capability status.
        in: query
        name: capabilityStatus
        schema:
          $ref: '#/components/schemas/CapabilityStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: All connected accounts matching the filter parameters.
        "422":
          description: The request body could not be processed
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List accounts
      tags:
      - Accounts
    post:
      description: |
        You can create **business** or **individual** accounts for your users (i.e., customers, merchants) by passing the required information to Moov. Requirements differ per account type and requested [capabilities](https://docs.moov.io/guides/accounts/capabilities/requirements/).

        If you're requesting the `wallet`, `send-funds`, `collect-funds`, or `card-issuing` capabilities, you'll need to:
          + Send Moov the user [platform terms of service agreement](https://docs.moov.io/guides/accounts/requirements/platform-agreement/) acceptance. This can be done upon account creation, or by [patching](https://docs.moov.io/api/moov-accounts/accounts/patch/) the account using the `termsOfService` field.

        If you're creating a business account with the business type `llc`, `partnership`, or `privateCorporation`, you'll need to:
          + Provide [business representatives](https://docs.moov.io/api/moov-accounts/representatives/) after creating the account.
          + [Patch](https://docs.moov.io/api/moov-accounts/accounts/patch/) the account to indicate that business representative ownership information is complete.

        Visit our documentation to read more about [creating accounts](https://docs.moov.io/guides/accounts/creating-accounts/) and [verification requirements](https://docs.moov.io/guides/accounts/requirements/identity-verification/).

        Note that the `mode` field (for production or sandbox) is only required when creating a _facilitator_ account. All non-facilitator account requests will ignore the mode field and be set to the calling facilitator's mode.

        To use this endpoint from the browser, you will need to specify the `/accounts.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: createAccount
      parameters:
      - description: |
          Optional header that indicates whether to wait for the connection to be created before returning from the account creation.
        in: header
        name: X-Wait-For
        required: false
        schema:
          $ref: '#/components/schemas/AccountWaitFor'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account created
        "409":
          description: ForeignID already associated with another account.
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Create account
      tags:
      - Accounts
  /accounts/{accountID}:
    delete:
      description: "To use this endpoint from the browser, you'll need to specify\
        \ the `/accounts/{accountID}/profile.disconnect` scope when generating a [token](https://docs.moov.io/api/#tag/Access-token),\
        \ and provide the changed information.  \n\nThis will sever the connection\
        \ between you and the account specified and it will no longer be listed as\
        \ active in the list of accounts. This also means you'll only have read-only\
        \ access to the account going forward for reporting purposes. \n"
      operationId: disconnectAccount
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "204":
          description: Account disconnected
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Disconnect account
      tags:
      - Accounts
    get:
      description: Retrieves details for the account with the specified ID. <br><br>
        To use this endpoint from the browser, you will need to specify the `/accounts/{accountID}/profile.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getAccount
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: The created account.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get account
      tags:
      - Accounts
    patch:
      description: "To use this endpoint from the browser, you'll need to specify\
        \ the `/accounts/{accountID}/profile.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/),\
        \ and provide the changed information.  \n\nWhen **can** profile data be updated:\
        \  \n  + For unverified accounts, all profile data can be edited.\n  + During\
        \ the verification process, missing or incomplete profile data can be edited.\n\
        \  + Verified accounts can only add missing profile data.  \n\n  When **can't**\
        \ profile data be updated:  \n  + Verified accounts cannot change any existing\
        \ profile data.  \n\nIf you need to update information in a locked state,\
        \ please contact Moov support.\n"
      operationId: patchAccount
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: The patched account.
        "400":
          description: The request body was invalid.
        "404":
          description: No account with the specified accountID was found.
        "409":
          description: "- Account fields locked due to verification status \n - Account\
            \ type cannot be changed \n - ForeignID already associated with another\
            \ account"
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Patch account
      tags:
      - Accounts
  /tos-token:
    get:
      description: Generates a non-expiring token that can then be used to accept
        Moov's terms of service. This token can only be generated via API. Any Moov
        account requesting the `collect-funds`, `send-funds`, `wallet`, or `card-issuing`
        capabilities must accept Moov's terms of service, then have the generated
        terms of service token patched to the account. Read more in our [docs](https://docs.moov.io/guides/accounts/requirements/platform-agreement/).
      operationId: getTermsOfServiceToken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfServiceToken'
          description: The newly generated terms of service token.
        "422":
          description: Required request headers were missing or contained unprocessable
            data
      summary: Get terms of service token
      tags:
      - Accounts
  /accounts/{accountID}/countries:
    get:
      description: Retrieve the specified countries of operation for an account. <br><br>
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/profile.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getAccountCountries
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Countries'
          description: The requested countries.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get account countries
      tags:
      - Accounts
    put:
      description: Assign the countries of operation for an account. This endpoint
        will always overwrite the previously assigned values. <br><br> To use this
        endpoint from the browser, you'll need to specify the `/accounts/{accountID}/profile.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: assignAccountCountries
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Countries'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Countries'
          description: Countries assigned to account.
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Assign Account Countries
      tags:
      - Accounts
  /accounts/{accountID}/representatives:
    get:
      description: A Moov account may have multiple representatives depending on the
        associated business's ownership and management structure. You can use this
        method to list all the representatives for a given Moov account. Note that
        Moov accounts associated with an individual do not have representatives. <br><br>
        To use this endpoint from the browser, you need to specify the `/accounts/{accountID}/representatives.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listRepresentatives
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Representative'
                type: array
          description: Successfully retrieved representatives
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List representatives
      tags:
      - Representatives
    post:
      description: Moov accounts associated with businesses require information regarding
        individuals who represent the business. You can provide this information by
        creating a representative. Each account is allowed a maximum of 7 representatives.<br><br>
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/representatives.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: createRepresentative
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepresentative'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Representative'
          description: Representative created.
        "404":
          description: The specified account or representative was not found.
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Create representative
      tags:
      - Representatives
  /accounts/{accountID}/representatives/{representativeID}:
    delete:
      description: Deletes a business representative associated with a Moov account.<br><br>
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/representatives.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: deleteRepresentative
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the representative.
        explode: false
        in: path
        name: representativeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "204":
          description: Representative deleted.
        "404":
          description: The specified account or representative was not found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Delete a representative
      tags:
      - Representatives
    get:
      description: Retrieve a specific representative associated with a given Moov
        account. <br><br> To use this endpoint from the browser, you'll need to specify
        the `/accounts/{accountID}/representatives.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getRepresentative
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the representative.
        explode: false
        in: path
        name: representativeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Representative'
          description: The representative.
        "404":
          description: No representative with the specified representativeID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get representative
      tags:
      - Representatives
    patch:
      description: "If a representative's information has changed you can patch the\
        \ information associated with a specific representative ID.<br>  \nTo use\
        \ this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/representatives.write`\
        \ scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/),\
        \ and provide the changed information.\n\nWhen **can** profile data be updated:\
        \  \n  + For unverified representatives, all profile data can be edited.\n\
        \  + During the verification process, missing or incomplete profile data can\
        \ be edited.\n  + Verified representatives can only add missing profile data.\
        \  \n\n  When **can't** profile data be updated:  \n  + Verified representatives\
        \ cannot change any existing profile data.  \n\nIf you need to update information\
        \ in a locked state, please contact Moov support.\n"
      operationId: patchRepresentative
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the representative.
        explode: false
        in: path
        name: representativeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRepresentativeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Representative'
          description: representative patched
        "404":
          description: The specified account or representative was not found.
        "409":
          description: Representative fields locked due to verification status.
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Patch representative
      tags:
      - Representatives
  /users/{userID}:
    get:
      description: Returns the specific user if they have access
      operationId: getUser
      parameters:
      - description: UserID of the user to load
        in: path
        name: userID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: user requested
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get user
      tags:
      - Users
    put:
      description: Updates the specific user with the new values
      operationId: updateUser
      parameters:
      - description: UserID of the user to update
        in: path
        name: userID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: user requested
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Update User
      tags:
      - Users
  /users/{userID}/accounts:
    get:
      description: Returns the list of accounts a user has access to
      operationId: getUserAccounts
      parameters:
      - description: UserID of the user to load
        in: path
        name: userID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: A list of accessible accounts by that user
                items:
                  $ref: '#/components/schemas/UserAccount'
                type: array
          description: user requested
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get accounts user has access to
      tags:
      - Users
    parameters:
    - description: ID of the account.
      explode: false
      in: header
      name: X-Account-ID
      required: false
      schema:
        $ref: '#/components/schemas/AccountID'
      style: simple
  /users/{userID}/invites:
    get:
      description: Returns the pending invitiations sent to the user by user on other
        accounts
      operationId: getUserInvites
      parameters:
      - description: UserID of the user to load
        in: path
        name: userID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                description: A list of pending invites
                items:
                  $ref: '#/components/schemas/UserInvite'
                type: array
          description: Pending invites
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get pending invites sent for user
      tags:
      - Users
  /roles:
    get:
      description: Retrieve all roles for the account
      operationId: listRoles
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                maxItems: 300
                type: array
          description: Roles that are outstanding
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List roles
      tags:
      - Roles
    parameters:
    - description: ID of the account.
      explode: false
      in: header
      name: X-Account-ID
      required: false
      schema:
        $ref: '#/components/schemas/AccountID'
      style: simple
    post:
      description: Add a new role for the account
      operationId: createRole
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRole'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role created
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Create role
      tags:
      - Roles
  /roles/{roleID}:
    delete:
      description: Disable a Role under the account
      operationId: disableRole
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the role to update
        in: path
        name: roleID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "204":
          description: Role was removed.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Delete role
      tags:
      - Roles
    get:
      description: Retrieve a specific Role under the account
      operationId: getRole
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the role to update
        in: path
        name: roleID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Roles that are outstanding
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get Role
      tags:
      - Roles
    parameters:
    - description: ID of the account.
      explode: false
      in: header
      name: X-Account-ID
      required: false
      schema:
        $ref: '#/components/schemas/AccountID'
      style: simple
    - description: ID of the role to update
      in: path
      name: roleID
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    put:
      description: Modify an existing Role for the account
      operationId: updateRole
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the role to update
        in: path
        name: roleID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRole'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role was updated.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Update role
      tags:
      - Roles
  /members:
    get:
      description: Retrieve all members connected to the account
      operationId: Members.list
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                maxItems: 300
                type: array
          description: Member Users connected to the account
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List members
      tags:
      - Roles
    parameters:
    - description: ID of the account.
      explode: false
      in: header
      name: X-Account-ID
      required: false
      schema:
        $ref: '#/components/schemas/AccountID'
      style: simple
  /users/{userID}/devices:
    get:
      description: Returns the list of devices that are currently remembered
      operationId: listDevicesForUser
      parameters:
      - description: Which userID to list the devices of
        in: path
        name: userID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                maxItems: 300
                type: array
          description: Devices
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Devices for a user
      tags:
      - Devices
  /users/{userID}/devices/{deviceID}:
    delete:
      description: Disable a specific device
      operationId: disableDeviceForUser
      parameters:
      - description: Which userID to list the devices of
        in: path
        name: userID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - description: Which device that belongs to the user to get
        in: path
        name: deviceID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Disable device
      tags:
      - Devices
    get:
      description: Get Information on a specific device
      operationId: getDeviceForUser
      parameters:
      - description: Which userID to list the devices of
        in: path
        name: userID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - description: Which device that belongs to the user to get
        in: path
        name: deviceID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Devices
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Specific device
      tags:
      - Devices
  /applications:
    get:
      description: List applications for an account
      operationId: listApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: Applications attached to this account
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List applications
      tags:
      - Application
    post:
      description: Enable this account as a application provider
      operationId: enableApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Successfully created application
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Enable this account as a application provider
      tags:
      - Application
  /applications/{applicationID}:
    delete:
      description: Disables an application
      operationId: disableApplication
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationID
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationID'
        style: simple
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Successfully disabled resource
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Disables an application
      tags:
      - Application
    parameters:
    - description: ID of the application
      explode: false
      in: path
      name: applicationID
      required: true
      schema:
        $ref: '#/components/schemas/ApplicationID'
      style: simple
    put:
      description: Updates an application
      operationId: updateApplication
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationID
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Successfully created application
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Update an application
      tags:
      - Application
  /applications/{applicationID}/keys:
    get:
      description: Lists keys for an application
      operationId: listApplicationKeys
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationID
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationKey'
                maxItems: 10
                type: array
          description: Keys attached to this application and account
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List keys for an application
      tags:
      - Application
    parameters:
    - description: ID of the application
      explode: false
      in: path
      name: applicationID
      required: true
      schema:
        $ref: '#/components/schemas/ApplicationID'
      style: simple
    post:
      description: Create a new application key that can be used for OAuth 2.0 authentication
      operationId: createApplicationKeys
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationID
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedApplicationKey'
          description: Invite sent
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Create a new application key
      tags:
      - Application
  /applications/{applicationID}/keys/{applicationKeyID}:
    delete:
      description: Disables an application key
      operationId: disableApplicationKey
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationID
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationID'
        style: simple
      - description: ID of the application key
        explode: false
        in: path
        name: applicationKeyID
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationKeyID'
        style: simple
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Successfully disabled resource
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Disables an application key
      tags:
      - Application
    parameters:
    - description: ID of the application
      explode: false
      in: path
      name: applicationID
      required: true
      schema:
        $ref: '#/components/schemas/ApplicationID'
      style: simple
    - description: ID of the application key
      explode: false
      in: path
      name: applicationKeyID
      required: true
      schema:
        $ref: '#/components/schemas/ApplicationKeyID'
      style: simple
    put:
      description: Updates an application key
      operationId: updateApplicationKey
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationID
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationID'
        style: simple
      - description: ID of the application key
        explode: false
        in: path
        name: applicationKeyID
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationKeyID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKey'
          description: Application key updated
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Updates an application key
      tags:
      - Application
  /connections:
    get:
      description: Lists all the accounts that a specific account is connected to.
      operationId: listConnections
      parameters:
      - description: ID of the account.
        explode: false
        in: header
        name: X-Account-ID
        required: false
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Connection'
                maxItems: 300
                type: array
          description: Connections
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List connections
      tags:
      - Connections
    parameters:
    - description: ID of the account.
      explode: false
      in: header
      name: X-Account-ID
      required: false
      schema:
        $ref: '#/components/schemas/AccountID'
      style: simple
  /accounts/{accountID}/wallets:
    get:
      description: List the wallets associated with a Moov account. <br><br> To use
        this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/wallets.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listWalletsForAccount
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Wallet'
                maxItems: 10
                type: array
          description: Wallets associated with the given account
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List wallets
      tags:
      - Wallets
  /accounts/{accountID}/wallets/{walletID}:
    get:
      description: Get information on a specific wallet (e.g., the available balance).
        <br><br> To use this endpoint from the browser, you'll need to specify the
        `/accounts/{accountID}/wallets.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getWalletForAccount
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the wallet
        explode: false
        in: path
        name: walletID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
          description: Wallets associated with the given account
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get wallet
      tags:
      - Wallets
  /accounts/{accountID}/wallets/{walletID}/transactions:
    get:
      description: List all the transactions associated with a particular Moov wallet.
        <br><br> To use this endpoint from the browser, you'll need to specify the
        `/accounts/{accountID}/wallets.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listWalletTransactions
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the wallet
        explode: false
        in: path
        name: walletID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      - description: Optional parameter to filter by transaction type.
        example: card-payment
        in: query
        name: transactionType
        schema:
          type: string
      - description: Optional parameter to filter by source type (i.e. transfer, dispute,
          issuing-transaction).
        example: dispute
        in: query
        name: sourceType
        schema:
          type: string
      - description: Optional parameter to filter by source ID.
        example: 9506dbf6-4208-44c3-ad8a-e4431660e1f2
        in: query
        name: sourceID
        schema:
          type: string
      - description: Optional parameter to filter by status (`pending` or `completed`).
        example: pending
        in: query
        name: status
        schema:
          type: string
      - description: Optional parameter to limit the number of results in the query.
        example: 10
        in: query
        name: count
        schema:
          default: 200
          type: integer
      - description: The number of items to offset before starting to collect the
          result set.
        example: 10
        in: query
        name: skip
        schema:
          type: integer
      - description: Optional date-time which inclusively filters all transactions
          created after this date-time.
        example: 2009-11-10T23:00:00.000+0000
        in: query
        name: createdStartDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional date-time which exclusively filters all transactions
          created before this date-time.
        example: 2009-11-13T01:00:00.000+0000
        in: query
        name: createdEndDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional date-time which inclusively filters all transactions
          completed after this date-time.
        example: 2009-11-10T23:00:00.000+0000
        in: query
        name: completedStartDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional date-time which exclusively filters all transactions
          completed before this date-time.
        example: 2009-11-13T01:00:00.000+0000
        in: query
        name: completedEndDateTime
        schema:
          format: RFC-3339
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WalletTransaction'
                maxItems: 100
                type: array
          description: Transactions associated with the wallet.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List wallet transactions
      tags:
      - Wallet transactions
  /accounts/{accountID}/wallets/{walletID}/transactions/{transactionID}:
    get:
      description: Get details on a specific wallet transaction. <br><br> To use this
        endpoint from a browser, you'll need to specify the `/accounts/{accountID}/wallets.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getWalletTransaction
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the wallet
        explode: false
        in: path
        name: walletID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      - description: ID associated with the wallet transaction.
        in: path
        name: transactionID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletTransaction'
          description: Transaction associated with the wallet.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get wallet transaction
      tags:
      - Wallet transactions
  /transfers:
    get:
      description: List all the transfers associated with a particular Moov account.
        <br><br> To use this endpoint from the browser, you'll need to specify the
        `/accounts/{yourAccountID}/transfers.read` scope when generating a [token](https://docs.moov.io/api/#tag/Access-token).
        The accountID included must be your accountID. You can find your accountID
        on the [Business details](https://dashboard.moov.io/settings/business) page.
        <br><br> When you run this request, you retrieve 200 transfers at a time.
        You can advance past a results set of 200 transfers by using the `skip` parameter
        (for example, if you set `skip`= 10, you will see a results set of 200 transfers
        after the first 2000). If you are searching a high volume of transfers, the
        request will likely process very slowly. To achieve faster performance, restrict
        the data as much as you can by using the `StartDateTime` and `EndDateTime`
        parameters for a limited period of time. You can run multiple requests in
        smaller time window increments until you've retrieved all the transfers you
        need.
      operationId: listTransfers
      parameters:
      - allowReserved: true
        description: Optional, comma-separated account IDs in which the response is
          filtered based on whether the account ID is the source or destination.
        example: 9506dbf6-4208-44c3-ad8a-e4431660e1f2,3f9969cf-a1f3-4d83-8ddc-229a506651cf,9fdb70f8-79f5-4016-853e-34c40c3b09b0
        in: query
        name: accountIDs
        schema:
          type: string
      - description: Optional parameter for filtering transfers by status.
        in: query
        name: status
        schema:
          $ref: '#/components/schemas/TransferStatus'
      - description: Optional date-time which inclusively filters all transfers created
          after this date-time.
        example: 2009-11-10T23:00:00.000+0000
        in: query
        name: startDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional date-time which exclusively filters all transfers created
          before this date-time.
        example: 2009-11-13T01:00:00.000+0000
        in: query
        name: endDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional ID to filter for transfers in the same group.
        example: 683660e3-218c-4f5a-b193-930bd6d2f98e
        in: query
        name: groupID
        schema:
          type: string
      - description: Optional parameter to limit the number of results in the query.
        example: 10
        in: query
        name: count
        schema:
          default: 200
          type: integer
      - description: The number of items to offset before starting to collect the
          result set.
        example: 10
        in: query
        name: skip
        schema:
          type: integer
      - description: Optional parameter to only return refunded transfers.
        example: false
        in: query
        name: refunded
        schema:
          type: boolean
      - description: Optional parameter to only return disputed transfers.
        example: false
        in: query
        name: disputed
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                listTransfers:
                  $ref: '#/components/examples/listTransfers'
              schema:
                $ref: '#/components/schemas/GetTransfers'
          description: List of transfers.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List transfers
      tags:
      - Transfers
    post:
      description: Move money by providing the source, destination, and amount in
        the request body. <br><br> If you are running a **server-side** integration,
        you will use your API keys per our [authentication guidelines](https://docs.moov.io/api/authentication/api-authentication/#server-side-basic-authentication).
        <br><br> If you are running a **client-side** integration, you'll need to
        specify the `/accounts/{yourAccountID}/transfers.write` scope when generating
        a [token](https://docs.moov.io/api/#tag/Access-token). The accountID included
        must be your accountID. You can find your accountID on the [Business details](https://dashboard.moov.io/settings/business)
        page.
      operationId: createTransfer
      parameters:
      - description: Prevents duplicate transfers from being created. Note that we
          only accept UUID v4.
        in: header
        name: X-Idempotency-Key
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - description: Optional header that indicates whether to return a synchronous
          response that includes full transfer and rail-specific details or an asynchronous
          response indicating the transfer was created (this is the default response
          if the header is omitted).
        in: header
        name: X-Wait-For
        required: false
        schema:
          $ref: '#/components/schemas/WaitFor'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferPostResponse'
          description: Successfully created a transfer.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedTransfer'
          description: A transfer was successfully created but an error occurred while
            generating the synchronous response. The asynchronous response object
            will be returned.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransferFull'
          description: A transfer was successfully created but a timeout occurred
            while waiting for a synchronous response. Rail-specific details may be
            missing from the response object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request, an error message will be available in the
            response body.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransferFull'
          description: Attempted to create a transfer using a duplicate X-Idempotency-Key
            header.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        "422":
          description: The request body could not be processed.
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Create a transfer
      tags:
      - Transfers
  /transfers/{transferID}:
    get:
      description: Retrieve full transfer details such as the amount, source, and
        destination. Payment rail-specific details are included in the source and
        destination. <br><br> To use this endpoint from the browser, you'll need to
        specify the `/accounts/{yourAccountID}/transfers.read` scope when generating
        a [token](https://docs.moov.io/api/#tag/Access-token). The accountID included
        must be your accountID. You can find your accountID on the [Business details](https://dashboard.moov.io/settings/business)
        page.
      operationId: getTransfer
      parameters:
      - description: Identifier for the transfer.
        explode: false
        in: path
        name: transferID
        required: true
        schema:
          $ref: '#/components/schemas/TransferID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                card-to-wallet:
                  $ref: '#/components/examples/getTransferCardToWallet'
                bank-to-wallet:
                  $ref: '#/components/examples/getTransferBankToWallet'
              schema:
                $ref: '#/components/schemas/GetTransferFull'
          description: Details of a transfer.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get a transfer
      tags:
      - Transfers
    patch:
      description: Update the metadata contained on a transfer <br><br> To use this
        endpoint from the browser, you'll need to specify the `/accounts/{yourAccountID}/transfers.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
        The accountID included must be your facilitator accountID. You can find your
        accountID on the [Business details](https://dashboard.moov.io/settings/business)
        page.
      operationId: patchTransfer
      parameters:
      - description: Identifier for the transfer.
        explode: false
        in: path
        name: transferID
        required: true
        schema:
          $ref: '#/components/schemas/TransferID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTransfer'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                transferID: e72b3a0d-fcb4-417c-93c3-4a34f242ae52
                createdOn: 2023-09-09T14:15:22Z
                completedOn: 2023-09-10T18:23:56Z
                status: completed
                amount:
                  currency: USD
                  value: 10000
                description: Collect monthly gym membership dues
                metadata:
                  property1: string
                  property2: string
                facilitatorFee:
                  total: 127
                  totalDecimal: "1.265"
                  markup: 25
                  markupDecimal: "0.249"
                moovFee: 223
                moovFeeDecimal: "2.23"
                moovFeeDetails:
                  cardScheme: "20.1575"
                  discount: "2.10"
                  moovProcessing: ".0567"
                groupID: e17b4be0-6979-4764-b0dc-9487f8fb3ef4
                refundedAmount:
                  currency: USD
                  value: 10000
                refunds:
                - refundID: d4963079-5b35-4d17-981e-8f851753f786
                  createdOn: 2023-09-13T08:15:22Z
                  updatedOn: 2023-09-14T15:20:44Z
                  status: completed
                  amount:
                    currency: USD
                    value: 10000
                  cardDetails:
                    status: completed
                    initiatedOn: 2023-09-13T08:16:22Z
                    confirmedOn: 2023-09-13T08:17:44Z
                    settledOn: 2023-09-14T12:15:33Z
                    completedOn: 2023-09-14T12:20:45Z
                source:
                  paymentMethodID: 9555d9b8-d1cf-4b71-8f0d-006397e0ec46
                  paymentMethodType: card-payment
                  account:
                    accountID: 4ac701aa-1d5d-4d6c-9319-e9de8a44f17d
                    email: natalie@example.com
                    displayName: Natalie Sharp
                  card:
                    cardID: 4e73fb4c-dc75-4be3-bd5d-7d578db12007
                    fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
                    brand: American Express
                    cardType: debit
                    lastFourCardNumber: "1234"
                    expiration:
                      month: "01"
                      year: "25"
                    holderName: Natalie Sharp
                    billingAddress:
                      addressLine1: 123 Main Street
                      addressLine2: Apt 302
                      city: Boulder
                      stateOrProvince: CO
                      postalCode: "80301"
                      country: US
                    cardVerification:
                      cvv: match
                      addressLine1: match
                      postalCode: match
                    issuer: GRINGOTTS BANK
                    issuerCountry: US
                  cardDetails:
                    status: completed
                    transactionSource: recurring
                    initiatedOn: 2023-10-30T11:15:22Z
                    confirmedOn: 2023-10-30T13:13:52Z
                    settledOn: 2023-10-30T14:11:20Z
                    completedOn: 2023-10-30T14:15:45Z
                    feeProgram: Visa Signature and Visa Infinite (Spend not-qualified)
                      Product 1
                destination:
                  paymentMethodID: 1ae0833b-dd11-4737-9671-fefc7863a3b4
                  paymentMethodType: moov-wallet
                  account:
                    accountID: 3dfff852-927d-47e8-822c-2fffc57ff6b9
                    email: amanda@classbooker.dev
                    displayName: Whole Body Fitness
                  wallet:
                    walletID: 81fa4538-8e10-4499-9efd-c455863dae3e
              schema:
                $ref: '#/components/schemas/GetTransferFull'
          description: Details of a transfer.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Patch transfer metadata
      tags:
      - Transfers
  /transfer-options:
    post:
      description: |
        Generate available payment method options for one or multiple transfer participants depending on the accountID or paymentMethodID you supply in the request. <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{yourAccountID}/transfers.read` scope when generating a [token](https://docs.moov.io/api/#tag/Access-token). The accountID included must be your accountID. You can find your accountID on the [Business details](https://dashboard.moov.io/settings/business) page.
      operationId: createTransferOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedTransferOptions'
          description: Succesfully created transfer options.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Generate transfer options
      tags:
      - Transfers
  /transfers/{transferID}/refunds:
    get:
      description: Get a list of refunds for a card transfer. <br><br> To use this
        endpoint from the browser, you'll need to specify the `/accounts/{accountID}/transfers.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getRefunds
      parameters:
      - description: Identifier for the transfer.
        explode: false
        in: path
        name: transferID
        required: true
        schema:
          $ref: '#/components/schemas/TransferID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRefunds'
          description: List of refunds.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get a list of refunds for a card transfer
      tags:
      - Transfers
    post:
      description: <strong>Use the [Cancel or refund a card transfer](https://docs.moov.io/api/money-movement/refunds/cancel/)
        endpoint for more comprehensive cancel and refund options.</strong> See the
        [reversals](https://docs.moov.io/guides/money-movement/accept-payments/card-acceptance/reversals/)
        guide for more information. <br><br> Initiate a refund for a card transfer.
        <br><br> To use this endpoint from the browser, you'll need to specify the
        `/accounts/{accountID}/transfers.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: refundTransfer
      parameters:
      - description: Identifier for the transfer.
        explode: false
        in: path
        name: transferID
        required: true
        schema:
          $ref: '#/components/schemas/TransferID'
        style: simple
      - description: Prevents duplicate refunds from being created. Note that we only
          accept UUID v4.
        in: header
        name: X-Idempotency-Key
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - description: Optional header that indicates whether to return a synchronous
          response that includes the full refund and card transaction details or an
          asynchronous response indicating the refund was created (this is the default
          response if the header is omitted).
        in: header
        name: X-Wait-For
        schema:
          $ref: '#/components/schemas/WaitFor'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefund'
        required: false
      responses:
        "200":
          content:
            application/json:
              examples:
                synchronous-success:
                  $ref: '#/components/examples/createSyncRefundSuccess'
                synchronous-failure:
                  $ref: '#/components/examples/createSyncRefundFailure'
                asynchronous:
                  $ref: '#/components/examples/createAsyncRefund'
              schema:
                $ref: '#/components/schemas/RefundPostResponse'
          description: Successfully initiated a card refund.
        "202":
          content:
            application/json:
              examples:
                timeout-created:
                  $ref: '#/components/examples/createSyncRefundTimeout'
              schema:
                $ref: '#/components/schemas/GetRefund'
          description: A refund was successfully created but an error occurred while
            waiting for a synchronous response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request, an error message will be available in the
            response body.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRefund'
          description: Attempted to initiate a refund using a duplicate X-Idempotency-Key
            header.
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Refund a transfer
      tags:
      - Transfers
  /transfers/{transferID}/refunds/{refundID}:
    get:
      description: Get details of a refund for a card transfer. <br><br> To use this
        endpoint from the browser, you'll need to specify the `/accounts/{accountID}/transfers.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getRefund
      parameters:
      - description: Identifier for the transfer.
        explode: false
        in: path
        name: transferID
        required: true
        schema:
          $ref: '#/components/schemas/TransferID'
        style: simple
      - description: Identifier for the refund.
        explode: false
        in: path
        name: refundID
        required: true
        schema:
          $ref: '#/components/schemas/RefundID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRefund'
          description: Details about a particular refund.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get refund details
      tags:
      - Transfers
  /transfers/{transferID}/reversals:
    post:
      description: Reverses a card transfer by initiating a cancellation or refund
        depending on the transaction status. <br><br> To use this endpoint from the
        browser, you'll need to specify the `/accounts/{accountID}/transfers.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: reverseTransfer
      parameters:
      - description: Identifier for the transfer.
        explode: false
        in: path
        name: transferID
        required: true
        schema:
          $ref: '#/components/schemas/TransferID'
        style: simple
      - description: Prevents duplicate reversals from being created.
        in: header
        name: X-Idempotency-Key
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReversal'
        required: false
      responses:
        "200":
          content:
            application/json:
              examples:
                cancellation-success:
                  $ref: '#/components/examples/createCancellationSuccess'
                refund-success:
                  $ref: '#/components/examples/createSyncRefundSuccess'
              schema:
                $ref: '#/components/schemas/CreatedReversal'
          description: Successfully initiated a reversal.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedReversal'
          description: Successfully initiated a reversal but an error occurred while
            waiting for a synchronous response.
        "400":
          content:
            application/json:
              examples:
                reversal-failure:
                  value:
                    error: reversal request failed, please try again with a new idempotency
                      key
              schema:
                $ref: '#/components/schemas/Error_2'
          description: Reversal request failed, an error message will be available
            in the response body.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedReversal'
          description: Attempted to initiate a reversal using a duplicate X-Idempotency-Key
            header.
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Cancel or refund a card transfer
      tags:
      - Transfers
  /accounts/{accountID}/bank-accounts:
    get:
      description: List all the bank accounts associated with a particular Moov account.
        <br><br> To use this endpoint from the browser, you'll need to specify the
        `/accounts/{accountID}/bank-accounts.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listBankAccounts
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccounts'
          description: Successfully retrieved bank accounts.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List bank accounts
      tags:
      - Bank accounts
    post:
      description: "Link a bank account to an existing Moov account. \n\nTo use this\
        \ endpoint from the browser, you'll need to specify the `/accounts/{accountID}/bank-accounts.write`\
        \ scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).\n\
        \nIt is strongly recommended that callers include the `X-Wait-For` header,\
        \ set to `payment-method`, if the newly linked \nbank-account is intended\
        \ to be used right away. If this header is not included, the caller will need\
        \ to poll the [List Payment \nMethods](https://docs.moov.io/api/sources/payment-methods/list/)\n\
        endpoint to wait for the new payment methods to be available for use.\n"
      operationId: bankAccount
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: "Optional header to wait for certain events, such as the creation\
          \ of a payment method, to occur before returning a response.\n\nWhen this\
          \ header is set to `payment-method`, the response will include any payment\
          \ methods that were created for the newly \nlinked card in the `paymentMethods`\
          \ field. Otherwise, the `paymentMethods` field will be omitted from the\
          \ response.\n"
        in: header
        name: X-Wait-For
        required: false
        schema:
          $ref: '#/components/schemas/WaitFor_2'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountResponse'
          description: Bank account added.
        "404":
          description: No Account with the specified accountID was found
        "409":
          description: "- Unable to get bank name for routing number \n - Duplicate\
            \ bank account"
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Bank account
      tags:
      - Bank accounts
  /accounts/{accountID}/bank-accounts/{bankAccountID}:
    delete:
      description: Discontinue using a specified bank account linked to a Moov account.
        <br><br> To use this endpoint from the browser, you'll need to specify the
        `/accounts/{accountID}/bank-accounts.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: deleteBank
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the bank account
        explode: false
        in: path
        name: bankAccountID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "204":
          description: Bank account deleted.
        "404":
          description: No bank account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Delete bank account
      tags:
      - Bank accounts
    get:
      description: Retrieve bank account details (i.e. routing number or account type)
        associated with a specific Moov account. <br><br> To use this endpoint from
        the browser, you'll need to specify the `/accounts/{accountID}/bank-accounts.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getBank
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the bank account
        explode: false
        in: path
        name: bankAccountID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountResponse'
          description: Successfully retrieved bank account.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get bank account
      tags:
      - Bank accounts
  /accounts/{accountID}/bank-accounts/{bankAccountID}/micro-deposits:
    post:
      description: Micro-deposits help confirm bank account ownership, helping reduce
        fraud and the risk of unauthorized activity. Use this method to initiate the
        micro-deposit verification, sending two small credit transfers to the bank
        account you want to confirm. If you request micro-deposits before 4:15PM ET,
        they will appear that same day. If you request micro-deposits any time after
        4:15PM ET, they will appear the next banking day. When the two credits are
        initiated, Moov simultaneously initiates a debit to recoup the micro-deposits.<br><br>
        `sandbox` - Micro-deposits initiated for a `sandbox` bank account will always
        be `$0.00` / `$0.00` and instantly verifiable once initiated. <br><br> To
        use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/bank-accounts.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: initiateMicroDeposits
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the bank account
        explode: false
        in: path
        name: bankAccountID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "204":
          description: Micro-deposits successfully initiated.
        "404":
          description: No account with the specified accountID was found.
        "422":
          description: The bank account is not a bank account or is already pending
            verification.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Initiate micro-deposits
      tags:
      - Bank accounts
    put:
      description: Complete the micro-deposit validation process by passing the amounts
        of the two transfers within three tries. <br><br> To use this endpoint from
        the browser, you'll need to specify the `/accounts/{accountID}/bank-accounts.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: completeMicroDeposits
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the bank account
        explode: false
        in: path
        name: bankAccountID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteMicroDepositsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteMicroDepositsResponse'
          description: Micro-Deposits Successfully verified
        "404":
          description: No account with the specified accountID was found or micro-deposits
            have not been sent for the source.
        "409":
          description: The amounts provided are incorrect or the bank account is in
            an unexpected state.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Complete micro-deposits
      tags:
      - Bank accounts
  /accounts/{accountID}/cards:
    get:
      description: "List all the active cards associated with a Moov account. \n<br><br>\
        \ To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.read`\
        \ scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).\n"
      operationId: listCards
      parameters:
      - description: ID of the Moov account representing the cardholder.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards'
          description: Successfully retrieved cards.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List cards
      tags:
      - Cards
    post:
      description: "Link a card to an existing Moov account. \n\nOnly use this endpoint\
        \ if you have provided Moov with a copy of your PCI attestation of compliance.\
        \ \n\nDuring card linking, the provided data will be verified by submitting\
        \ a $0 authorization (account verification) request. \nIf `merchantAccountID`\
        \ is provided, the authorization request will contain that account's statement\
        \ descriptor and address. \nOtherwise, the platform account's profile will\
        \ be used. If no statement descriptor has been set, the authorization will\
        \ \nuse the account's name instead.\n\nIt is strongly recommended that callers\
        \ include the `X-Wait-For` header, set to `payment-method`, if the newly linked\
        \ \ncard is intended to be used right away. If this header is not included,\
        \ the caller will need to poll the [List Payment \nMethods](https://docs.moov.io/api/sources/payment-methods/list/)\n\
        endpoint to wait for the new payment methods to be available for use.\n\n\
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.write`\
        \ scope\nwhen generating a [token](https://docs.moov.io/api/authentication/access-tokens/).\n"
      operationId: card
      parameters:
      - description: ID of the Moov account representing the cardholder.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: "Optional header to wait for certain events, such as the creation\
          \ of a payment method, to occur before returning a response.\n\nWhen this\
          \ header is set to `payment-method`, the response will include any payment\
          \ methods that were created for the newly \nlinked card in the `paymentMethods`\
          \ field. Otherwise, the `paymentMethods` field will be omitted from the\
          \ response.\n"
        in: header
        name: X-Wait-For
        required: false
        schema:
          $ref: '#/components/schemas/WaitFor_2'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: The card was successfully linked.
        "404":
          description: No account with the specified accountID was found.
        "409":
          description: Attempted to link card that already exists on the account.
        "422":
          content:
            application/json:
              examples:
                input-validation-failed:
                  value:
                    cardCvv: must contain digits only
                    cardNumber: must be a valid card number
                card-declined:
                  value:
                    error: 'card verification failure: card-not-activated'
              schema:
                additionalProperties:
                  type: object
                type: object
          description: The supplied card data appeared invalid or was declined by
            the issuer.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Link card
      tags:
      - Cards
  /accounts/{accountID}/cards/{cardID}:
    delete:
      description: Disables a card associated with a Moov account. <br><br> To use
        this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: deleteCard
      parameters:
      - description: ID of the Moov account representing the cardholder.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the card.
        explode: false
        in: path
        name: cardID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "204":
          description: Card disabled.
        "404":
          description: No card with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Disable card
      tags:
      - Cards
    get:
      description: Fetch a specific card associated with a Moov account. <br><br>
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getCard
      parameters:
      - description: ID of the Moov account representing the cardholder.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the card.
        explode: false
        in: path
        name: cardID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: Successfully retrieved card.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get card
      tags:
      - Cards
    patch:
      description: "Update a linked card and/or resubmit it for verification. If a\
        \ value is provided for CVV, \na new verification ($0 authorization) will\
        \ be submitted for the card. Updating the expiration date or \naddress will\
        \ update the information stored on file for the card but will not be verified.\
        \ \nOnly use this endpoint if you have provided Moov with a copy of your PCI\
        \ attestation of compliance. \n<br><br> To use this endpoint from the browser,\
        \ you'll need to specify the `/accounts/{accountID}/cards.write` scope when\
        \ generating a [token](https://docs.moov.io/api/authentication/access-tokens/).\n"
      operationId: updateCard
      parameters:
      - description: ID of the Moov account representing the cardholder.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the card.
        explode: false
        in: path
        name: cardID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
          description: Card updated.
        "404":
          description: No card with the specified accountID was found.
        "409":
          description: Attempting to update an existing disabled card.
        "422":
          content:
            application/json:
              examples:
                input-validation-failed:
                  value:
                    cardCvv: must contain digits only
                cvv-no-match:
                  value:
                    error: issue with information provided
                card-declined:
                  value:
                    error: 'card re-verification failure: do-not-honor'
              schema:
                additionalProperties:
                  type: object
                type: object
          description: The supplied card data appeared invalid or was declined by
            the issuer.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Update card
      tags:
      - Cards
  /accounts/{accountID}/apple-pay/domains:
    get:
      description: |
        Get domains registered with Apple Pay.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/apple-pay.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getApplePayMerchantDomains
      parameters:
      - description: ID of the Moov account acting as a merchant in a card transaction.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplePayMerchantDomains'
          description: Domains registered with Apple Pay.
        "404":
          description: No Apple Pay domains registered for this account were found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get Apple Pay domains
      tags:
      - Cards
    patch:
      description: |
        Add or remove domains to be registered with Apple Pay.
        <br><br> Any domains that will be used to accept payments must first be [verified](https://docs.moov.io/guides/sources/cards/apple-pay/#register-your-domains) with Apple.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/apple-pay.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: updateApplePayMerchantDomains
      parameters:
      - description: ID of the Moov account acting as a merchant in a card transaction.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplePayMerchantDomains'
        required: true
      responses:
        "204":
          description: Successfully updated domains registered with Apple Pay.
        "400":
          description: The request body was invalid.
        "404":
          description: No Apple Pay domains registered for this account were found.
        "417":
          description: Domain(s) not [verified](https://docs.moov.io/guides/sources/cards/apple-pay/#register-your-domains)
            with Apple.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Update Apple Pay domains
      tags:
      - Cards
    post:
      description: |
        Add domains to be registered with Apple Pay.
        <br><br> Any domains that will be used to accept payments must first be [verified](https://docs.moov.io/guides/sources/cards/apple-pay/#register-your-domains) with Apple.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/apple-pay.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: registerApplePayMerchantDomains
      parameters:
      - description: ID of the Moov account acting as a merchant in a card transaction.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterApplePayMerchantDomains'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplePayMerchantDomains'
          description: Domains registered with Apple Pay.
        "400":
          description: The request body was invalid.
        "409":
          description: Apple Pay domains already registered for this account.
        "417":
          description: Domain(s) not [verified](https://docs.moov.io/guides/sources/cards/apple-pay/#register-your-domains)
            with Apple.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Register Apple Pay domains
      tags:
      - Cards
  /accounts/{accountID}/apple-pay/sessions:
    post:
      description: |
        Create a session with Apple Pay to facilitate a payment.
        A successful response from this endpoint should be passed through to Apple Pay unchanged.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/apple-pay.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: createApplePaySession
      parameters:
      - description: ID of the Moov account acting as a merchant in a card transaction.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplePaySession'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplePaySession'
          description: Session created with Apple Pay.
        "422":
          description: An error occurred when linking an Apple Pay token.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Create Apple Pay session
      tags:
      - Cards
  /accounts/{accountID}/apple-pay/tokens:
    post:
      description: |
        Connect an Apple Pay token to the specified account.
        The `token` data is defined by Apple Pay and should be passed through from Apple Pay's response unmodified.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/cards.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: linkApplePayToken
      parameters:
      - description: ID of the Moov account representing the cardholder.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkApplePay'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedApplePayPaymentMethod'
          description: Apple Pay token linked.
        "422":
          description: An error occurred when linking an Apple Pay token.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Link Apple Pay token
      tags:
      - Cards
  /accounts/{accountID}/network-ids:
    get:
      description: |
        Retrieves network IDs for the specified Moov account.
        <br><br> To use this endpoint from the browser, you'll will need to specify the `/accounts/{accountID}/profile.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getNetworkIDs
      parameters:
      - description: ID of the Moov account acting as a merchant in a card transaction.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkIDs'
          description: The network IDs of the account.
        "404":
          description: No Account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get network IDs of an account
      tags:
      - Moov Internal
  /issuing/{accountID}/issued-cards:
    get:
      description: |
        List Moov issued cards existing for the account.
        <br><br> All supported query parameters are optional.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listIssuedCards
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: |
          Optional, comma-separated states to filter the Moov list issued cards response.
        example: active,pending-verification
        in: query
        name: states
        schema:
          $ref: '#/components/schemas/IssuedCardState'
      - description: Optional parameter to limit the number of results in the query.
        example: 10
        in: query
        name: count
        schema:
          default: 200
          type: integer
      - description: The number of items to offset before starting to collect the
          result set.
        example: 10
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedCards'
          description: Successfully retrieved cards.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List issued cards
      tags:
      - Card issuing
    post:
      description: |
        Request a virtual card be created.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: requestCard
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCard'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedCard'
          description: Card created.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Request card
      tags:
      - Card issuing
  /issuing/{accountID}/issued-cards/{issuedCardID}:
    get:
      description: |
        Retrieve a single issued card associated with a Moov account.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getIssuedCard
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the issued card.
        explode: false
        in: path
        name: issuedCardID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedCard'
          description: Successfully retrieved card.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get issued card
      tags:
      - Card issuing
    patch:
      description: |
        Update a Moov issued card.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.write` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: updateIssuedCard
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the issued card.
        explode: false
        in: path
        name: issuedCardID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssuedCard'
        required: true
      responses:
        "204":
          description: Successfully updated issued card.
        "404":
          description: No issued card with the specified accountID and cardID was
            found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Update issued card
      tags:
      - Card issuing
  /issuing/{accountID}/issued-cards/{issuedCardID}/details:
    get:
      description: |
        Get issued card with PAN, CVV, and expiration. Only use this endpoint if you have provided Moov with a copy of your PCI attestation of compliance.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/issued-cards.read-secure` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getFullIssuedCard
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the issued card.
        explode: false
        in: path
        name: issuedCardID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullIssuedCard'
          description: Successfully retrieved card details.
        "404":
          description: |
            No issued card with the specified accountID and cardID was found. An error will be returned
            for cards without PAN or CVV. Pending cards will not have a PAN or CVV.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get full card details
      tags:
      - Card issuing
  /issuing/{accountID}/transactions:
    get:
      description: |
        List issued card transactions associated with a Moov account.
      operationId: listAccountIssuedCardTransactions
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: Optional parameter to limit the number of results in the query.
        example: 10
        in: query
        name: count
        schema:
          default: 200
          type: integer
      - description: The number of items to offset before starting to collect the
          result set.
        example: 10
        in: query
        name: skip
        schema:
          type: integer
      - description: Optional status of the transaction to filter results.
        example: declined
        in: query
        name: status
        schema:
          $ref: '#/components/schemas/IssuedCardTransactionStatus'
      - description: Optional ID of the issued card to filter results.
        in: query
        name: issuedCardID
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedCardTransactions'
          description: Successfully retrieved issued card transactions.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get account transactions
      tags:
      - Transactions
  /issuing/{accountID}/authorizations:
    get:
      description: |
        List issued card authorizations associated with a Moov account.
      operationId: listAccountIssuedCardAuthorizations
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: Optional ID of the issued card to filter results.
        in: query
        name: issuedCardID
        schema:
          $ref: '#/components/schemas/UUID'
      - description: Optional date-time which inclusively filters all authorizations
          created after this date-time.
        example: 2009-11-10T23:00:00.000+0000
        in: query
        name: startDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional date-time which exclusively filters all authorizations
          created before this date-time.
        example: 2009-11-13T01:00:00.000+0000
        in: query
        name: endDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional, comma-separated statuses of the authorization to filter
          results.
        example: declined,expired
        in: query
        name: statuses
        schema:
          $ref: '#/components/schemas/IssuedCardAuthorizationStatus'
      - description: Optional parameter to limit the number of results in the query.
        example: 10
        in: query
        name: count
        schema:
          default: 200
          type: integer
      - description: The number of items to offset before starting to collect the
          result set.
        example: 10
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedCardAuthorizations'
          description: Successfully retrieved issued card authorizations.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get account authorizations
      tags:
      - Issuing transactions
  /issuing/{accountID}/authorizations/{authorizationID}/events:
    get:
      description: |
        List card network and Moov platform events that affect the authorization and its hold on a wallet balance.
      operationId: listAuthorizationEvents
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the authorization.
        explode: false
        in: path
        name: authorizationID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      - description: Optional parameter to limit the number of results in the query.
        example: 10
        in: query
        name: count
        schema:
          default: 200
          type: integer
      - description: The number of items to offset before starting to collect the
          result set.
        example: 10
        in: query
        name: skip
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedCardAuthorizationEvents'
          description: Successfully retrieved authorization events.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get authorization events
      tags:
      - Issuing transactions
  /issuing/{accountID}/card-transactions:
    get:
      description: |
        List issued card transactions associated with a Moov account.
      operationId: listAccountIssuedCardTransactionsNew
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: Optional parameter to limit the number of results in the query.
        example: 10
        in: query
        name: count
        schema:
          default: 200
          type: integer
      - description: The number of items to offset before starting to collect the
          result set.
        example: 10
        in: query
        name: skip
        schema:
          type: integer
      - description: Optional date-time which inclusively filters all card transactions
          created after this date-time.
        example: 2009-11-10T23:00:00.000+0000
        in: query
        name: startDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional date-time which exclusively filters all card transactions
          created before this date-time.
        example: 2009-11-13T01:00:00.000+0000
        in: query
        name: endDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional ID of the issued card to filter results.
        in: query
        name: issuedCardID
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuedCardTransactionsNew'
          description: Successfully retrieved issued card transactions.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get account card transactions
      tags:
      - Issuing transactions
  /disputes:
    get:
      description: Returns the list of disputes. <br><br> To use this endpoint from
        the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listDisputes
      parameters:
      - description: Optional parameter to limit the number of results in the query.
        example: 10
        in: query
        name: count
        schema:
          default: 200
          type: integer
      - description: The number of items to offset before starting to collect the
          result set.
        example: 10
        in: query
        name: skip
        schema:
          type: integer
      - description: Optional date-time which inclusively filters all disputes with
          respond by after this date-time.
        example: 2009-11-10T23:00:00.000+0000
        in: query
        name: respondStartDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional date-time which exclusively filters all disputes with
          respond by before this date-time.
        example: 2009-11-13T01:00:00.000+0000
        in: query
        name: respondEndDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional dispute status by which to filter the disputes.
        in: query
        name: status
        schema:
          $ref: '#/components/schemas/DisputeStatus'
      - description: Optional parameter to filter by merchant account ID.
        example: 9506dbf6-4208-44c3-ad8a-e4431660e1f2
        in: query
        name: merchantAccountID
        schema:
          type: string
      - description: Optional parameter to filter by cardholder account ID.
        example: 9506dbf6-4208-44c3-ad8a-e4431660e1f2
        in: query
        name: cardholderAccountID
        schema:
          type: string
      - description: Optional parameter to filter by a comma separated list of dispute
          IDs.
        example: 24858e38-dd7d-4164-a1ae-206d8214148c,c436e049-3bb3-477d-b304-5601e0c08222,9f161723-b328-4eb7-967e-096106900b7e
        in: query
        name: disputeIDs
        schema:
          type: string
      - description: Optional parameter to filter by a comma separated list of transfer
          IDs.
        example: 44f4b83c-db0e-43d2-b039-cbe1ec6aa72c
        in: query
        name: transferIDs
        schema:
          type: string
      - description: Optional date-time parameter to filter all disputes created on
          and after the provided date and time.
        example: 2009-11-10T23:00:00.000+0000
        in: query
        name: startDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional date-time parameter to filter all disputes created on
          and before the provided date and time.
        example: 2009-11-13T01:00:00.000+0000
        in: query
        name: endDateTime
        schema:
          format: RFC-3339
          type: string
      - description: Optional parameter to order the results in the query.
        example: created-at:desc
        in: query
        name: orderBy
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dispute'
                maxItems: 300
                type: array
          description: List of dispute details.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List of all disputes
      tags:
      - Disputes
  /disputes/{disputeID}:
    get:
      description: Returns a user's dispute by ID. <br><br> To use this endpoint from
        the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getDispute
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
          description: Dispute details.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Dispute by ID
      tags:
      - Disputes
  /disputes/{disputeID}/accept:
    post:
      description: Accepts a dispute. <br><br> To use this endpoint from the browser,
        you'll need to specify the `/accounts/{your-account-id}/transfers.write` scope
        when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: acceptDispute
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
          description: Updated dispute details.
        "403":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The user is not authorized to make the request.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request received, but resource was not found.
        "422":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The parameters provided are not processable.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request, an error message will be available in the
            response body.
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Accept dispute
      tags:
      - Disputes
  /disputes/{disputeID}/evidence:
    get:
      description: Returns a dispute's public evidence by its ID. <br><br> To use
        this endpoint from the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listDisputeEvidence
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DisputeEvidenceMetadata'
                type: array
          description: List of dispute evidence.
        "403":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The user is not authorized to make the request.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request received, but resource was not found.
        "422":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The parameters provided are not processable.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request, an error message will be available in the
            response body.
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List dispute evidence by dispute ID
      tags:
      - Disputes
  /disputes/{disputeID}/evidence/submit:
    post:
      description: Submits evidence for a dispute. <br><br> To use this endpoint from
        the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: submitEvidence
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
          description: Updated dispute details.
        "403":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The user is not authorized to make the request.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request received, but resource was not found.
        "422":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The parameters provided are not processable.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request, an error message will be available in the
            response body.
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Submit dispute evidence
      tags:
      - Disputes
  /disputes/{disputeID}/evidence-file:
    post:
      description: Uploads a file as evidence for a dispute. <br><br> To use this
        endpoint from the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: uploadEvidenceFile
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EvidenceFile'
        required: true
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Successful empty response for unauthorized or any other returned
            http status code.
        "403":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The user is not authorized to make the request.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request received, but resource was not found.
        "422":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The parameters provided are not processable.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request, an error message will be available in the
            response body.
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Upload evidence file
      tags:
      - Disputes
  /disputes/{disputeID}/evidence-text:
    post:
      description: Uploads text as evidence for a dispute. <br><br> To use this endpoint
        from the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: uploadEvidenceText
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvidenceText'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DisputeEvidence'
                type: array
          description: List of created dispute evidence.
        "403":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The user is not authorized to make the request.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request received, but resource was not found.
        "422":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The parameters provided are not processable.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request, an error message will be available in the
            response body.
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Upload evidence text
      tags:
      - Disputes
  /disputes/{disputeID}/evidence/{evidenceID}:
    delete:
      description: Deletes dispute evidence by ID. <br><br> To use this endpoint from
        the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: deleteEvidence
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - description: ID of evidence
        in: path
        name: evidenceID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "204":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Successful empty response for unauthorized or any other returned
            http status code.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request received, but resource was not found.
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Delete dispute evidence by dispute ID and evidence ID
      tags:
      - Disputes
    get:
      description: Returns a piece of dispute evidence by evidence ID. <br><br> To
        use this endpoint from the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getDisputeEvidence
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - description: ID of evidence
        in: path
        name: evidenceID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeEvidence'
          description: Dispute evidence details.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request received, but resource was not found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Dispute evidence by ID
      tags:
      - Disputes
    patch:
      description: Updates dispute evidence by ID. <br><br> To use this endpoint from
        the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: updateDisputeEvidence
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - description: ID of evidence
        in: path
        name: evidenceID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvidenceUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputeEvidenceMetadata'
          description: Updated dispute evidence details.
        "403":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The user is not authorized to make the request.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request received, but resource was not found.
        "422":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: The parameters provided are not processable.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request, an error message will be available in the
            response body.
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Update dispute evidence by dispute ID and evidence ID
      tags:
      - Disputes
  /disputes/{disputeID}/evidence/{evidenceID}/data:
    get:
      description: Downloads dispute evidence data by ID. <br><br> To use this endpoint
        from the browser, you'll need to specify the `/accounts/{your-account-id}/transfers.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getDisputeEvidenceData
      parameters:
      - description: ID of dispute
        in: path
        name: disputeID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - description: ID of evidence
        in: path
        name: evidenceID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
            image/jpeg:
              schema:
                format: binary
                type: string
            image/tiff:
              schema:
                format: binary
                type: string
          description: Dispute evidence data.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request received, but resource was not found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Download dispute evidence data by evidence ID
      tags:
      - Disputes
  /accounts/{accountID}/files:
    get:
      description: List all the files associated with a particular Moov account. <br><br>
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/files.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listFiles
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'
          description: Successfully retrieved files.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List files
      tags:
      - Files
    post:
      description: Upload a file and link it to the provided Moov account. The maximum
        file size is 10MB. Each account is allowed a maximum of 50 files. Acceptable
        file types include csv, jpg, pdf, and png. <br><br> To use this endpoint from
        the browser, you'll need to specify the `/accounts/{accountID}/files.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: uploadFile
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: File added.
        "400":
          description: The image provided could not be serialized.
        "404":
          description: No account with the specified accountID was found.
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Upload file
      tags:
      - Files
  /accounts/{accountID}/files/{fileID}:
    get:
      description: Retrieve file details associated with a specific Moov account.
        <br><br> To use this endpoint from the browser, you'll need to specify the
        `/accounts/{accountID}/files.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getFileDetails
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: Identifier for the file.
        explode: false
        in: path
        name: fileID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: Successfully retrieved file details.
        "404":
          description: No account with the specified accountID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get file details
      tags:
      - Files
  /accounts/{accountID}/underwriting:
    get:
      description: Retrieve underwriting associated with a given Moov account. <br><br>
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/profile.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getUnderwriting
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Underwriting'
          description: Underwriting details successfully retrieved
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Retrieve underwriting details
      tags:
      - Underwriting
    put:
      description: Update the account's underwriting by passing new values for one
        or more of the fields. <br><br> To use this endpoint from a browser, you'll
        need to specify the `/accounts/{accountID}/profile.write` scope when generating
        a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: updateUnderwriting
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnderwritingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Underwriting'
          description: The underwriting details were successfully updated
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "409":
          description: The account is currently in a state where underwriting details
            cannot be updated
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Update underwriting details
      tags:
      - Underwriting
  /accounts/{accountID}/payment-methods:
    get:
      description: Retrieve a list of payment methods associated with a Moov account.
        <br><br> To use this endpoint from the browser, you'll need to specify the
        `/accounts/{accountID}/payment-methods.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getPaymentMethods
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: Optional parameter to filter the account's payment methods by
          source ID. A source ID can be a [walletID](https://docs.moov.io/api/sources/wallets/list/),
          [cardID](https://docs.moov.io/api/sources/cards/list/), or [bankAccountID](https://docs.moov.io/api/sources/bank-accounts/list/).
        example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        in: query
        name: sourceID
        required: false
        schema:
          format: uuid
          type: string
      - description: Optional parameter to filter the account's payment methods by
          payment method type.
        example: card-payment
        in: query
        name: paymentMethodType
        required: false
        schema:
          $ref: '#/components/schemas/PaymentMethodType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethods'
          description: Successfully retrieved payment methods
        "404":
          description: No account with the specified accountID was found
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List payment methods
      tags:
      - Payment methods
  /accounts/{accountID}/payment-methods/{paymentMethodID}:
    get:
      description: Get the specified payment method associated with a Moov account.
        <br><br> To use this endpoint from the browser, you'll need to specify the
        `/accounts/{accountID}/payment-methods.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getPaymentMethod
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: ID of the payment method. Can be one of `walletID`, `cardID`,
          or `bankAccountID`.
        explode: false
        in: path
        name: paymentMethodID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: Successfully retrieved payment method
        "404":
          description: No payment method with the specified accountID was found
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get payment method
      tags:
      - Payment methods
  /accounts/{accountID}/capabilities/{capabilityID}:
    delete:
      description: Disable a specific capability that an account has requested. <br><br>
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/capabilities.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: disableCapability
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: The requested capability identifier.
        explode: false
        in: path
        name: capabilityID
        required: true
        schema:
          $ref: '#/components/schemas/CapabilityID'
        style: simple
      responses:
        "204":
          description: The capability has been disabled.
        "404":
          description: No account with the specified capabilityID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Disable a capability for an account.
      tags:
      - Capabilities
    get:
      description: Retrieve a specific capability that an account has requested. <br><br>
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/capabilities.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getCapability
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      - description: The requested capability identifier.
        explode: false
        in: path
        name: capabilityID
        required: true
        schema:
          $ref: '#/components/schemas/CapabilityID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capability'
          description: The requested capability.
        "404":
          description: No account with the specified capabilityID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get capability for account
      tags:
      - Capabilities
  /accounts/{accountID}/capabilities:
    get:
      description: Retrieve all the capabilities an account has requested. <br><br>
        To use this endpoint from the browser, you'll need to specify the `/accounts/{accountID}/capabilities.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listCapabilities
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Capability'
                type: array
          description: The list of capabilities for the account.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: List capabilities for account
      tags:
      - Capabilities
    post:
      description: Request capabilities for a specific account. <br><br> To use this
        endpoint from the browser, you'll need to specify the `/accounts/{accountID}/capabilities.write`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: addCapabilities
      parameters:
      - description: ID of the account.
        explode: false
        in: path
        name: accountID
        required: true
        schema:
          $ref: '#/components/schemas/AccountID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCapabilityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Capability'
                type: array
          description: The list of capabilities for the account.
        "404":
          description: No account with the specified accountID was found.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityRequestError'
          description: The request could not be processed due to a state conflict
            with the target resource.
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Request capabilities
      tags:
      - Capabilities
  /industries:
    get:
      description: |
        Returns a list of all industry titles and their corresponding MCC/SIC/NAICS codes. Results are ordered by title.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/profile-enrichment.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: listIndustries
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Industries'
          description: A list of industries and their codes
      summary: List all industries
      tags:
      - Industries
  /institutions/{rail}/search:
    get:
      description: Search for institutions by their routing number or name. <br><br>
        To use this endpoint from the browser, you'll need to specify the `/fed.read`
        scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: searchInstitutions
      parameters:
      - description: Payment rail to search on
        explode: false
        in: path
        name: rail
        required: true
        schema:
          $ref: '#/components/schemas/Rail'
        style: simple
      - description: Name of the financial institution
        example: Farmers
        in: query
        name: name
        schema:
          type: string
      - description: Routing number for a financial institution
        example: 4.4112187E7
        in: query
        name: routingNumber
        schema:
          type: string
      - description: Optional parameters to filter results
        example: IA
        in: query
        name: state
        schema:
          type: string
      - description: Maximum results returned by a search
        in: query
        name: limit
        schema:
          example: 499
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialInstitutions'
          description: Financial institutions returned from a search
        "400":
          description: Invalid Request
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        "500":
          description: Internal error, check error(s) and report the issue.
      summary: Search institutions
      tags:
      - Institutions
  /avatars/{uniqueID}:
    get:
      description: |
        Get avatar image for an account using a unique ID.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/profile-enrichment.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getAvatar
      parameters:
      - description: Any unique ID associated with an account such as accountID, representativeID,
          routing number, or userID.
        explode: false
        in: path
        name: uniqueID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: The avatar image
        "404":
          description: No image with the specified uniqueID was found.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get avatar
      tags:
      - Avatars
  /enrichment/address:
    get:
      description: "Fetch enriched address suggestions. Requires a partial address.\
        \ \n<br><br> To use this endpoint from the browser, you'll need to specify\
        \ the `/profile-enrichment.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).\n"
      operationId: getEnrichmentAddress
      parameters:
      - description: |
          Partial or complete address to search.
        example: 123 Main Street
        in: query
        name: search
        required: true
        schema:
          type: string
      - description: |
          Maximum number of results to return.
        example: 10
        in: query
        name: maxResults
        schema:
          type: integer
      - description: |
          Limits results to a list of given cities.
        example: chicago;honolulu;portland
        in: query
        name: includeCities
        schema:
          type: string
      - description: |
          Limits results to a list of given states.
        example: illinois;hawaii;oregon
        in: query
        name: includeStates
        schema:
          type: string
      - description: |
          Limits results to a list of given zipcodes.
        example: 60412;96818;97209
        in: query
        name: includeZipcodes
        schema:
          type: string
      - description: |
          Exclude list of states from results. No `include` pararmeters may be used with this parameter.
        example: AZ;WA;SC
        in: query
        name: excludeStates
        schema:
          type: string
      - description: |
          Display results with the listed cities at the top.
        example: denver;aurora;omaha
        in: query
        name: preferCities
        schema:
          type: string
      - description: |
          Display results with the listed states at the top.
        example: CO;MN;WI
        in: query
        name: preferStates
        schema:
          type: string
      - description: |
          Display results with the listed zipcodes at the top.
        example: 60412;96818;97209
        in: query
        name: preferZipcodes
        schema:
          type: string
      - description: |
          Specifies the percentage of address suggestions that should be preferred and will appear at the top of the results.
        example: 45
        in: query
        name: preferRatio
        schema:
          type: integer
      - description: |
          If omitted or set to `city` it uses the sender's IP address to determine location, then automatically adds the city and state to the preferCities value. This parameter takes precedence over other `include` or `exclude` parameters meaning that if it is not set to `none` you may see addresses from areas you do not wish to see.
        example: none
        in: query
        name: preferGeolocation
        schema:
          type: string
      - description: |
          Useful for narrowing results with `addressLine2` suggestions such as `Apt` (denotes an apartment building with multiple residences).
        example: Apt
        in: query
        name: selected
        schema:
          type: string
      - description: |
          Include results from alternate data sources. Allowed values are -- `all` (non-postal addresses) or `postal` (postal addresses only).
        example: all
        in: query
        name: source
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnrichmentAddress'
                type: array
          description: Address suggestions
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get address suggestions
      tags:
      - Enriched address
  /enrichment/profile:
    get:
      description: |
        Fetch enriched profile data. Requires a valid email address. This service is offered in collaboration with Clearbit.
        <br><br> To use this endpoint from the browser, you'll need to specify the `/profile-enrichment.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: getEnrichmentProfile
      parameters:
      - description: |
          Valid email address belonging to the profile of interest
        example: employee@business.com
        in: query
        name: email
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrichmentProfile'
          description: The enriched profile
        "404":
          description: No profile found
        "422":
          description: The request body could not be processed
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
        "503":
          description: The service is unavailable
        default:
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
      summary: Get enriched profile
      tags:
      - Enriched profile
  /webhooks:
    get:
      operationId: ListWebhooks
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Successfully fetched a list of webhooks.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: //i
                type: string
          description: Empty response for unauthorized or any other returned http
            status code
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      security:
      - GatewayAuth: []
      summary: List webhooks
      tags:
      - Webhooks
    post:
      operationId: CreateWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successfully created a webhook.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: //i
                type: string
          description: Empty response for unauthorized or any other returned http
            status code
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      security:
      - GatewayAuth: []
      summary: Create webhook
      tags:
      - Webhooks
  /webhooks/{webhookID}:
    delete:
      operationId: DeleteHook
      parameters:
      - description: ID of the webhook
        in: path
        name: webhookID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "204":
          description: Successfully deleted the webhook.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: //i
                type: string
          description: Empty response for unauthorized or any other returned http
            status code
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      security:
      - GatewayAuth: []
      summary: Delete webhook
      tags:
      - Webhooks
    get:
      operationId: GetWebhook
      parameters:
      - description: ID of the webhook
        in: path
        name: webhookID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successfully fetched a webhook.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: //i
                type: string
          description: Empty response for unauthorized or any other returned http
            status code
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      security:
      - GatewayAuth: []
      summary: Get webhook
      tags:
      - Webhooks
    parameters:
    - description: ID of the webhook
      in: path
      name: webhookID
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    put:
      operationId: UpdateWebhook
      parameters:
      - description: ID of the webhook
        in: path
        name: webhookID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhook'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successfully updated a webhook.
        "422":
          description: The request body could not be processed.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      security:
      - GatewayAuth: []
      summary: Update webhook
      tags:
      - Webhooks
  /webhooks/{webhookID}/ping:
    parameters:
    - description: ID of the webhook
      in: path
      name: webhookID
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    post:
      description: Send a ping event to test if the webhook is setup correctly.
      operationId: PingWebhook
      parameters:
      - description: ID of the webhook
        in: path
        name: webhookID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
          description: Successfully sent the ping event.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: //i
                type: string
          description: Empty response for unauthorized or any other returned http
            status code
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      security:
      - GatewayAuth: []
      summary: Send ping
      tags:
      - Webhooks
  /webhooks/{webhookID}/secret:
    get:
      description: Get secret to verify that a HTTP request came from Moov.
      operationId: GetWebhookSecret
      parameters:
      - description: ID of the webhook
        in: path
        name: webhookID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSecretKey'
          description: Successfully retrieved webhook secret.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: //i
                type: string
          description: Empty response for unauthorized or any other returned http
            status code
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      security:
      - GatewayAuth: []
      summary: Get webhook secret
      tags:
      - Webhooks
    parameters:
    - description: ID of the webhook
      in: path
      name: webhookID
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
  /webhooks/{webhookID}/event-types:
    get:
      description: |
        Get a list of event types that a webhook can subscribe to. The list will be in alphabetical order based on the identifier.
        This endpoint should be available to Moov's customers.
      operationId: ListEventTypes
      parameters:
      - description: ID of the webhook
        in: path
        name: webhookID
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventTypeObject'
                type: array
          description: Successfully fetched a list of event types.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: //i
                type: string
          description: Empty response for unauthorized or any other returned http
            status code
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      security:
      - GatewayAuth: []
      summary: List event types
      tags:
      - Webhooks
    parameters:
    - description: ID of the webhook
      in: path
      name: webhookID
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
  /ping:
    get:
      operationId: Ping
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      summary: Test Authentication
      tags:
      - Ping
  /analytics/transfers/sum:
    post:
      description: To use this endpoint from the browser, you'll need to specify the
        `/analytics.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: analyticsTransferSum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRange'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TransferSum'
                maxItems: 100
                type: array
          description: Sum of all transfers during each interval
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      summary: Sum all transfers across intervals
      tags:
      - Analytics
  /analytics/transfers/largest:
    post:
      description: To use this endpoint from the browser, you'll need to specify the
        `/analytics.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: analyticsTransferLargest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitedTimeRange'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpecificTransfer'
                maxItems: 100
                type: array
          description: Return specific transfer IDs and amounts of the largest or
            smallest transfers per interval
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      summary: Return the largest number of transfers
      tags:
      - Analytics
  /analytics/transfers/smallest:
    post:
      description: To use this endpoint from the browser, you'll need to specify the
        `/analytics.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: analyticsTransferSmallest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitedTimeRange'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpecificTransfer'
                maxItems: 100
                type: array
          description: Return specific transfer IDs and amounts of the largest or
            smallest transfers per interval
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      summary: Return the smallest number of transfers
      tags:
      - Analytics
  /analytics/transfers/statuses:
    post:
      description: To use this endpoint from the browser, you'll need to specify the
        `/analytics.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: analyticsTransferStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRange'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TransferStatusCount'
                maxItems: 100
                type: array
          description: Counts the statuses transfers are in
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      summary: Count the transfer statuses
      tags:
      - Analytics
  /analytics/accounts/profiles-created:
    post:
      description: To use this endpoint from the browser, you'll need to specify the
        `/analytics.read` scope when generating a [token](https://docs.moov.io/api/authentication/access-tokens/).
      operationId: analyticsAccountsCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRange'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProfilesCreatedInterval'
                maxItems: 100
                type: array
          description: Profiles created during each interval
        "404":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Empty response for unauthorized or any other returned http
            status code.
        "429":
          content:
            text/plain:
              schema:
                example: ""
                maxLength: 0
                pattern: \s{0}
                type: string
          description: Request was refused due to rate limiting.
          headers:
            X-Retry-In:
              description: How long (in milliseconds) to wait until able to retry
                the request.
              schema:
                example: 46.748934ms
                format: duration
                type: string
      summary: Count the number of profiles created by an individual or business
      tags:
      - Analytics
components:
  examples:
    listTransfers:
      value:
      - transferID: 25d0d56e-334e-4aa9-adba-54f0b85d4f82
        createdOn: 2023-09-09T09:32:22Z
        status: pending
        amount:
          currency: USD
          value: 1204
        description: Pay Instructor for May 15 Class
        metadata:
          property1: string
          property2: string
        facilitatorFee:
          total: 25
          totalDecimal: "0.249"
          markup: 25
          markupDecimal: "0.249"
        groupID: 20ea7cd5-e44c-4b30-99a7-8ec3a8d99dfe
        source:
          paymentMethodID: 2b42ad2a-7586-4e55-a268-10d585186c27
          paymentMethodType: ach-debit-fund
          bankAccount:
            bankAccountID: 1c4295fb-b4cd-42a0-8631-79354fba5ffc
            fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
            status: verified
            holderName: Whole Body Fitness
            holderType: business
            bankName: Chase Bank
            bankAccountType: checking
            routingNumber: "599399015"
            lastFourAccountNumber: "7000"
          account:
            accountID: 3dfff852-927d-47e8-822c-2fffc57ff6b9
            email: info@wholebodyfitness.com
            displayName: Whole Body Fitness
          achDetails:
            status: initiated
            traceNumber: "124782618117"
            debitHoldPeriod: 2-days
            companyEntryDescription: Payment
            originatingCompanyName: Whole Body Fit
            SECCode: WEB
            initiatedOn: 2023-09-09T09:33:25Z
        destination:
          paymentMethodID: 8485a2ce-c9b0-4d49-bfa1-60e88a79ce31
          paymentMethodType: moov-wallet
          wallet:
            walletID: 5f8549fb-eb23-4879-b8dd-138f848e8cd5
          account:
            accountID: 7c99ddb3-a4f1-4474-97b7-6d8fa07baa07
            email: jules.jackson@example.com
            displayName: Jules Jackson
        disputedAmount:
          currency: USD
          value: 5515
        disputes:
        - disputeID: 5f2349fb-eb56-4879-b8a1-139f823e8cd5
          createdOn: 2015-03-12T13:15:22Z
          amount:
            currency: USD
            value: 5515
      - transferID: e72b3a0d-fcb4-417c-93c3-4a34f242ae52
        createdOn: 2023-09-09T14:15:22Z
        completedOn: 2023-09-10T18:23:56Z
        status: completed
        amount:
          currency: USD
          value: 2500
        description: Collect monthly gym membership dues
        facilitatorFee:
          total: 127
          totalDecimal: "1.265"
          markup: 25
          markupDecimal: "0.249"
        moovFee: 102
        moovFeeDecimal: "1.02"
        groupID: e17b4be0-6979-4764-b0dc-9487f8fb3ef4
        refundedAmount:
          currency: USD
          value: 2500
        refunds:
        - refundID: d4963079-5b35-4d17-981e-8f851753f786
          createdOn: 2023-09-13T08:15:22Z
          updatedOn: 2023-09-14T15:20:44Z
          status: completed
          amount:
            currency: USD
            value: 2500
          cardDetails:
            status: completed
            initiatedOn: 2023-09-13T08:15:22Z
            confirmedOn: 2023-09-13T08:16:45Z
            settledOn: 2023-09-14T15:15:40Z
            completedOn: 2023-09-14T15:20:44Z
        source:
          paymentMethodID: 9555d9b8-d1cf-4b71-8f0d-006397e0ec46
          paymentMethodType: card-payment
          account:
            accountID: 4ac701aa-1d5d-4d6c-9319-e9de8a44f17d
            email: natalie@example.com
            displayName: Natalie Sharp
          card:
            cardID: 4e73fb4c-dc75-4be3-bd5d-7d578db12007
            fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
            brand: Visa
            cardType: debit
            lastFourCardNumber: "1234"
            expiration:
              month: "01"
              year: "25"
            holderName: Natalie Sharp
            billingAddress:
              addressLine1: 123 Main Street
              addressLine2: Apt 302
              city: Boulder
              stateOrProvince: CO
              postalCode: "80301"
              country: US
            cardVerification:
              cvv: match
              addressLine1: match
              postalCode: match
            issuer: GRINGOTTS BANK
            issuerCountry: US
          cardDetails:
            transactionSource: first-recurring
            status: completed
            initiatedOn: 2023-10-30T11:15:22Z
            confirmedOn: 2023-10-30T13:13:52Z
            settledOn: 2023-10-31T14:11:20Z
            completedOn: 2023-10-31T14:15:45Z
            dynamicDescriptor: WhlBdy *Yoga 11-12
            feeProgram: Visa Signature and Visa Infinite (Spend not-qualified) Product
              1
        destination:
          paymentMethodID: 1ae0833b-dd11-4737-9671-fefc7863a3b4
          paymentMethodType: moov-wallet
          account:
            accountID: 3dfff852-927d-47e8-822c-2fffc57ff6b9
            email: amanda@classbooker.dev
            displayName: Whole Body Fitness
          wallet:
            walletID: 81fa4538-8e10-4499-9efd-c455863dae3e
    getTransferCardToWallet:
      value:
        transferID: e72b3a0d-fcb4-417c-93c3-4a34f242ae52
        createdOn: 2023-09-09T14:15:22Z
        completedOn: 2023-09-10T18:23:56Z
        status: completed
        amount:
          currency: USD
          value: 10000
        description: Collect monthly gym membership dues
        facilitatorFee:
          total: 127
          totalDecimal: "1.265"
          markup: 25
          markupDecimal: "0.249"
        moovFee: 223
        moovFeeDecimal: "2.23"
        moovFeeDetails:
          cardScheme: "20.1575"
          discount: "2.10"
          moovProcessing: ".0567"
        groupID: e17b4be0-6979-4764-b0dc-9487f8fb3ef4
        refundedAmount:
          currency: USD
          value: 10000
        refunds:
        - refundID: d4963079-5b35-4d17-981e-8f851753f786
          createdOn: 2023-09-13T08:15:22Z
          updatedOn: 2023-09-14T15:20:44Z
          status: completed
          amount:
            currency: USD
            value: 10000
          cardDetails:
            status: completed
            initiatedOn: 2023-09-13T08:16:22Z
            confirmedOn: 2023-09-13T10:25:22Z
            settledOn: 2023-09-14T15:15:40Z
            completedOn: 2023-09-14T15:20:44Z
        source:
          paymentMethodID: 9555d9b8-d1cf-4b71-8f0d-006397e0ec46
          paymentMethodType: card-payment
          account:
            accountID: 4ac701aa-1d5d-4d6c-9319-e9de8a44f17d
            email: natalie@example.com
            displayName: Natalie Sharp
          card:
            cardID: 4e73fb4c-dc75-4be3-bd5d-7d578db12007
            fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
            brand: American Express
            cardType: debit
            lastFourCardNumber: "1234"
            expiration:
              month: "01"
              year: "25"
            holderName: Natalie Sharp
            billingAddress:
              addressLine1: 123 Main Street
              addressLine2: Apt 302
              city: Boulder
              stateOrProvince: CO
              postalCode: "80301"
              country: US
            cardVerification:
              cvv: match
              addressLine1: match
              postalCode: match
            issuer: GRINGOTTS BANK
            issuerCountry: US
          cardDetails:
            status: completed
            transactionSource: recurring
            initiatedOn: 2023-10-30T09:15:22Z
            confirmedOn: 2023-10-30T09:13:52Z
            settledOn: 2023-10-30T13:11:20Z
            completedOn: 2023-10-30T13:20:45Z
            feeProgram: Visa Signature and Visa Infinite (Spend not-qualified) Product
              1
        destination:
          paymentMethodID: 1ae0833b-dd11-4737-9671-fefc7863a3b4
          paymentMethodType: moov-wallet
          account:
            accountID: 3dfff852-927d-47e8-822c-2fffc57ff6b9
            email: amanda@classbooker.dev
            displayName: Whole Body Fitness
          wallet:
            walletID: 81fa4538-8e10-4499-9efd-c455863dae3e
    getTransferBankToWallet:
      value:
        transferID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        createdOn: 2023-09-09T14:15:22Z
        status: pending
        amount:
          currency: USD
          value: 1204
        description: Pay Instructor for May 15 Class
        metadata:
          property1: string
          property2: string
        facilitatorFee:
          total: 0
          totalDecimal: "0.001"
          markup: 0
          markupDecimal: "0.001"
        groupID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        refundedAmount:
          currency: USD
          value: 1204
        source:
          paymentMethodID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          paymentMethodType: ach-credit-same-day
          account:
            accountID: 3dfff852-927d-47e8-822c-2fffc57ff6b9
            email: amanda@classbooker.dev
            displayName: Whole Body Fitness
          bankAccount:
            bankAccountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
            fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
            status: new
            holderName: Jules Jackson
            holderType: individual
            bankName: Chase Bank
            bankAccountType: checking
            routingNumber: string
            lastFourAccountNumber: "7000"
          achDetails:
            status: initiated
            traceNumber: "124782618117"
            return:
              code: string
              reason: string
              description: string
            correction:
              code: string
              reason: string
              description: string
            companyEntryDescription: Gym Dues
            originatingCompanyName: Whole Body Fit
            SECCode: WEB
            debitHoldPeriod: 2-days
            initiatedOn: 2023-09-09T14:16:35Z
          transferID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        destination:
          paymentMethodID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          paymentMethodType: moov-wallet
          account:
            accountID: 3dfff852-927d-47e8-822c-2fffc57ff6b9
            email: amanda@classbooker.dev
            displayName: Whole Body Fitness
          wallet:
            walletID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
    createSyncRefundSuccess:
      value:
        refundID: d4963079-5b35-4d17-981e-8f851753f786
        createdOn: 2023-09-09T14:15:22Z
        updatedOn: 2023-09-09T14:17:41Z
        status: pending
        amount:
          currency: USD
          value: 1204
        cardDetails:
          status: confirmed
          initiatedOn: 2023-09-09T14:16:22Z
          confirmedOn: 2023-09-09T14:17:41Z
    createSyncRefundFailure:
      value:
        refundID: d4963079-5b35-4d17-981e-8f851753f786
        createdOn: 2023-09-09T14:15:22Z
        updatedOn: 2023-09-09T14:15:59Z
        status: failed
        failureCode: insufficient-funds
        amount:
          currency: USD
          value: 1204
        cardDetails:
          status: failed
          initiatedOn: 2023-09-09T14:15:38Z
          failedOn: 2023-09-09T14:15:59Z
    createAsyncRefund:
      value:
        refundID: d4963079-5b35-4d17-981e-8f851753f786
        createdOn: 2023-09-09T14:15:22Z
        amount:
          currency: USD
          value: 1204
    createSyncRefundTimeout:
      value:
        refundID: d4963079-5b35-4d17-981e-8f851753f786
        createdOn: 2023-09-09T14:15:22Z
        updatedOn: 2023-09-09T14:15:22Z
        status: created
        amount:
          currency: USD
          value: 1204
    createCancellationSuccess:
      value:
        status: completed
        createdOn: 2023-09-09T14:15:22Z
  schemas:
    Error:
      additionalProperties: false
      description: Error response for http requests that failed.
      properties:
        error:
          example: example error message
          type: string
      type: object
    AccountCreated:
      properties:
        accountID:
          description: ID of the account
          type: string
      type: object
    AccountUpdated:
      properties:
        accountID:
          description: ID of the account
          type: string
      type: object
    AccountDeleted:
      properties:
        accountID:
          description: ID of the account
          type: string
      type: object
    RepresentativeCreated:
      properties:
        representativeID:
          description: ID of the representative
          type: string
        accountID:
          description: ID of the account
          type: string
      type: object
    RepresentativeUpdated:
      properties:
        representativeID:
          description: ID of the representative
          type: string
        accountID:
          description: ID of the account
          type: string
      type: object
    RepresentativeDeleted:
      properties:
        representativeID:
          description: ID of the representative
          type: string
        accountID:
          description: ID of the account
          type: string
      type: object
    CapabilityRequested:
      properties:
        capabilityID:
          description: ID of the capability
          type: string
        accountID:
          description: ID of the account requesting the capability
          type: string
      type: object
    CapabilityUpdated:
      properties:
        capabilityID:
          description: ID of the capability
          type: string
        accountID:
          description: ID of the account requesting the capability
          type: string
        status:
          description: Status of the capability
          type: string
      type: object
    DisputeCreated:
      properties:
        accountID:
          description: ID of the merchant's Account associated with the disputed transaction.
          type: string
        transferID:
          description: ID of the disputed transfer.
          type: string
        transactionID:
          description: ID of the disputed transaction.
          type: string
        disputeID:
          description: ID of the dispute.
          type: string
        status:
          $ref: '#/components/schemas/DisputeStatus'
        phase:
          $ref: '#/components/schemas/DisputePhase'
      type: object
    DisputeUpdated:
      properties:
        accountID:
          description: ID of the merchant's Account associated with the disputed transaction.
          type: string
        transferID:
          description: ID of the disputed transfer.
          type: string
        transactionID:
          description: ID of the disputed transaction.
          type: string
        disputeID:
          description: ID of the dispute.
          type: string
        status:
          $ref: '#/components/schemas/DisputeStatus'
        phase:
          $ref: '#/components/schemas/DisputePhase'
      type: object
    BankAccountCreated:
      properties:
        bankAccountID:
          description: ID of the bank account
          type: string
        accountID:
          description: ID of the account where the bank account was created
          type: string
      type: object
    BankAccountUpdated:
      properties:
        bankAccountID:
          description: ID of the bank account
          type: string
        accountID:
          description: ID of the account where the bank account was updated
          type: string
        status:
          description: Status of the bank account
          type: string
        statusReason:
          $ref: '#/components/schemas/BankAccountStatusReason'
        exceptionDetails:
          $ref: '#/components/schemas/ExceptionDetails'
      type: object
    BankAccountDeleted:
      properties:
        bankAccountID:
          description: ID of the bank account
          type: string
        accountID:
          description: ID of the account where the bank account was deleted
          type: string
      type: object
    TransferCreated:
      properties:
        accountID:
          description: ID of the facilitator account
          type: string
        transferID:
          description: ID of the transfer
          type: string
        status:
          description: Status of the transfer
          type: string
      type: object
    TransferUpdated:
      properties:
        accountID:
          description: ID of the facilitator account
          type: string
        transferID:
          description: ID of the transfer
          type: string
        status:
          description: Status of the transfer
          type: string
        source:
          $ref: '#/components/schemas/TransferPaymentMethod'
        destination:
          $ref: '#/components/schemas/TransferPaymentMethod'
      type: object
    PaymentMethodEnabled:
      properties:
        paymentMethodID:
          description: ID of the payment method
          type: string
        accountID:
          description: ID of the account
          type: string
        sourceID:
          description: ID of the bank account, card, or wallet
          type: string
      type: object
    PaymentMethodDisabled:
      properties:
        paymentMethodID:
          description: ID of the payment method
          type: string
        accountID:
          description: ID of the account
          type: string
        sourceID:
          description: ID of the bank account, card, or wallet
          type: string
      type: object
    BalanceUpdated:
      properties:
        accountID:
          description: ID of the Account associated with the wallet
          type: string
        walletID:
          description: ID of the Wallet
          type: string
      type: object
    WalletTransactionUpdated:
      properties:
        accountID:
          description: ID of the account associated with the wallet
          type: string
        walletID:
          description: ID of the Wallet
          type: string
        transactionID:
          description: ID of the wallet transaction
          type: string
        status:
          description: Status of the wallet transaction
          type: string
        availableBalance:
          allOf:
          - $ref: '#/components/schemas/AvailableBalance'
          description: Available balance of the wallet.
          nullable: true
          type: object
      type: object
    RefundCreated:
      properties:
        accountID:
          description: ID of the merchant's Account associated with the refund transfer
          type: string
        transferID:
          description: ID of the original transfer
          type: string
        refundID:
          description: ID of the refund transfer
          type: string
      type: object
    RefundUpdated:
      properties:
        accountID:
          description: ID of the merchant's Account associated with the refund transfer
          type: string
        transferID:
          description: ID of the original transfer
          type: string
        refundID:
          description: ID of the refund transfer
          type: string
        status:
          description: Status of the refund transfer
          type: string
      type: object
    CardAutoUpdated:
      properties:
        accountID:
          description: ID of the merchant's Account associated with the updated Card
          type: string
        cardID:
          description: ID of the Card that was updated
          type: string
        updateType:
          $ref: '#/components/schemas/CardUpdateType'
      required:
      - accountID
      - cardID
      - updateType
      type: object
    Signup:
      additionalProperties: false
      description: Self signup request
      example:
        email: amanda@classbooker.dev
      properties:
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
      type: object
    Signin:
      additionalProperties: false
      description: Signin with password credentials
      example:
        password: horse Battery st@ple 123
        email: amanda@classbooker.dev
      properties:
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        password:
          description: Describes a password for a user
          example: horse Battery st@ple 123
          maxLength: 128
          minLength: 8
          pattern: ^.*$
          type: string
      type: object
    Password:
      description: Describes a password for a user
      example: horse Battery st@ple 123
      maxLength: 128
      minLength: 8
      pattern: ^.*$
      type: string
    User:
      additionalProperties: false
      description: User model
      example:
        photoURL: https://placekitten.com/408/287
        lastLoginOn: 2000-01-23T04:56:07.000+00:00
        givenName: Amanda
        familyName: Yang
        userID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        email: amanda@classbooker.dev
      properties:
        userID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        lastLoginOn:
          format: date-time
          maxLength: 24
          type: string
        givenName:
          description: Name this person was given. This is usually the the same as
            first name.
          example: Amanda
          maxLength: 64
          pattern: ^\w+$
          type: string
        familyName:
          description: Family name of this person. This is usually the the same as
            last name.
          example: Yang
          maxLength: 64
          pattern: ^\w+$
          type: string
        photoURL:
          example: https://placekitten.com/408/287
          format: url
          maxLength: 255
          nullable: true
          type: string
      type: object
    Setup:
      additionalProperties: false
      description: Setup password authentication
      example:
        password: horse Battery st@ple 123
        givenName: Amanda
        familyName: Yang
        fingerprint: fBkwz3q43jlTHB8wFtiDgxT0WMpjUmDvMsTbQbz1
        token: token
      properties:
        token:
          description: Base64 string of data.
          format: byte
          maxLength: 1024
          type: string
        password:
          description: Describes a password for a user
          example: horse Battery st@ple 123
          maxLength: 128
          minLength: 8
          pattern: ^.*$
          type: string
        givenName:
          description: Name this person was given. This is usually the the same as
            first name.
          example: Amanda
          maxLength: 64
          pattern: ^\w+$
          type: string
        familyName:
          description: Family name of this person. This is usually the the same as
            last name.
          example: Yang
          maxLength: 64
          pattern: ^\w+$
          type: string
        fingerprint:
          description: Device hash generated by a frontend library.
          example: fBkwz3q43jlTHB8wFtiDgxT0WMpjUmDvMsTbQbz1
          maxLength: 64
          pattern: ^\w+$
          type: string
      type: object
    ChangePassword:
      additionalProperties: false
      description: User model
      example:
        password: horse Battery st@ple 123
        newPassword: horse Battery st@ple 123
        email: amanda@classbooker.dev
      properties:
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        password:
          description: Describes a password for a user
          example: horse Battery st@ple 123
          maxLength: 128
          minLength: 8
          pattern: ^.*$
          type: string
        newPassword:
          description: Describes a password for a user
          example: horse Battery st@ple 123
          maxLength: 128
          minLength: 8
          pattern: ^.*$
          type: string
      type: object
    Recover:
      additionalProperties: false
      description: Email to send recover instructions to
      example:
        email: amanda@classbooker.dev
      properties:
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
      type: object
    ResetPassword:
      additionalProperties: false
      description: Email to send recover instructions to
      example:
        password: horse Battery st@ple 123
        email: amanda@classbooker.dev
        token: token
      properties:
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        token:
          description: Base64 string of data.
          format: byte
          maxLength: 1024
          type: string
        password:
          description: Describes a password for a user
          example: horse Battery st@ple 123
          maxLength: 128
          minLength: 8
          pattern: ^.*$
          type: string
      type: object
    URL:
      example: https://placekitten.com/408/287
      format: url
      maxLength: 255
      type: string
    DeviceVerification:
      additionalProperties: false
      description: Return to state if this device is verified, and if not how to verify
      example:
        verified: true
      properties:
        verified:
          type: boolean
      required:
      - verified
      type: object
    DeviceInfo:
      additionalProperties: false
      description: Current device information
      example:
        fingerprint: fBkwz3q43jlTHB8wFtiDgxT0WMpjUmDvMsTbQbz1
      properties:
        fingerprint:
          description: Device hash generated by a frontend library.
          example: fBkwz3q43jlTHB8wFtiDgxT0WMpjUmDvMsTbQbz1
          maxLength: 64
          pattern: ^\w+$
          type: string
      type: object
    VerifyViaEmail:
      additionalProperties: false
      description: Current device information
      example:
        code: "123456"
        fingerprint: fBkwz3q43jlTHB8wFtiDgxT0WMpjUmDvMsTbQbz1
      properties:
        fingerprint:
          description: Device hash generated by a frontend library.
          example: fBkwz3q43jlTHB8wFtiDgxT0WMpjUmDvMsTbQbz1
          maxLength: 64
          pattern: ^\w+$
          type: string
        code:
          description: 6 digit TOTP code
          example: "123456"
          maxLength: 6
          pattern: ^[1-9][0-9]{5}$
          type: string
      type: object
    TOTPCode:
      description: 6 digit TOTP code
      example: "123456"
      maxLength: 6
      pattern: ^[1-9][0-9]{5}$
      type: string
    SendViaEmail:
      additionalProperties: false
      description: Send the code via email attached to the user
      properties: {}
      type: object
    AccessTokenResponse:
      description: Possible responses that can be made to the /token endpoints. The
        type of response returned here will mirror the type of the request.
      oneOf:
      - $ref: '#/components/schemas/ClientCredentialsGrantToAccessTokenResponse'
    ClientCredentialsGrantToAccessTokenResponse:
      additionalProperties: false
      description: Device model
      properties:
        access_token:
          description: String passed to the authorization server to gain access to
            the system.
          format: byte
          maxLength: 4096
          type: string
        refresh_token:
          description: String passed to the authorization server to gain access to
            the system.
          format: byte
          maxLength: 4096
          type: string
        token_type:
          description: Type of token returned. Opaque is not parse-able while JWT
            follows JWT spec.
          enum:
          - opaque
          - jwt
          type: string
        expires_in:
          description: Number of seconds the token is valid for.
          example: 900
          format: int32
          type: integer
        scope:
          description: A space-delimited list of [scopes](https://docs.moov.io/api/authentication/scopes/)
            that are allowed.
          example: /accounts.write
          type: string
      type: object
    AccessToken:
      description: String passed to the authorization server to gain access to the
        system.
      format: byte
      maxLength: 4096
      type: string
    ExpiresIn:
      description: Number of seconds the token is valid for.
      example: 900
      format: int32
      type: integer
    Scope:
      description: A space-delimited list of [scopes](https://docs.moov.io/api/authentication/scopes/)
        that are allowed.
      example: /accounts.write
      type: string
    AccessTokenErrorResponse:
      oneOf:
      - $ref: '#/components/schemas/ClientCredentialsGrantToAccessTokenErrorResponse'
    ClientCredentialsGrantToAccessTokenErrorResponse:
      additionalProperties: false
      description: Error happened when trying to obtain an access token.
      properties:
        error:
          enum:
          - invalid_request
          - invalid_client
          - invalid_grant
          - unauthorized_client
          - unsupported_grant_type
          - invalid_scope
          type: string
      type: object
    ClientCredentialsGrantToAccessTokenRequest:
      description: Allows the use of `Client Credentials Grant` per the RFC 6749 of
        [OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749#section-4.4).
        Following this specification will allow any tooling to be able to use this
        API to get an `access_token`.
      example:
        refresh_token: refresh_token
        grant_type: client_credentials
        scope: /accounts.write
        client_secret: client_secret
        client_id: client_id
      properties:
        grant_type:
          enum:
          - client_credentials
          - refresh_token
          type: string
        client_id:
          description: 'If not specified in `Authorization: Basic` it can be specified
            here.'
          format: byte
          nullable: true
          type: string
        client_secret:
          description: 'If not specified in `Authorization: Basic` it can be specified
            here.'
          format: byte
          nullable: true
          type: string
        scope:
          description: A space-delimited list of [scopes](https://docs.moov.io/api/authentication/scopes/)
            that are allowed.
          example: /accounts.write
          type: string
        refresh_token:
          description: String passed to the authorization server to gain access to
            the system.
          format: byte
          maxLength: 4096
          type: string
      required:
      - grant_type
    RevokeTokenRequest:
      additionalProperties: false
      description: Allows clients to notify the authorization server that a previously
        obtained refresh or access token is no longer needed.
      properties:
        token:
          description: String passed to the authorization server to gain access to
            the system.
          format: byte
          maxLength: 4096
          type: string
        token_type_hint:
          description: A hint about the type of the token submitted for revocation
          enum:
          - access_token
          - refresh_token
          type: string
        client_id:
          description: 'If not specified in `Authorization: Basic` it can be specified
            here'
          format: byte
          nullable: true
          type: string
        client_secret:
          description: 'If not specified in `Authorization: Basic` it can be specified
            here'
          format: byte
          nullable: true
          type: string
      required:
      - token
      type: object
    Session:
      additionalProperties: false
      description: Session model
      example:
        photoURL: https://placekitten.com/408/287
        givenName: Amanda
        familyName: Yang
        globalExpiresOn: 6
        expiresOn: 0
        userID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        email: amanda@classbooker.dev
      properties:
        userID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        givenName:
          description: Name this person was given. This is usually the the same as
            first name.
          example: Amanda
          maxLength: 64
          pattern: ^\w+$
          type: string
        familyName:
          description: Family name of this person. This is usually the the same as
            last name.
          example: Yang
          maxLength: 64
          pattern: ^\w+$
          type: string
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        expiresOn:
          description: Number of seconds from epoch that this will expire on
          format: int64
          type: integer
        globalExpiresOn:
          description: Number of seconds from epoch that this session will globally
            expire on
          format: int64
          type: integer
        photoURL:
          example: https://placekitten.com/408/287
          format: url
          maxLength: 255
          nullable: true
          type: string
      type: object
    Invite:
      additionalProperties: false
      description: Describes an invite that was sent to a user to join.
      example:
        accountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        disabledBy: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
        declinedOn: 2000-01-23T04:56:07.000+00:00
        invitedBy: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        inviteID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        roles:
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        expiresOn: 2000-01-23T04:56:07.000+00:00
        disabledOn: 2000-01-23T04:56:07.000+00:00
        declinedBy: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
        invitedOn: 2000-01-23T04:56:07.000+00:00
        redeemedOn: 2000-01-23T04:56:07.000+00:00
        email: amanda@classbooker.dev
      properties:
        inviteID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        accountID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        invitedBy:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        invitedOn:
          format: date-time
          maxLength: 24
          type: string
        redeemedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        expiresOn:
          format: date-time
          maxLength: 24
          type: string
        disabledOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        disabledBy:
          description: UUID v4
          example: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
          format: uuid
          maxLength: 36
          nullable: true
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        declinedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        declinedBy:
          description: UUID v4
          example: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
          format: uuid
          maxLength: 36
          nullable: true
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        roles:
          description: List of roleID's to add the user to once invite has been accepted
          items:
            $ref: '#/components/schemas/UUID'
          maxItems: 300
          type: array
      type: object
    SendInvite:
      additionalProperties: false
      description: Describes an invite that was sent to a user to join.
      example:
        roles:
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        email: amanda@classbooker.dev
      properties:
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        roles:
          description: List of roleID's to add the user to once invite has been accepted
          items:
            $ref: '#/components/schemas/UUID'
          maxItems: 300
          type: array
      type: object
    AccountID:
      description: ID of account.
      format: uuid
      maxLength: 36
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      type: string
    UUID:
      description: UUID v4
      example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      format: uuid
      maxLength: 36
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      type: string
    ResendInvite:
      additionalProperties: false
      description: Describes an invite to be resent
      example:
        inviteID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        inviteID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
      type: object
    Email:
      description: Email address.
      example: amanda@classbooker.dev
      format: email
      maxLength: 255
      pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
      type: string
    Account:
      additionalProperties: false
      description: Describes a Moov account.
      example:
        customerSupport: '{}'
        settings: '{}'
        metadata:
          key: metadata
        capabilities:
        - {}
        - {}
        displayName: Whole Body Fitness
        accountType: business
        profile:
          individual: '{}'
          business: '{}'
        termsOfService: '{}'
        updatedOn: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
        disconnectedOn: disconnectedOn
        mode: production
        accountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        foreignID: 4528aba-b9a1-11eb-8529-0242ac13003
        verification:
          documents:
          - uploadedAt: 2000-01-23T04:56:07.000+00:00
            documentID: e210a9d6
            type: DriversLicense
            parseErrors:
            - parseErrors
            - parseErrors
            contentType: application/pdf
          - uploadedAt: 2000-01-23T04:56:07.000+00:00
            documentID: e210a9d6
            type: DriversLicense
            parseErrors:
            - parseErrors
            - parseErrors
            contentType: application/pdf
      properties:
        mode:
          $ref: '#/components/schemas/Mode'
        accountID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        accountType:
          $ref: '#/components/schemas/AccountType'
        displayName:
          example: Whole Body Fitness
          maxLength: 64
          type: string
        profile:
          $ref: '#/components/schemas/Profile'
        metadata:
          additionalProperties:
            type: string
          description: Free-form key-value pair list. Useful for storing information
            that is not captured elsewhere.
          type: object
        termsOfService:
          allOf:
          - $ref: '#/components/schemas/TermsOfService'
          nullable: true
          type: object
        capabilities:
          items:
            $ref: '#/components/schemas/AccountCapability'
          type: array
        verification:
          $ref: '#/components/schemas/Verification'
        foreignID:
          description: Optional alias from a foreign/external system which can be
            used to reference this resource.
          example: 4528aba-b9a1-11eb-8529-0242ac13003
          maxLength: 64
          type: string
        customerSupport:
          allOf:
          - $ref: '#/components/schemas/CustomerSupport'
          nullable: true
          type: object
        settings:
          allOf:
          - $ref: '#/components/schemas/AccountSettings'
          nullable: true
          type: object
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
        disconnectedOn:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          nullable: true
          type: string
      type: object
    Mode:
      description: The mode this account is allowed to be used within.
      enum:
      - sandbox
      - production
      example: production
      type: string
    AccountType:
      description: The type of entity represented by this account.
      enum:
      - individual
      - business
      example: business
      type: string
    Profile:
      additionalProperties: false
      description: Describes a Moov account profile.
      example:
        individual: '{}'
        business: '{}'
      properties:
        individual:
          allOf:
          - $ref: '#/components/schemas/Individual'
          nullable: true
          type: object
        business:
          allOf:
          - $ref: '#/components/schemas/Business'
          nullable: true
          type: object
      type: object
    Individual:
      additionalProperties: false
      description: Describes an individual.
      properties:
        name:
          $ref: '#/components/schemas/Name'
        phone:
          allOf:
          - $ref: '#/components/schemas/Phone'
          nullable: true
          type: object
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
          type: object
        birthDateProvided:
          default: false
          description: Indicates whether this individual's birth date has been provided.
          type: boolean
        governmentIDProvided:
          default: false
          description: Indicates whether a government ID (SSN, ITIN, etc.) has been
            provided for this individual.
          type: boolean
      type: object
    Name:
      additionalProperties: false
      description: An individual's name.
      example:
        firstName: Amanda
        lastName: Yang
        middleName: Amanda
        suffix: Jr
      properties:
        firstName:
          description: Name this person was given. This is usually the the same as
            first name.
          example: Amanda
          maxLength: 64
          pattern: ^[ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßÆàáâãäåçèéêëìíîïðñòóôõöøùúûüýþÿ"'(),\-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]abcdefghijklmnopqrstuvwxyz{}~
            &!]*$
          type: string
        middleName:
          description: Name this person was given. This is usually the the same as
            first name.
          example: Amanda
          maxLength: 64
          pattern: ^[ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßÆàáâãäåçèéêëìíîïðñòóôõöøùúûüýþÿ"'(),\-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]abcdefghijklmnopqrstuvwxyz{}~
            &!]*$
          type: string
        lastName:
          description: Family name of this person. This is usually the the same as
            last name.
          example: Yang
          maxLength: 64
          pattern: ^[ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßÆàáâãäåçèéêëìíîïðñòóôõöøùúûüýþÿ"'(),\-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]abcdefghijklmnopqrstuvwxyz{}~
            &!]*$
          type: string
        suffix:
          description: Suffix of a given name.
          example: Jr
          maxLength: 20
          pattern: ^[ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßÆàáâãäåçèéêëìíîïðñòóôõöøùúûüýþÿ"'(),\-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]abcdefghijklmnopqrstuvwxyz{}~
            &!]*$
          type: string
      required:
      - firstName
      - lastName
      type: object
    ValidatedGivenName:
      description: Name this person was given. This is usually the the same as first
        name.
      example: Amanda
      maxLength: 64
      pattern: ^[ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßÆàáâãäåçèéêëìíîïðñòóôõöøùúûüýþÿ"'(),\-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]abcdefghijklmnopqrstuvwxyz{}~
        &!]*$
      type: string
    ValidatedFamilyName:
      description: Family name of this person. This is usually the the same as last
        name.
      example: Yang
      maxLength: 64
      pattern: ^[ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßÆàáâãäåçèéêëìíîïðñòóôõöøùúûüýþÿ"'(),\-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]abcdefghijklmnopqrstuvwxyz{}~
        &!]*$
      type: string
    ValidatedSuffix:
      description: Suffix of a given name.
      example: Jr
      maxLength: 20
      pattern: ^[ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßÆàáâãäåçèéêëìíîïðñòóôõöøùúûüýþÿ"'(),\-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]abcdefghijklmnopqrstuvwxyz{}~
        &!]*$
      type: string
    Business:
      additionalProperties: false
      description: Describes a business.
      properties:
        legalBusinessName:
          maxLength: 64
          type: string
        doingBusinessAs:
          maxLength: 64
          type: string
        businessType:
          allOf:
          - $ref: '#/components/schemas/BusinessType'
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
          type: object
        phone:
          allOf:
          - $ref: '#/components/schemas/Phone'
          nullable: true
          type: object
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        website:
          example: www.wholebodyfitnessgym.com
          maxLength: 100
          type: string
        description:
          example: Local fitness gym paying out instructors
          maxLength: 100
          minLength: 10
          type: string
        taxIDProvided:
          default: false
          description: Indicates whether a tax ID has been provided for this business.
          type: boolean
        representatives:
          example: []
          items:
            $ref: '#/components/schemas/Representative'
          type: array
        ownersProvided:
          type: boolean
        industryCodes:
          allOf:
          - $ref: '#/components/schemas/IndustryCodes'
          nullable: true
          type: object
      required:
      - ownersProvided
      type: object
    BusinessType:
      description: The type of entity represented by this business.
      enum:
      - soleProprietorship
      - unincorporatedAssociation
      - trust
      - publicCorporation
      - privateCorporation
      - llc
      - partnership
      - unincorporatedNonProfit
      - incorporatedNonProfit
      - governmentEntity
      example: llc
      type: string
    Representative:
      additionalProperties: false
      description: Describes a business representative.
      example:
        address: '{}'
        responsibilities: '{}'
        phone: '{}'
        birthDateProvided: false
        representativeID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        name:
          firstName: Amanda
          lastName: Yang
          middleName: Amanda
          suffix: Jr
        disabledOn: disabledOn
        updatedOn: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
        email: amanda@classbooker.dev
        governmentIDProvided: false
      properties:
        representativeID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        name:
          $ref: '#/components/schemas/Name'
        phone:
          allOf:
          - $ref: '#/components/schemas/Phone'
          nullable: true
          type: object
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
          type: object
        birthDateProvided:
          default: false
          description: Indicates whether this representative's birth date has been
            provided.
          type: boolean
        governmentIDProvided:
          default: false
          description: Indicates whether a government ID (SSN, ITIN, etc.) has been
            provided for this representative.
          type: boolean
        responsibilities:
          allOf:
          - $ref: '#/components/schemas/Responsibilities'
          nullable: true
          type: object
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
        disabledOn:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          nullable: true
          type: string
      type: object
    Responsibilities:
      additionalProperties: false
      description: Describes the job responsibilities of an individual.
      properties:
        isController:
          default: false
          description: Indicates whether this individual has significant management
            responsibilities within the business.
          example: false
          type: boolean
        isOwner:
          default: false
          description: If `true`, this field indicates that the individual has a business
            ownership stake of at least 25% in the business. If the representative
            does not own at least 25% of the business, this field should be `false`.
          example: true
          type: boolean
        ownershipPercentage:
          description: The percentage of ownership this individual has in the business
            (required if `isOwner` is `true`).
          example: 38
          type: integer
        jobTitle:
          example: CEO
          maxLength: 64
          type: string
      required:
      - isController
      - isOwner
      - jobTitle
      - ownershipPercentage
      type: object
    IndustryCodes:
      additionalProperties: false
      description: Describes industry specific identifiers.
      properties:
        naics:
          example: "713940"
          maxLength: 6
          minLength: 2
          type: string
        sic:
          example: "7991"
          maxLength: 4
          minLength: 4
          type: string
        mcc:
          example: "7997"
          maxLength: 4
          minLength: 4
          type: string
      type: object
    TermsOfService:
      additionalProperties: false
      description: Describes the acceptance of the Terms of Service.
      properties:
        acceptedDate:
          format: date-time
          maxLength: 24
          type: string
        acceptedIP:
          example: 127.0.0.1
          format: ipv4
          maxLength: 15
          type: string
      required:
      - acceptedDate
      - acceptedIP
      type: object
    AccountCapability:
      additionalProperties: false
      description: Describes an action or set of actions that an account is permitted
        to perform.
      example: {}
      properties:
        capability:
          $ref: '#/components/schemas/CapabilityID'
        status:
          $ref: '#/components/schemas/CapabilityStatus'
      type: object
    Verification:
      additionalProperties: false
      description: Describes identity verification status and relevant identity verification
        documents.
      example:
        documents:
        - uploadedAt: 2000-01-23T04:56:07.000+00:00
          documentID: e210a9d6
          type: DriversLicense
          parseErrors:
          - parseErrors
          - parseErrors
          contentType: application/pdf
        - uploadedAt: 2000-01-23T04:56:07.000+00:00
          documentID: e210a9d6
          type: DriversLicense
          parseErrors:
          - parseErrors
          - parseErrors
          contentType: application/pdf
      properties:
        verificationStatus:
          $ref: '#/components/schemas/AccountVerificationStatus'
        status:
          $ref: '#/components/schemas/VerificationStatus'
        details:
          $ref: '#/components/schemas/VerificationStatusDetails'
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
      required:
      - status
      type: object
    AccountVerificationStatus:
      deprecated: true
      description: This field is deprecated and will be removed in a future release.
      enum:
      - unverified
      - pending
      - resubmit
      - review
      - verified
      - failed
      type: string
    VerificationStatus:
      deprecated: true
      description: This field is deprecated but available for use until February 2023.
      enum:
      - unverified
      - pending
      - verified
      - errored
      type: string
    VerificationStatusDetails:
      deprecated: true
      description: This field is deprecated but available for use until February 2023.
      enum:
      - failedAutoVerify
      - docDobMismatch
      - docNameMismatch
      - docAddressMismatch
      - docNumberMismatch
      - docIncomplete
      - docFailedRisk
      - potentialAccountSanctionsMatch
      - potentialRepresentativeSanctionsMatch
      - failedOther
      type: string
    ForeignID:
      description: Optional alias from a foreign/external system which can be used
        to reference this resource.
      example: 4528aba-b9a1-11eb-8529-0242ac13003
      maxLength: 64
      type: string
    CustomerSupport:
      additionalProperties: false
      description: User-provided information that can be displayed on credit card
        transactions for customers to use when contacting a customer support team.
        This data is only allowed on a business account.
      properties:
        phone:
          allOf:
          - $ref: '#/components/schemas/Phone'
          nullable: true
          type: object
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
          type: object
        website:
          example: www.wholebodyfitnessgym.com
          maxLength: 100
          type: string
      type: object
    AccountSettings:
      additionalProperties: false
      description: User provided settings to manage an account.
      properties:
        cardPayment:
          allOf:
          - $ref: '#/components/schemas/CardPaymentSettings'
          nullable: true
          type: object
        achPayment:
          allOf:
          - $ref: '#/components/schemas/ACHPaymentSettings'
          nullable: true
          type: object
      type: object
    CardPaymentSettings:
      additionalProperties: false
      description: User provided settings to manage card payments. This data is only
        allowed on a business account.
      properties:
        statementDescriptor:
          description: The description that shows up on credit card transactions.
            This will default to the accounts display name on account creation.
          example: Whole Body Fitness
          maxLength: 22
          minLength: 4
          pattern: ^([\w0-9.!*-+_\- ]+)$
          type: string
      type: object
    StatementDescriptor:
      description: The description that shows up on credit card transactions. This
        will default to the accounts display name on account creation.
      example: Whole Body Fitness
      maxLength: 22
      minLength: 4
      pattern: ^([\w0-9.!*-+_\- ]+)$
      type: string
    ACHPaymentSettings:
      additionalProperties: false
      description: User provided settings to manage ACH payments.
      properties:
        companyName:
          description: The description that shows up on ACH transactions. This will
            default to the account's display name on account creation.
          example: Whole Body Fitness
          maxLength: 16
          minLength: 1
          pattern: ^[a-zA-Z0-9\- ]+$
          type: string
      type: object
    CompanyName:
      description: The description that shows up on ACH transactions. This will default
        to the account's display name on account creation.
      example: Whole Body Fitness
      maxLength: 16
      minLength: 1
      pattern: ^[a-zA-Z0-9\- ]+$
      type: string
    CreateAccountRequest:
      additionalProperties: false
      description: Describes the fields available when creating a Moov account.
      example:
        mode: production
        customerSupport: '{}'
        foreignID: 4528aba-b9a1-11eb-8529-0242ac13003
        settings: '{}'
        metadata:
          key: metadata
        capabilities:
        - null
        - null
        accountType: business
        profile:
          individual: '{}'
          business: '{}'
        termsOfService: '{}'
      properties:
        mode:
          $ref: '#/components/schemas/Mode'
        accountType:
          $ref: '#/components/schemas/AccountType'
        profile:
          $ref: '#/components/schemas/CreateProfile'
        metadata:
          additionalProperties:
            type: string
          description: Free-form key-value pair list. Useful for storing information
            that is not captured elsewhere.
          type: object
        termsOfService:
          allOf:
          - $ref: '#/components/schemas/TermsOfServicePayload'
          nullable: true
          type: object
        foreignID:
          description: Optional alias from a foreign/external system which can be
            used to reference this resource.
          example: 4528aba-b9a1-11eb-8529-0242ac13003
          maxLength: 64
          type: string
        customerSupport:
          allOf:
          - $ref: '#/components/schemas/CustomerSupport'
          nullable: true
          type: object
        settings:
          allOf:
          - $ref: '#/components/schemas/AccountSettings'
          nullable: true
          type: object
        capabilities:
          description: The list of capabilities to request when the account is created.
          items:
            $ref: '#/components/schemas/CapabilityID'
          nullable: true
          type: array
      required:
      - accountType
      - profile
      type: object
    CreateProfile:
      additionalProperties: false
      description: |
        Describes the fields available when creating a profile.
        If `accountType` is set to `individual`, the `individual` object should be completed. All others should populate `business`.
      example:
        individual: '{}'
        business: '{}'
      properties:
        individual:
          allOf:
          - $ref: '#/components/schemas/CreateIndividual'
          nullable: true
          type: object
        business:
          allOf:
          - $ref: '#/components/schemas/CreateBusiness'
          nullable: true
          type: object
      type: object
    CreateIndividual:
      additionalProperties: false
      description: Describes the fields available when creating an individual.
      properties:
        name:
          $ref: '#/components/schemas/Name'
        phone:
          allOf:
          - $ref: '#/components/schemas/Phone'
          nullable: true
          type: object
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
          type: object
        birthDate:
          allOf:
          - $ref: '#/components/schemas/BirthDate'
          nullable: true
          type: object
        governmentID:
          allOf:
          - $ref: '#/components/schemas/GovernmentID'
          nullable: true
          type: object
      required:
      - name
      type: object
    BirthDate:
      additionalProperties: false
      description: An individual's birthdate.
      example:
        month: 11
        year: 1989
        day: 9
      properties:
        day:
          example: 9
          type: integer
        month:
          example: 11
          type: integer
        year:
          example: 1989
          type: integer
      required:
      - day
      - month
      - year
      type: object
    CreateBusiness:
      additionalProperties: false
      description: Describes the fields available when creating a business.
      properties:
        legalBusinessName:
          example: Whole Body Fitness LLC
          maxLength: 64
          pattern: ^[ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßÆàáâãäåçèéêëìíîïðñòóôõöøùúûüýþÿ"'(),+\-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]abcdefghijklmnopqrstuvwxyz{}~
            &!]*$
          type: string
        doingBusinessAs:
          example: Whole Body Fitness
          maxLength: 64
          pattern: ^[ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßÆàáâãäåçèéêëìíîïðñòóôõöøùúûüýþÿ"'(),+\-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\]abcdefghijklmnopqrstuvwxyz{}~
            &!]*$
          type: string
        businessType:
          allOf:
          - $ref: '#/components/schemas/BusinessType'
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
          type: object
        phone:
          allOf:
          - $ref: '#/components/schemas/Phone'
          nullable: true
          type: object
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        website:
          example: www.wholebodyfitnessgym.com
          maxLength: 100
          type: string
        description:
          example: Local fitness center paying out instructors
          maxLength: 100
          minLength: 10
          type: string
        taxID:
          allOf:
          - $ref: '#/components/schemas/TaxID'
          nullable: true
          type: object
        industryCodes:
          allOf:
          - $ref: '#/components/schemas/IndustryCodes'
          nullable: true
          type: object
      required:
      - legalBusinessName
      type: object
    TermsOfServicePayload:
      description: Describes the acceptance of the Terms of Service.
      oneOf:
      - $ref: '#/components/schemas/TermsOfServiceToken'
      - $ref: '#/components/schemas/TermsOfServiceManual'
      type: object
    TermsOfServiceToken:
      additionalProperties: false
      description: An encrypted value used to record acceptance of Moov's Terms of
        Service.
      example:
        token: kgT1uxoMAk7QKuyJcmQE8nqW_HjpyuXBabiXPi6T83fUQoxsyWYPcYzuHQTqrt7YRp4gCwyDQvb6U5REM9Pgl2EloCe35t-eiMAbUWGo3Kerxme6aqNcKrP_6-v0MTXViOEJ96IBxPFTvMV7EROI2dq3u4e-x4BbGSCedAX-ViAQND6hcreCDXwrO6sHuzh5Xi2IzSqZHxaovnWEboaxuZKRJkA3dsFID6fzitMpm2qrOh4
      properties:
        token:
          example: kgT1uxoMAk7QKuyJcmQE8nqW_HjpyuXBabiXPi6T83fUQoxsyWYPcYzuHQTqrt7YRp4gCwyDQvb6U5REM9Pgl2EloCe35t-eiMAbUWGo3Kerxme6aqNcKrP_6-v0MTXViOEJ96IBxPFTvMV7EROI2dq3u4e-x4BbGSCedAX-ViAQND6hcreCDXwrO6sHuzh5Xi2IzSqZHxaovnWEboaxuZKRJkA3dsFID6fzitMpm2qrOh4
          type: string
      title: Token
      type: object
    TermsOfServiceManual:
      additionalProperties: false
      description: Describes the acceptance of the Terms of Service. All data is required,
        and must be from the user.
      properties:
        acceptedDate:
          format: date-time
          maxLength: 24
          type: string
        acceptedIP:
          example: 127.0.0.1
          format: ipv4
          maxLength: 15
          type: string
        acceptedUserAgent:
          description: The user-agent of the user making the request.
          example: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
            (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36
          maxLength: 255
          type: string
        acceptedDomain:
          example: https://placekitten.com/408/287
          format: url
          maxLength: 255
          type: string
      required:
      - acceptedDate
      - acceptedDomain
      - acceptedIP
      - acceptedUserAgent
      title: Manual entry
      type: object
    CapabilityID:
      description: Identifier for the capability.
      enum:
      - transfers
      - send-funds
      - collect-funds
      - wallet
      - card-issuing
      type: string
    CapabilityStatus:
      description: The status of the capability requested for an account.
      enum:
      - enabled
      - disabled
      - pending
      - in-review
      type: string
    AccountWaitFor:
      enum:
      - connection
      type: string
    PatchAccountRequest:
      additionalProperties: false
      description: Describes the fields available when patching a Moov account.
      example:
        customerSupport: '{}'
        foreignID: foreignID
        settings: '{}'
        metadata:
          key: metadata
        profile: '{}'
        termsOfService: '{}'
      properties:
        profile:
          allOf:
          - $ref: '#/components/schemas/PatchProfile'
          nullable: true
          type: object
        metadata:
          additionalProperties:
            type: string
          description: Free-form key-value pair list. Useful for storing information
            that is not captured elsewhere.
          type: object
        termsOfService:
          allOf:
          - $ref: '#/components/schemas/TermsOfServicePayload'
          nullable: true
          type: object
        foreignID:
          allOf:
          - $ref: '#/components/schemas/ForeignID'
          nullable: true
          type: string
        customerSupport:
          allOf:
          - $ref: '#/components/schemas/CustomerSupport'
          nullable: true
          type: object
        settings:
          allOf:
          - $ref: '#/components/schemas/AccountSettings'
          nullable: true
          type: object
      type: object
    PatchProfile:
      additionalProperties: false
      description: |
        Describes the fields available when patching a profile.
        Each object can be patched independent of patching the other fields.
      properties:
        individual:
          allOf:
          - $ref: '#/components/schemas/PatchIndividual'
          nullable: true
          type: object
        business:
          allOf:
          - $ref: '#/components/schemas/PatchBusiness'
          nullable: true
          type: object
      type: object
    PatchIndividual:
      additionalProperties: false
      description: Describes the fields available when patching an individual.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          nullable: true
          type: object
        phone:
          allOf:
          - $ref: '#/components/schemas/Phone'
          nullable: true
          type: object
        email:
          allOf:
          - $ref: '#/components/schemas/Email'
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
          type: object
        birthDate:
          allOf:
          - $ref: '#/components/schemas/BirthDate'
          nullable: true
          type: object
        governmentID:
          allOf:
          - $ref: '#/components/schemas/GovernmentID'
          nullable: true
          type: object
      type: object
    PatchBusiness:
      additionalProperties: false
      description: Describes the fields available when patching a business.
      properties:
        legalBusinessName:
          example: Whole Body Fitness LLC
          maxLength: 64
          nullable: true
          pattern: ^[À-ÖØ-öø-ÿ"'(),.\-0-9A-Za-z\[\]{}~ &]*$
          type: string
        doingBusinessAs:
          example: Whole Body Fitness
          maxLength: 64
          nullable: true
          pattern: ^[À-ÖØ-öø-ÿ"'(),.\-0-9A-Za-z\[\]{}~ &]*$
          type: string
        businessType:
          allOf:
          - $ref: '#/components/schemas/BusinessType'
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          nullable: true
          type: object
        phone:
          allOf:
          - $ref: '#/components/schemas/Phone'
          nullable: true
          type: object
        email:
          allOf:
          - $ref: '#/components/schemas/Email'
          nullable: true
          type: string
        website:
          example: www.wholebodyfitnessgym.com
          maxLength: 100
          nullable: true
          type: string
        description:
          example: Local fitness center paying out instructors
          maxLength: 100
          minLength: 10
          nullable: true
          type: string
        taxID:
          allOf:
          - $ref: '#/components/schemas/TaxID'
          nullable: true
          type: object
        ownersProvided:
          nullable: true
          type: boolean
        industryCodes:
          allOf:
          - $ref: '#/components/schemas/IndustryCodes'
          nullable: true
          type: object
      type: object
    Countries:
      additionalProperties: false
      description: The Countries of operation for an account
      example:
        countries:
        - United States
        - United States
      properties:
        countries:
          items:
            example: United States
            maxLength: 64
            type: string
          type: array
      required:
      - countries
      type: object
    CreateRepresentative:
      additionalProperties: false
      description: Describes the fields available when creating a representative.
      example:
        address: '{}'
        responsibilities: '{}'
        phone: '{}'
        name: ""
        birthDate: '{}'
        email: amanda@classbooker.dev
        governmentID: '{}'
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          required:
          - firstName
          - lastName
        phone:
          allOf:
          - $ref: '#/components/schemas/Phone'
          nullable: true
          type: object
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: Residential address for an individual. Business addresses not
            accepted.
          nullable: true
          type: object
        birthDate:
          allOf:
          - $ref: '#/components/schemas/BirthDate'
          nullable: true
          type: object
        governmentID:
          allOf:
          - $ref: '#/components/schemas/GovernmentID'
          nullable: true
          type: object
        responsibilities:
          allOf:
          - $ref: '#/components/schemas/Responsibilities'
          nullable: true
          type: object
      type: object
    PatchRepresentativeRequest:
      additionalProperties: false
      description: Describes the fields available when patching a representative.
      example:
        address: '{}'
        responsibilities: '{}'
        phone: '{}'
        name: '{}'
        birthDate: '{}'
        email: email
        governmentID: '{}'
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/OptionalName'
          nullable: true
          type: object
        phone:
          allOf:
          - $ref: '#/components/schemas/OptionalPhone'
          nullable: true
          type: object
        email:
          allOf:
          - $ref: '#/components/schemas/Email'
          nullable: true
          type: string
        address:
          allOf:
          - $ref: '#/components/schemas/OptionalAddress'
          nullable: true
          type: object
        birthDate:
          allOf:
          - $ref: '#/components/schemas/BirthDate'
          nullable: true
          type: object
        governmentID:
          allOf:
          - $ref: '#/components/schemas/GovernmentID'
          nullable: true
          type: object
        responsibilities:
          allOf:
          - $ref: '#/components/schemas/OptionalResponsibilities'
          nullable: true
          type: object
      type: object
    OptionalName:
      additionalProperties: false
      description: An individual's name.
      properties:
        firstName:
          allOf:
          - $ref: '#/components/schemas/ValidatedGivenName'
          nullable: true
          type: string
        middleName:
          allOf:
          - $ref: '#/components/schemas/ValidatedGivenName'
          nullable: true
          type: string
        lastName:
          allOf:
          - $ref: '#/components/schemas/ValidatedFamilyName'
          nullable: true
          type: string
        suffix:
          allOf:
          - $ref: '#/components/schemas/ValidatedSuffix'
          nullable: true
          type: string
      type: object
    OptionalPhone:
      additionalProperties: false
      properties:
        number:
          example: "8185551212"
          format: phone
          maxLength: 10
          nullable: true
          type: string
        countryCode:
          example: "1"
          maxLength: 1
          nullable: true
          type: string
      type: object
    OptionalAddress:
      additionalProperties: false
      description: An individual's residential address. Business addresses not accepted.
      properties:
        addressLine1:
          example: 123 Main Street
          maxLength: 32
          nullable: true
          type: string
        addressLine2:
          example: Apt 302
          maxLength: 32
          nullable: true
          type: string
        city:
          example: Boulder
          maxLength: 24
          nullable: true
          type: string
        stateOrProvince:
          example: CO
          maxLength: 2
          nullable: true
          type: string
        postalCode:
          example: "80301"
          maxLength: 5
          nullable: true
          type: string
        country:
          example: US
          maxLength: 2
          nullable: true
          type: string
      type: object
    OptionalResponsibilities:
      additionalProperties: false
      description: Describes the job responsibilities of an individual.
      properties:
        isController:
          default: false
          description: Indicates whether this individual has significant management
            responsibilities within the business.
          example: false
          nullable: true
          type: boolean
        isOwner:
          default: false
          description: If `true`, this field indicates the individual has a business
            ownership stake of at least 25% in the business. If the representative
            does not own at least 25% of the business, this field should be `false`.
          example: true
          nullable: true
          type: boolean
        ownershipPercentage:
          description: The percentage of ownership this individual has in the business
            (required if `isOwner` is `true`).
          example: 38
          nullable: true
          type: integer
        jobTitle:
          example: CEO
          maxLength: 64
          nullable: true
          type: string
      type: object
    UpdateUser:
      additionalProperties: false
      description: User model
      example:
        givenName: Amanda
        familyName: Yang
      properties:
        givenName:
          description: Name this person was given. This is usually the the same as
            first name.
          example: Amanda
          maxLength: 64
          pattern: ^\w+$
          type: string
        familyName:
          description: Family name of this person. This is usually the the same as
            last name.
          example: Yang
          maxLength: 64
          pattern: ^\w+$
          type: string
      type: object
    UserAccount:
      additionalProperties: false
      description: Information about an account the user has access to.
      example:
        accountID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        displayName: Amanda Yang
      properties:
        accountID:
          description: ID of account.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        displayName:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
      type: object
    UserInvite:
      additionalProperties: false
      description: Information about an invitation sent to the user
      example:
        accountID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        inviteID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        displayName: Amanda Yang
        expiresOn: 2000-01-23T04:56:07.000+00:00
        email: amanda@classbooker.dev
      properties:
        inviteID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        accountID:
          description: ID of account.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        displayName:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        expiresOn:
          format: date-time
          maxLength: 24
          type: string
      type: object
    Role:
      additionalProperties: false
      description: Describes an role.
      example:
        accountID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastUpdatedBy: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        createdBy: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        roleID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        deletedOn: 2000-01-23T04:56:07.000+00:00
        subjects:
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        name: Amanda Yang
        policies:
        - {}
        - {}
        - {}
        - {}
        - {}
        lastUpdatedOn: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
        deletedBy: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
      properties:
        roleID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        accountID:
          description: ID of account.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        createdBy:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        lastUpdatedOn:
          format: date-time
          maxLength: 24
          type: string
        lastUpdatedBy:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        deletedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        deletedBy:
          description: UUID v4
          example: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
          format: uuid
          maxLength: 36
          nullable: true
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        subjects:
          items:
            $ref: '#/components/schemas/UUID'
          maxItems: 500
          nullable: false
          type: array
        policies:
          items:
            $ref: '#/components/schemas/RolePolicy'
          maxItems: 500
          nullable: false
          type: array
      required:
      - accountID
      - createdBy
      - createdOn
      - lastUpdatedBy
      - lastUpdatedOn
      - name
      - policies
      - roleID
      - subjects
      type: object
    RolePolicy:
      additionalProperties: false
      description: Describes a permission thats allowed
      example: {}
      properties:
        resource:
          $ref: '#/components/schemas/Resource'
        action:
          $ref: '#/components/schemas/Action'
      required:
      - action
      - resource
      type: object
    Resource:
      description: Describes a permission thats allow
      enum:
      - /account
      - /profile
      - /representatives
      - /bank-accounts
      - /applications
      - /tos
      - /transfers
      - /wallets
      - /connections
      - /documents
      - /invites
      type: string
    Action:
      description: Describes the action that can be taken on a resource
      enum:
      - read
      - write
      type: string
    CreateRole:
      additionalProperties: false
      description: Arguments to create a new role.
      example:
        subjects:
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        name: Amanda Yang
        policies:
        - {}
        - {}
        - {}
        - {}
        - {}
      properties:
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        subjects:
          items:
            $ref: '#/components/schemas/UUID'
          maxItems: 500
          nullable: false
          type: array
        policies:
          items:
            $ref: '#/components/schemas/RolePolicy'
          maxItems: 500
          nullable: false
          type: array
      required:
      - name
      - policies
      - subjects
      type: object
    UpdateRole:
      additionalProperties: false
      description: Arguments to update an existing role.
      example:
        subjects:
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        name: Amanda Yang
        policies:
        - {}
        - {}
        - {}
        - {}
        - {}
      properties:
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        subjects:
          items:
            $ref: '#/components/schemas/UUID'
          maxItems: 500
          type: array
        policies:
          items:
            $ref: '#/components/schemas/RolePolicy'
          maxItems: 500
          type: array
      required:
      - name
      - policies
      - subjects
      type: object
    Member:
      additionalProperties: false
      description: A user connected to an account
      example:
        photoURL: https://placekitten.com/408/287
        givenName: Amanda
        familyName: Yang
        roles:
        - roleId: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          roleName: Amanda Yang
        - roleId: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          roleName: Amanda Yang
        - roleId: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          roleName: Amanda Yang
        - roleId: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          roleName: Amanda Yang
        - roleId: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          roleName: Amanda Yang
        connectedTo: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: amanda@classbooker.dev
      properties:
        connectedTo:
          description: ID of account.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        userID:
          description: ID of a user.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        givenName:
          description: Name this person was given. This is usually the the same as
            first name.
          example: Amanda
          maxLength: 64
          pattern: ^\w+$
          type: string
        familyName:
          description: Family name of this person. This is usually the the same as
            last name.
          example: Yang
          maxLength: 64
          pattern: ^\w+$
          type: string
        photoURL:
          example: https://placekitten.com/408/287
          format: url
          maxLength: 255
          nullable: true
          type: string
        roles:
          items:
            $ref: '#/components/schemas/MemberRole'
          maxItems: 500
          type: array
      type: object
    MemberRole:
      additionalProperties: false
      description: The roles associated between a user and an account
      example:
        roleId: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        roleName: Amanda Yang
      properties:
        roleId:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        roleName:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
      type: object
    Device:
      additionalProperties: false
      description: Device model
      example:
        disabledBy: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
        lastSeenOn: 2000-01-23T04:56:07.000+00:00
        createdBy: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        description: Chrome on Windows 10
        disabledOn: 2000-01-23T04:56:07.000+00:00
        deviceID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        userID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        deviceID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        userID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        createdBy:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        lastSeenOn:
          format: date-time
          maxLength: 24
          type: string
        disabledOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        disabledBy:
          description: UUID v4
          example: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
          format: uuid
          maxLength: 36
          nullable: true
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        description:
          description: Descriptive name of the device
          example: Chrome on Windows 10
          maxLength: 128
          pattern: ^([\w ]+)$
          readOnly: true
          type: string
      type: object
    Application:
      additionalProperties: false
      description: Application model
      example:
        accountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        disabledBy: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
        createdBy: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        name: Amanda Yang
        description: Here lies a description of the item
        disabledOn: 2000-01-23T04:56:07.000+00:00
        applicationID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        createdOn: 2000-01-23T04:56:07.000+00:00
        allowedScopes:
        - null
        - null
        - null
        - null
        - null
      properties:
        applicationID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        accountID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        accountMode:
          $ref: '#/components/schemas/ApplicationAccountMode'
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        createdBy:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        disabledOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        disabledBy:
          description: UUID v4
          example: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
          format: uuid
          maxLength: 36
          nullable: true
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        allowedScopes:
          description: List of allowed scopes that can be requested on another account
            per their agreement with Moov.
          items:
            $ref: '#/components/schemas/ApplicationScope'
          maxItems: 100
          type: array
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        description:
          description: A description for the item.
          example: Here lies a description of the item
          maxLength: 1024
          pattern: ^([\w ]+)$
          type: string
      type: object
    ApplicationAccountMode:
      description: |
        The mode of the application's associated account:
          * `0`: unspecified
          * `1`: sandbox
          * `2`: production
      enum:
      - 0
      - 1
      - 2
      type: integer
    AllowedApplicationScopes:
      description: List of allowed scopes that can be requested on another account
        per their agreement with Moov.
      items:
        $ref: '#/components/schemas/ApplicationScope'
      maxItems: 100
      type: array
    CreateApplication:
      additionalProperties: false
      description: Fields required to create an application
      example:
        name: Amanda Yang
        description: Here lies a description of the item
        allowedScopes:
        - null
        - null
        - null
        - null
        - null
      properties:
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        description:
          description: A description for the item.
          example: Here lies a description of the item
          maxLength: 1024
          pattern: ^([\w ]+)$
          type: string
        allowedScopes:
          description: List of allowed scopes that can be requested on another account
            per their agreement with Moov.
          items:
            $ref: '#/components/schemas/ApplicationScope'
          maxItems: 100
          type: array
      type: object
    UpdateApplication:
      additionalProperties: false
      description: Fields required to create an application
      example:
        name: Amanda Yang
        description: Here lies a description of the item
      properties:
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        description:
          description: A description for the item.
          example: Here lies a description of the item
          maxLength: 1024
          pattern: ^([\w ]+)$
          type: string
      type: object
    ApplicationID:
      description: ID of a specific Application
      format: uuid
      maxLength: 36
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      type: string
    ApplicationKey:
      additionalProperties: false
      description: A key to use the application to access connections
      example:
        lastUsed: 2000-01-23T04:56:07.000+00:00
        appKeyID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        clientID: clientID
        name: Amanda Yang
        description: Here lies a description of the item
        origins:
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        appKeyID:
          description: ID of a specific Application Key
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        description:
          description: A description for the item.
          example: Here lies a description of the item
          maxLength: 1024
          pattern: ^([\w ]+)$
          type: string
        origins:
          description: List of domains that are allowed to use this application
          items:
            $ref: '#/components/schemas/URL'
          maxItems: 100
          type: array
        clientID:
          description: A randomly generated string of values that denotes the client_id
            for OAuth authorization
          format: byte
          type: string
        lastUsed:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
      type: object
    ApplicationKeyID:
      description: ID of a specific Application Key
      format: uuid
      maxLength: 36
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      type: string
    Origins:
      description: List of domains that are allowed to use this application
      items:
        $ref: '#/components/schemas/URL'
      maxItems: 100
      type: array
    ClientID:
      description: A randomly generated string of values that denotes the client_id
        for OAuth authorization
      format: byte
      type: string
    CreatedApplicationKey:
      additionalProperties: false
      description: A key to use the application to access connections
      example:
        lastUsed: 2000-01-23T04:56:07.000+00:00
        appKeyID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        clientID: clientID
        name: Amanda Yang
        description: Here lies a description of the item
        origins:
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        clientSecret: clientSecret
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        appKeyID:
          description: ID of a specific Application Key
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        description:
          description: A description for the item.
          example: Here lies a description of the item
          maxLength: 1024
          pattern: ^([\w ]+)$
          type: string
        origins:
          description: List of domains that are allowed to use this application
          items:
            $ref: '#/components/schemas/URL'
          maxItems: 100
          type: array
        clientID:
          description: A randomly generated string of values that denotes the client_id
            for OAuth authorization
          format: byte
          type: string
        clientSecret:
          description: A randomly generated string of values that denotes the client_secret
            for OAuth authorization
          format: byte
          type: string
        lastUsed:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
      type: object
    ClientSecret:
      description: A randomly generated string of values that denotes the client_secret
        for OAuth authorization
      format: byte
      type: string
    CreateApplicationKey:
      additionalProperties: false
      description: A key to use the application to access connections
      example:
        name: Amanda Yang
        description: Here lies a description of the item
        origins:
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
      properties:
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        description:
          description: A description for the item.
          example: Here lies a description of the item
          maxLength: 1024
          pattern: ^([\w ]+)$
          type: string
        origins:
          description: List of domains that are allowed to use this application
          items:
            $ref: '#/components/schemas/URL'
          maxItems: 100
          type: array
      type: object
    UpdateApplicationKey:
      additionalProperties: false
      description: Fields to update on application key
      example:
        name: Amanda Yang
        description: Here lies a description of the item
        origins:
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
        - https://placekitten.com/408/287
      properties:
        name:
          description: Descriptive name allowing spaces.
          example: Amanda Yang
          maxLength: 64
          pattern: ^([\w ]+)$
          type: string
        description:
          description: A description for the item.
          example: Here lies a description of the item
          maxLength: 1024
          pattern: ^([\w ]+)$
          type: string
        origins:
          description: List of domains that are allowed to use this application
          items:
            $ref: '#/components/schemas/URL'
          maxItems: 100
          type: array
      type: object
    Connection:
      additionalProperties: false
      description: Model that represents a connection to this account
      example:
        displayName: Whole Body Fitness
        accountType: business
        scopes:
        - null
        - null
        - null
        - null
        - null
        connectedTo: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdOn: 2000-01-23T04:56:07.000+00:00
        email: amanda@classbooker.dev
        enabled: false
      properties:
        connectedTo:
          description: ID of account.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        accountType:
          $ref: '#/components/schemas/AccountType'
        displayName:
          example: Whole Body Fitness
          maxLength: 64
          type: string
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        enabled:
          default: false
          description: Indicates whether or not the connected account is enabled
          type: boolean
        scopes:
          description: List of scopes that this application will request access from
            another account.
          items:
            $ref: '#/components/schemas/ApplicationScope'
          maxItems: 100
          type: array
      type: object
    Wallet:
      additionalProperties: false
      description: A Moov wallet to store funds for transfers.
      example:
        walletID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        walletID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        availableBalance:
          $ref: '#/components/schemas/AvailableBalance'
      type: object
    AvailableBalance:
      allOf:
      - $ref: '#/components/schemas/Amount'
      - $ref: '#/components/schemas/AvailableBalance_allOf'
      description: Available balance of the wallet.
      required:
      - value
      - valueDecimal
    WalletTransaction:
      description: A transaction that funds or deducts from the wallet.
      example:
        sourceID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        walletID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        availableBalanceDecimal: "12.987654321"
        netAmount: 700
        fee: 500
        memo: memo
        netAmountDecimal: "12.987654321"
        grossAmount: 1200
        createdOn: 2000-01-23T04:56:07.000+00:00
        transactionID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        availableBalance: 1204
        feeDecimal: "12.987654321"
        grossAmountDecimal: "12.987654321"
        completedOn: 2000-01-23T04:56:07.000+00:00
        currency: USD
      properties:
        walletID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        transactionID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        transactionType:
          $ref: '#/components/schemas/WalletTransactionType'
        sourceType:
          $ref: '#/components/schemas/WalletTransactionSourceType'
        sourceID:
          description: The ID of the Moov object to which this transaction is related.
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        status:
          $ref: '#/components/schemas/WalletTransactionStatus'
        memo:
          description: Detailed description of the transaction.
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        completedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        currency:
          description: A 3-letter ISO 4217 currency code.
          example: USD
          maxLength: 3
          pattern: ^[A-Za-z]+$
          type: string
        grossAmount:
          description: The total transaction amount. The amount is in the smallest
            unit of the specified currency. In USD this is cents, so $12.04 is 1204
            and $0.99 would be 99.
          example: 1200
          format: int64
          type: integer
        grossAmountDecimal:
          description: A decimal-formatted numerical string that represents up to
            9 decimal place precision.
          example: "12.987654321"
          pattern: ^\d+\.\d{1,9}$
          type: string
        fee:
          description: Total fees paid for the transaction. The value is in the smallest
            unit of the specified currency. In USD this is cents, so $12.04 is 1204
            and $0.99 would be 99.
          example: 500
          format: int64
          type: integer
        feeDecimal:
          description: A decimal-formatted numerical string that represents up to
            9 decimal place precision.
          example: "12.987654321"
          pattern: ^\d+\.\d{1,9}$
          type: string
        netAmount:
          description: Net amount is the gross amount less fees paid, and the amount
            that affects the wallet's balance. The amount is in the smallest unit
            of the specified currency. In USD this is cents, so $12.04 is 1204 and
            $0.99 would be 99.
          example: 700
          format: int64
          type: integer
        netAmountDecimal:
          description: A decimal-formatted numerical string that represents up to
            9 decimal place precision.
          example: "12.987654321"
          pattern: ^\d+\.\d{1,9}$
          type: string
        availableBalance:
          description: The wallet's total available balance after recording a completed
            transaction. The value is in the smallest unit of the specified currency.
            In USD this is cents, so $12.04 is 1204 and $0.99 would be 99.
          example: 1204
          format: int64
          nullable: true
          type: integer
        availableBalanceDecimal:
          description: A decimal-formatted numerical string that represents up to
            9 decimal place precision.
          example: "12.987654321"
          pattern: ^\d+\.\d{1,9}$
          type: string
      required:
      - fee
      - feeDecimal
      - grossAmount
      - grossAmountDecimal
      - netAmount
      - netAmountDecimal
      type: object
    WalletTransactionType:
      description: Wallet transaction type
      enum:
      - account-funding
      - ach-reversal
      - card-payment
      - card-decline
      - card-reversal
      - cash-out
      - dispute
      - dispute-reversal
      - facilitator-fee
      - issuing-refund
      - issuing-transaction
      - issuing-transaction-adjustment
      - issuing-auth-release
      - issuing-decline
      - moov-fee
      - payment
      - payout
      - refund
      - refund-failure
      - rtp-failure
      - top-up
      - wallet-transfer
      type: string
    WalletTransactionSourceType:
      description: Wallet transaction source type.
      enum:
      - transfer
      - dispute
      - issuing-transaction
      type: string
    WalletTransactionStatus:
      description: Wallet transaction status.
      enum:
      - pending
      - completed
      - canceled
      - failed
      type: string
    GetTransfers:
      description: A list of transfers.
      items:
        $ref: '#/components/schemas/GetTransferFull'
      type: array
    GetTransferFull:
      allOf:
      - $ref: '#/components/schemas/GetTransferBase'
      - $ref: '#/components/schemas/GetTransferFull_allOf'
      title: Synchronous transfer response
    GetTransferBase:
      description: Details about the transfer.
      properties:
        transferID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        completedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/TransferStatus'
        failureReason:
          $ref: '#/components/schemas/FailureReason'
        amount:
          $ref: '#/components/schemas/Amount'
        description:
          description: A description of the transfer.
          example: Pay Instructor for May 15 Class
          maxLength: 128
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Free-form key-value pair list. Useful for storing information
            that is not captured elsewhere.
          type: object
        facilitatorFee:
          $ref: '#/components/schemas/GetFacilitatorFee'
        moovFee:
          description: Fees charged to your platform account for transfers.
          format: int64
          nullable: true
          type: integer
        moovFeeDecimal:
          description: Same as `moovFee`, but a decimal-formatted numerical string
            that represents up to 9 decimal place precision.
          example: "0.987654321"
          type: string
        moovFeeDetails:
          $ref: '#/components/schemas/MoovFeeDetails'
        groupID:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: ID for all transfers associated with a [transfer group](https://docs.moov.io/guides/money-movement/transfer-groups/).
          nullable: true
          type: string
        refundedAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: The total refunded amount for a card transfer, representing
            one refunded amount, or multiple partial refunded amounts. Contains an
            integer value and its currency. See the `refunds` array for additional
            details.
          nullable: true
          type: object
        refunds:
          description: A list of refunds for a card transfer.
          items:
            $ref: '#/components/schemas/GetRefund'
          type: array
        disputedAmount:
          allOf:
          - $ref: '#/components/schemas/Amount'
          description: The total disputed amount for a card transfer.
          nullable: true
          type: object
        disputes:
          description: A list of disputes for a card transfer.
          items:
            $ref: '#/components/schemas/GetDispute'
          type: array
      type: object
    TransferStatus:
      description: Current status of a transfer.
      enum:
      - created
      - pending
      - completed
      - failed
      - reversed
      - queued
      - canceled
      example: pending
      type: string
    FailureReason:
      description: Reason for a transfer's failure.
      enum:
      - source-payment-error
      - destination-payment-error
      - wallet-insufficient-funds
      - rejected-high-risk
      - processing-error
      example: wallet-insufficient-funds
      nullable: true
      type: string
    GetFacilitatorFee:
      description: Fee you charged your customer for the transfer.
      nullable: true
      properties:
        total:
          description: Total facilitator fee in cents.
          format: int64
          type: integer
        totalDecimal:
          allOf:
          - $ref: '#/components/schemas/DecimalString'
          description: Same as `total`, but a decimal-formatted numerical string that
            represents up to 9 decimal place precision.
          example: "12.987654321"
        markup:
          description: Markup facilitator fee in cents.
          format: int64
          type: integer
        markupDecimal:
          allOf:
          - $ref: '#/components/schemas/DecimalString'
          description: Same as `markup`, but a decimal-formatted numerical string
            that represents up to 9 decimal place precision.
          example: "0.987654321"
      required:
      - total
      type: object
    MoovFeeDetails:
      description: Processing and pass-through costs that add up to the moovFee.
      nullable: true
      properties:
        cardScheme:
          description: Card scheme fees accrued during authorization and settlement.
            String type represents dollars with up to 9 decimal place precision.
          type: string
        interchange:
          description: Network interchange fee for Visa, Mastercard, or Discover.
            String type represents dollars with up to 9 decimal place precision.
          type: string
        discount:
          description: Network discount fee for American Express. String type represents
            dollars with up to 9 decimal place precision.
          type: string
        moovProcessing:
          description: Moov processing fee. String type represents dollars with up
            to 9 decimal place precision.
          type: string
      required:
      - moovProcessing
      type: object
    GetRefunds:
      description: A list of refunds for a card transfer.
      items:
        $ref: '#/components/schemas/GetRefund'
      type: array
    GetRefund:
      description: Details of a card refund.
      example:
        amount:
          currency: USD
          value: 1204
        failureCode: failureCode
        cardDetails:
          confirmedOn: 2000-01-23T04:56:07.000+00:00
          settledOn: 2000-01-23T04:56:07.000+00:00
          initiatedOn: 2000-01-23T04:56:07.000+00:00
          completedOn: 2000-01-23T04:56:07.000+00:00
          failedOn: 2000-01-23T04:56:07.000+00:00
        updatedOn: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
        refundID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        status: failed
      properties:
        refundID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
        status:
          $ref: '#/components/schemas/RefundStatus'
        failureCode:
          allOf:
          - $ref: '#/components/schemas/CardFailureCode'
          deprecated: true
          description: This field is deprecated and will be removed in December 2023.
          nullable: true
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
        cardDetails:
          $ref: '#/components/schemas/RefundCardDetails'
      title: Synchronous refund response
      type: object
    RefundID:
      $ref: '#/components/schemas/UUID'
    RefundStatus:
      enum:
      - created
      - pending
      - completed
      - failed
      example: failed
      type: string
    CardFailureCode:
      enum:
      - call-issuer
      - do-not-honor
      - processing-error
      - invalid-transaction
      - invalid-amount
      - no-such-issuer
      - reenter-transaction
      - cvv-mismatch
      - lost-or-stolen
      - insufficient-funds
      - invalid-card-number
      - invalid-merchant
      - expired-card
      - incorrect-pin
      - transaction-not-allowed
      - suspected-fraud
      - amount-limit-exceeded
      - velocity-limit-exceeded
      - revocation-of-authorization
      - card-not-activated
      - issuer-not-available
      - could-not-route
      - cardholder-account-closed
      - unknown-issue
      - duplicate-transaction
      nullable: true
      type: string
    RefundCardDetails:
      example:
        confirmedOn: 2000-01-23T04:56:07.000+00:00
        settledOn: 2000-01-23T04:56:07.000+00:00
        initiatedOn: 2000-01-23T04:56:07.000+00:00
        completedOn: 2000-01-23T04:56:07.000+00:00
        failedOn: 2000-01-23T04:56:07.000+00:00
      nullable: true
      properties:
        status:
          $ref: '#/components/schemas/RefundCardStatus'
        failureCode:
          $ref: '#/components/schemas/CardFailureCode'
        initiatedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        confirmedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        settledOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        failedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        completedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
      type: object
    RefundCardStatus:
      description: Status of the refund.
      enum:
      - initiated
      - confirmed
      - settled
      - failed
      - completed
      type: string
    GetDisputes:
      description: A list of disputes for a card transfer.
      items:
        $ref: '#/components/schemas/GetDispute'
      type: array
    GetDispute:
      description: Details of a card dispute.
      properties:
        disputeID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
      type: object
    GetTransferFullSource:
      allOf:
      - $ref: '#/components/schemas/GetTransferFullSourceDestination'
      - $ref: '#/components/schemas/GetTransferFullSource_allOf'
    GetTransferFullSourceDestination:
      properties:
        paymentMethodID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        paymentMethodType:
          $ref: '#/components/schemas/PaymentMethodType'
        account:
          $ref: '#/components/schemas/GetTransferPartialAccount'
        bankAccount:
          allOf:
          - $ref: '#/components/schemas/BankAccountResponse'
          nullable: true
          type: object
        wallet:
          allOf:
          - $ref: '#/components/schemas/WalletResponse'
          nullable: true
          type: object
        card:
          allOf:
          - $ref: '#/components/schemas/Card'
          nullable: true
          type: object
        applePay:
          allOf:
          - $ref: '#/components/schemas/ApplePayResponse'
          nullable: true
          type: object
        achDetails:
          $ref: '#/components/schemas/ACHDetailsBase'
        cardDetails:
          $ref: '#/components/schemas/CardDetails'
      type: object
    GetTransferPartialAccount:
      properties:
        accountID:
          description: ID of account.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        displayName:
          example: Whole Body Fitness
          maxLength: 64
          type: string
      type: object
    ACHDetailsBase:
      description: ACH specific details about the transaction.
      nullable: true
      properties:
        status:
          $ref: '#/components/schemas/ACHStatus'
        traceNumber:
          example: "124782618117"
          maxLength: 15
          type: string
        return:
          $ref: '#/components/schemas/ACHException'
        correction:
          $ref: '#/components/schemas/ACHException'
        companyEntryDescription:
          description: An optional override of the default NACHA company entry description
            for a transfer.
          example: Gym Dues
          maxLength: 10
          minLength: 4
          type: string
        originatingCompanyName:
          description: An optional override of the default NACHA company name for
            a transfer.
          example: Whole Body Fit
          maxLength: 16
          minLength: 4
          type: string
        secCode:
          $ref: '#/components/schemas/SECCode'
        initiatedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        originatedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        correctedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        returnedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        completedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
      required:
      - status
      - traceNumber
      type: object
    ACHStatus:
      description: Status of the ACH lifecycle.
      enum:
      - initiated
      - originated
      - corrected
      - returned
      - completed
      type: string
    ACHException:
      nullable: true
      properties:
        code:
          type: string
        reason:
          type: string
        description:
          type: string
      type: object
    CompanyEntryDescription:
      description: An optional override of the default NACHA company entry description
        for a transfer.
      example: Gym Dues
      maxLength: 10
      minLength: 4
      type: string
    OriginatingCompanyName:
      description: An optional override of the default NACHA company name for a transfer.
      example: Whole Body Fit
      maxLength: 16
      minLength: 4
      type: string
    SECCode:
      description: Code used to identify the ACH authorization method.
      enum:
      - WEB
      - PPD
      - CCD
      - TEL
      example: WEB
      type: string
    CardDetails:
      description: Card-specific details about the transaction.
      nullable: true
      properties:
        status:
          $ref: '#/components/schemas/CardStatus'
        failureCode:
          $ref: '#/components/schemas/CardFailureCode'
        dynamicDescriptor:
          description: An optional override of the default card statement descriptor
            for a transfer.
          example: WhlBdy *Yoga 11-12
          maxLength: 22
          minLength: 4
          type: string
        transactionSource:
          $ref: '#/components/schemas/TransactionSource'
        initiatedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        confirmedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        settledOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        failedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        canceledOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        completedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        interchangeQualification:
          deprecated: true
          description: DEPRECATED - The program assigned by the card network that
            determines the interchange rate for the transfer.
          example: Visa Signature and Visa Infinite (Spend not-qualified) Product
            1
          nullable: true
          type: string
        feeProgram:
          description: The program assigned by the card network that determines the
            interchange rate for the transfer.
          example: Visa Signature and Visa Infinite (Spend not-qualified) Product
            1
          nullable: true
          type: string
      required:
      - status
      type: object
    CardStatus:
      description: Status for card payment lifecycle.
      enum:
      - initiated
      - confirmed
      - canceled
      - settled
      - failed
      - completed
      type: string
    DynamicDescriptor:
      description: An optional override of the default card statement descriptor for
        a transfer.
      example: WhlBdy *Yoga 11-12
      maxLength: 22
      minLength: 4
      type: string
    TransactionSource:
      description: |
        Specifies the nature and initiator of a transaction. Crucial for recurring and merchant-initiated transactions as per card scheme rules. Omit for customer-initiated e-commerce transactions.

        - `first-recurring`: Initial transaction in a recurring series or saving a card for future merchant-initiated charges
        - `recurring`: Regular, merchant-initiated scheduled transactions
        - `unscheduled`: Non-regular, merchant-initiated transactions like account top-ups
      enum:
      - first-recurring
      - recurring
      - unscheduled
      nullable: true
      type: string
    ACHDetailsSource:
      allOf:
      - $ref: '#/components/schemas/ACHDetailsBase'
      - $ref: '#/components/schemas/ACHDetailsSource_allOf'
      nullable: true
      type: object
    DebitHoldPeriod:
      description: An optional override of your default ACH hold period in banking
        days. The hold period must be longer than or equal to your default setting.
      enum:
      - no-hold
      - 1-day
      - 2-days
      example: 2-days
      format: enum
      type: string
    GetTransferFullDestination:
      allOf:
      - $ref: '#/components/schemas/GetTransferFullSourceDestination'
      - $ref: '#/components/schemas/GetTransferFullDestination_allOf'
    RTPDetails:
      description: RTP specific details about the transaction.
      nullable: true
      properties:
        status:
          $ref: '#/components/schemas/RTPStatus'
        networkResponseCode:
          description: Code returned by rail network on failure.
          nullable: true
          type: string
        failureCode:
          $ref: '#/components/schemas/RTPFailureCode'
        initiatedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        completedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        failedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        acceptedWithoutPostingOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
      required:
      - status
      type: object
    RTPStatus:
      description: Status of the RTP lifecycle.
      enum:
      - initiated
      - completed
      - failed
      - accepted-without-posting
      type: string
    RTPFailureCode:
      description: Status codes for RTP failures.
      enum:
      - processing-error
      - invalid-account
      - account-closed
      - account-blocked
      - invalid-field
      - transaction-not-supported
      - limit-exceeded
      - invalid-amount
      - customer-deceased
      - other
      nullable: true
      type: string
    TransferPostResponse:
      oneOf:
      - $ref: '#/components/schemas/CreatedTransfer'
      - $ref: '#/components/schemas/GetTransferFull'
      type: object
    CreatedTransfer:
      properties:
        transferID:
          description: Identifier for the transfer.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
      title: Asynchronous transfer response
      type: object
    TransferID:
      description: Identifier for the transfer.
      format: uuid
      maxLength: 36
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      type: string
    CreateTransfer:
      example:
        amount:
          currency: USD
          value: 1204
        metadata:
          key: metadata
        facilitatorFee:
          total: 0
          markup: 6
          markupDecimal: "0.987654321"
          totalDecimal: "12.987654321"
        destination:
          paymentMethodID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          achDetails:
            companyEntryDescription: Gym Dues
            originatingCompanyName: Whole Body Fit
        description: Pay Instructor for May 15 Class
        source:
          paymentMethodID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          transferID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        source:
          $ref: '#/components/schemas/CreateTransfer_source'
        destination:
          $ref: '#/components/schemas/CreateTransfer_destination'
        amount:
          $ref: '#/components/schemas/Amount'
        facilitatorFee:
          $ref: '#/components/schemas/CreateFacilitatorFee'
        description:
          description: An optional description of the transfer for your own internal
            use.
          example: Pay Instructor for May 15 Class
          maxLength: 128
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Free-form key-value pair list. Useful for storing information
            that is not captured elsewhere.
          type: object
      required:
      - amount
      - destination
      - source
      type: object
    CreateCardDetailsSource:
      allOf:
      - $ref: '#/components/schemas/CreateCardDetailsBase'
      - $ref: '#/components/schemas/CreateCardDetailsSource_allOf'
      nullable: true
      type: object
    CreateCardDetailsBase:
      description: If transfer involves card acceptance, override default card acceptance
        properties.
      nullable: true
      properties:
        dynamicDescriptor:
          description: An optional override of the default card statement descriptor
            for a transfer.
          example: WhlBdy *Yoga 11-12
          maxLength: 22
          minLength: 4
          type: string
      type: object
    CreateAchDetailsSource:
      allOf:
      - $ref: '#/components/schemas/CreateACHDetailsBase'
      - $ref: '#/components/schemas/CreateAchDetailsSource_allOf'
      nullable: true
      type: object
    CreateACHDetailsBase:
      description: If transfer involves ACH, override default card acceptance properties.
      example:
        companyEntryDescription: Gym Dues
        originatingCompanyName: Whole Body Fit
      nullable: true
      properties:
        companyEntryDescription:
          description: An optional override of the default NACHA company entry description
            for a transfer.
          example: Gym Dues
          maxLength: 10
          minLength: 4
          type: string
        originatingCompanyName:
          description: An optional override of the default NACHA company name for
            a transfer.
          example: Whole Body Fit
          maxLength: 16
          minLength: 4
          type: string
      type: object
    CreateCardDetailsDestination:
      allOf:
      - $ref: '#/components/schemas/CreateCardDetailsBase'
      nullable: true
      type: object
    CreateFacilitatorFee:
      description: Total or markup fee.
      example:
        total: 0
        markup: 6
        markupDecimal: "0.987654321"
        totalDecimal: "12.987654321"
      properties:
        total:
          description: Total facilitator fee in cents. Only either `total` or `totalDecimal`
            can be set.
          format: int64
          nullable: true
          type: integer
        totalDecimal:
          allOf:
          - $ref: '#/components/schemas/DecimalString'
          description: Same as `total`, but a decimal-formatted numerical string that
            represents up to 9 decimal place precision. Only either `total` or `totalDecimal`
            can be set. Set this field if you expect the fee to be in fractions of
            a cent.
          example: "12.987654321"
          nullable: true
          type: string
        markup:
          description: Markup facilitator fee in cents. Only either `markup` or `markupDecimal`
            can be set.
          format: int64
          nullable: true
          type: integer
        markupDecimal:
          allOf:
          - $ref: '#/components/schemas/DecimalString'
          description: Same as `markup`, but a decimal-formatted numerical string
            that represents up to 9 decimal place precision. Only either `markup`
            or `markupDecimal` can be set. Set this field if you expect the fee to
            be in fractions of a cent.
          example: "0.987654321"
          nullable: true
          type: string
      type: object
    WaitFor:
      enum:
      - rail-response
      type: string
    PatchTransfer:
      example:
        metadata:
          key: metadata
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Free-form key-value pair list. Useful for storing information
            that is not captured elsewhere.
          type: object
      type: object
    CreatedTransferOptions:
      example:
        destinationOptions:
        - ""
        - ""
        sourceOptions:
        - ""
        - ""
      properties:
        sourceOptions:
          items:
            allOf:
            - $ref: '#/components/schemas/PaymentMethod'
            - example:
                paymentMethodID: 2b42ad2a-7586-4e55-a268-10d585186c27
              type: object
          type: array
        destinationOptions:
          items:
            allOf:
            - $ref: '#/components/schemas/PaymentMethod'
            - example:
                paymentMethodID: 8485a2ce-c9b0-4d49-bfa1-60e88a79ce31
              type: object
          type: array
      type: object
    CreateTransferOptions:
      example:
        amount:
          currency: USD
          value: 1204
        destination:
          accountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          paymentMethodID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        source:
          accountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          paymentMethodID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        source:
          $ref: '#/components/schemas/CreateTransferOptions_source'
        destination:
          $ref: '#/components/schemas/CreateTransferOptions_source'
        amount:
          $ref: '#/components/schemas/Amount'
      required:
      - amount
      - destination
      - source
      type: object
    RefundPostResponse:
      oneOf:
      - $ref: '#/components/schemas/CreatedRefund'
      - $ref: '#/components/schemas/GetRefund'
      type: object
    CreatedRefund:
      properties:
        refundID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
      title: Asynchronous refund response
      type: object
    CreateRefund:
      description: Specifies a partial amount to refund. This request body is optional,
        an empty body will issue a refund for the full amount of the original transfer.
      example:
        amount: 1000
      properties:
        amount:
          description: Amount to refund in cents. If null, the original transfer's
            full amount will be refunded.
          example: 1000
          format: int64
          type: integer
      type: object
    CreatedReversal:
      example:
        cancellation:
          createdOn: 2000-01-23T04:56:07.000+00:00
        refund: '{}'
      properties:
        cancellation:
          $ref: '#/components/schemas/CreatedCancellation'
        refund:
          allOf:
          - $ref: '#/components/schemas/GetRefund'
          nullable: true
          type: object
      type: object
    CreatedCancellation:
      example:
        createdOn: 2000-01-23T04:56:07.000+00:00
      nullable: true
      properties:
        status:
          $ref: '#/components/schemas/CancellationStatus'
        createdOn:
          format: date-time
          maxLength: 24
          type: string
      type: object
    CancellationStatus:
      description: Cancellation status.
      enum:
      - pending
      - completed
      type: string
    Error_2:
      $ref: '#/components/schemas/Error'
    CreateReversal:
      example:
        amount: 1000
      properties:
        amount:
          description: Amount to reverse in cents. If null, the original transfer's
            full amount will be reversed. Partial amounts will automatically trigger
            a refund instead of a cancellation.
          example: 1000
          format: int64
          type: integer
      type: object
    BankAccounts:
      items:
        $ref: '#/components/schemas/BankAccountResponse'
      type: array
    BankAccountResponse:
      additionalProperties: false
      description: Describes a bank account on a Moov account.
      example:
        holderName: Jules Jackson
        exceptionDetails:
          description: description
        bankName: Chase Bank
        updatedOn: 2000-01-23T04:56:07.000+00:00
        lastFourAccountNumber: "7000"
        routingNumber: routingNumber
        bankAccountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        paymentMethods:
        - paymentMethodID: 9506dbf6-4208-44c3-ad8a-e4431660e1f2
          paymentMethodType: ach-debit-fund
        - paymentMethodID: 3f9969cf-a1f3-4d83-8ddc-229a506651cf
          paymentMethodType: ach-debit-collect
        fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
      properties:
        bankAccountID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        fingerprint:
          description: Once the bank account is linked, we don't reveal the full bank
            account number. The fingerprint acts as a way to identify whether two
            linked bank accounts are the same.
          example: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
          maxLength: 100
          type: string
        status:
          $ref: '#/components/schemas/BankAccountStatus'
        holderName:
          example: Jules Jackson
          type: string
        holderType:
          $ref: '#/components/schemas/HolderType'
        bankName:
          example: Chase Bank
          type: string
        bankAccountType:
          $ref: '#/components/schemas/BankAccountType'
        routingNumber:
          type: string
        lastFourAccountNumber:
          example: "7000"
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
        statusReason:
          $ref: '#/components/schemas/BankAccountStatusReason'
        exceptionDetails:
          $ref: '#/components/schemas/ExceptionDetails'
        paymentMethods:
          description: "Includes any payment methods generated for a newly created\
            \ bank account, removing the need to \ncall the List Payment Methods endpoint\
            \ following a successful Create BankAccount request.\n\n**NOTE: This field\
            \ is only populated for Create BankAccount requests made with the `X-Wait-For`\
            \ header.**\n"
          example:
          - paymentMethodID: 9506dbf6-4208-44c3-ad8a-e4431660e1f2
            paymentMethodType: ach-debit-fund
          - paymentMethodID: 3f9969cf-a1f3-4d83-8ddc-229a506651cf
            paymentMethodType: ach-debit-collect
          items:
            $ref: '#/components/schemas/BasicPaymentMethod'
          type: array
      type: object
    BankAccountStatus:
      description: The bank account status.
      enum:
      - new
      - verified
      - verificationFailed
      - pending
      - errored
      type: string
    HolderType:
      description: The type of holder on a funding source.
      enum:
      - individual
      - business
      type: string
    BankAccountType:
      description: The bank account type.
      enum:
      - checking
      - savings
      - unknown
      type: string
    BankAccountStatusReason:
      description: The reason the bank account status changed to the current value.
      enum:
      - bank-account-created
      - verification-initiated
      - micro-deposit-attempts-exceeded
      - micro-deposit-expired
      - max-verification-failures
      - verification-successful
      - ach-debit-return
      - ach-credit-return
      - rtp-credit-failure
      - micro-deposit-return
      - admin-action
      - other
      type: string
    ExceptionDetails:
      description: Reason for, and details related to, an `errored` or `verificationFailed`
        bank account status.
      example:
        description: description
      nullable: true
      properties:
        achReturnCode:
          $ref: '#/components/schemas/ACHReturnCode'
        rtpRejectionCode:
          $ref: '#/components/schemas/RTPRejectionCode'
        description:
          description: Details related to an `errored` or `verificationFailed` bank
            account status.
          type: string
      type: object
    ACHReturnCode:
      description: The return code of an ACH transaction that caused the bank account
        status to change.
      enum:
      - R02
      - R03
      - R04
      - R05
      - R07
      - R08
      - R10
      - R11
      - R12
      - R13
      - R14
      - R15
      - R16
      - R17
      - R20
      - R23
      - R29
      - R34
      - R38
      - R39
      type: string
    RTPRejectionCode:
      description: The rejection code of an RTP transaction that caused the bank account
        status to change.
      enum:
      - AC03 - Account Invalid
      - AC04 - Account Closed
      - AC06 - Account Blocked
      - AC14 - Creditor Account Type Invalid
      - AG01 - Transactions Forbidden On Account
      - AG03 - Transaction Type Not Supported
      - MD07 - Customer Deceased
      type: string
    BankAccountPaymentMethods:
      description: "Includes any payment methods generated for a newly created bank\
        \ account, removing the need to \ncall the List Payment Methods endpoint following\
        \ a successful Create BankAccount request.\n\n**NOTE: This field is only populated\
        \ for Create BankAccount requests made with the `X-Wait-For` header.**\n"
      example:
      - paymentMethodID: 9506dbf6-4208-44c3-ad8a-e4431660e1f2
        paymentMethodType: ach-debit-fund
      - paymentMethodID: 3f9969cf-a1f3-4d83-8ddc-229a506651cf
        paymentMethodType: ach-debit-collect
      items:
        $ref: '#/components/schemas/BasicPaymentMethod'
      type: array
    BankAccountPayload:
      oneOf:
      - $ref: '#/components/schemas/BankAccount'
      - $ref: '#/components/schemas/PlaidLink'
      - $ref: '#/components/schemas/Plaid'
      - $ref: '#/components/schemas/MX'
      type: object
    BankAccount:
      additionalProperties: false
      description: Describes the account to link to the Moov account.
      properties:
        account:
          $ref: '#/components/schemas/BankAccountIntegration'
      title: Bank account
      type: object
    BankAccountIntegration:
      additionalProperties: false
      description: Describes the account to link to the Moov account.
      nullable: true
      properties:
        holderName:
          example: Jules Jackson
          type: string
        holderType:
          $ref: '#/components/schemas/HolderType'
        accountNumber:
          example: "0004321567000"
          type: string
        bankAccountType:
          $ref: '#/components/schemas/BankAccountType'
        routingNumber:
          example: "123456789"
          type: string
      required:
      - accountNumber
      - accountType
      - bankAccountType
      - holderName
      - holderType
      - routingNumber
      title: Bank account
      type: object
    PlaidLink:
      additionalProperties: false
      description: This is used by Moov.js with a Plaid reseller relationship. Describes
        the account to link to the Moov account using a Plaid using a Plaid public
        token.
      properties:
        plaidLink:
          $ref: '#/components/schemas/PlaidLinkIntegration'
      title: Plaid Link
      type: object
    PlaidLinkIntegration:
      description: This is used by Moov.js with a Plaid reseller relationship. The
        details of a Plaid link integration for a linked funding source. <br><br>
        `sandbox` - (requires Plaid reseller setup with Moov) When linking a bank
        account to a `sandbox` account using a Plaid public token it will utilize
        Plaid's sandbox environment. The Plaid public token provided must be generated
        from Plaid's sandbox environment. Please see <a href="https://plaid.com/docs/api/sandbox/#sandboxpublic_tokencreate"
        target="_blank">Plaid's sandbox documentation</a> for more details.
      nullable: true
      properties:
        publicToken:
          type: string
      type: object
    Plaid:
      additionalProperties: false
      description: Describes the account to link to the Moov account using a Plaid
        processor token.
      properties:
        plaid:
          $ref: '#/components/schemas/PlaidIntegration'
      title: Plaid Processor
      type: object
    PlaidIntegration:
      description: |
        The details of a Plaid processor integration for a linked funding source. <br><br> `sandbox` - When linking a bank account to a `sandbox` account using a Plaid processor token a default bank account response will be used. The following default data will be used to generate the bank account in this flow:
        ```
          RoutingNumber: "011401533",
          AccountNumber: "1111222233330000",
          AccountType:   "checking",
          Mask:          "0000"
        ```
      nullable: true
      properties:
        token:
          type: string
      type: object
    MX:
      additionalProperties: false
      description: |
        Describes the account to link to the Moov account using a MX processor token. <br><br> `sandbox` - When linking a bank account to a `sandbox` account using an MX authorization token a default bank account routing number will be used. The following default data will be used to generate the bank account in this flow:
        ```
          RoutingNumber: "123456780",
          BankName: "Gringotts Bank"
        ```
      properties:
        mx:
          $ref: '#/components/schemas/MXAuthorizationCode'
      title: MX processor
      type: object
    MXAuthorizationCode:
      description: The authorization code of a MX account which allows a processor
        to retrieve a linked payment account. <br><br> `sandbox` - When linking a
        bank account to a `sandbox` account using a MX authorization code it will
        utilize MX's sandbox environment. The MX authorization code provided must
        be generated from MX's sandbox environment.
      nullable: true
      properties:
        authorizationCode:
          type: string
      type: object
    WaitFor_2:
      enum:
      - payment-method
      type: string
    CompleteMicroDepositsResponse:
      additionalProperties: false
      example: {}
      properties:
        status:
          $ref: '#/components/schemas/MicroDepositStatus'
      type: object
    MicroDepositStatus:
      description: The micro-deposit status.
      enum:
      - verified
      type: string
    CompleteMicroDepositsRequest:
      additionalProperties: false
      description: Request to complete the micro-deposit verification workflow.
      example:
        amounts:
        - 18
        - 21
      properties:
        amounts:
          description: Two positive integers, in cents, equal to the values of the
            micro-deposits sent to the bank account.
          example:
          - 18
          - 21
          items:
            type: integer
          type: array
      type: object
    Cards:
      items:
        $ref: '#/components/schemas/Card'
      type: array
    Card:
      additionalProperties: false
      description: Describes a card on a Moov account.
      example:
        holderName: Jules Jackson
        cardOnFile: true
        cardVerification:
          cvv: match
          addressLine1: match
          postalCode: match
          accountName:
            firstName: match
            lastName: match
            middleName: match
            fullName: match
        bin: "123456"
        cardAccountUpdater:
          updatedOn: 2000-01-23T04:56:07.000+00:00
          updateType: number-update
        lastFourCardNumber: "1234"
        domesticPullFromCard: supported
        issuer: GRINGOTTS BANK
        issuerCountry: US
        cardID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        paymentMethods:
        - paymentMethodID: 9506dbf6-4208-44c3-ad8a-e4431660e1f2
          paymentMethodType: card-payment
        - paymentMethodID: 3f9969cf-a1f3-4d83-8ddc-229a506651cf
          paymentMethodType: push-to-card
        fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
        domesticPushToCard: fast-funds
        expiration:
          month: "01"
          year: "21"
        billingAddress:
          country: US
          stateOrProvince: CO
          city: Boulder
          postalCode: "80301"
          addressLine1: 123 Main Street
          addressLine2: Apt 302
        merchantAccountID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        brand: Discover
      properties:
        cardID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        fingerprint:
          description: |
            Uniquely identifies a linked payment card or token.
            For Apple Pay, the fingerprint is based on the tokenized card number and may vary based on the user's device.
            This field can be used to identify specific payment methods across multiple accounts on your platform.
          example: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
          maxLength: 100
          type: string
        brand:
          allOf:
          - $ref: '#/components/schemas/CardBrand'
          example: Discover
          x-go-custom-tag: otel:"card_brand"
        cardType:
          $ref: '#/components/schemas/CardType'
        lastFourCardNumber:
          example: "1234"
          type: string
          x-go-custom-tag: otel:"last_four_card_number"
        bin:
          example: "123456"
          type: string
        expiration:
          $ref: '#/components/schemas/CardExpiration'
        holderName:
          example: Jules Jackson
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
        cardVerification:
          allOf:
          - $ref: '#/components/schemas/CardVerifications'
          example:
            cvv: match
            addressLine1: match
            postalCode: match
            accountName:
              firstName: match
              lastName: match
              middleName: match
              fullName: match
          x-go-custom-tag: otel:"card_verification"
        issuer:
          example: GRINGOTTS BANK
          type: string
          x-go-custom-tag: otel:"issuer"
        issuerCountry:
          example: US
          type: string
          x-go-custom-tag: otel:"issuer_country"
        cardOnFile:
          default: false
          description: Indicates cardholder has authorized card to be stored for future
            payments.
          example: true
          type: boolean
          x-go-custom-tag: otel:"card_on_file"
        merchantAccountID:
          description: "ID of the Moov account acting as a merchant or other entity\
            \ authorized to store the card. \nDefaults to your platform account ID\
            \ if cardOnFile is set to true and no other account is provided.\n"
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        cardAccountUpdater:
          $ref: '#/components/schemas/CardAccountUpdater'
        domesticPushToCard:
          allOf:
          - $ref: '#/components/schemas/DomesticPushToCard'
          example: fast-funds
          x-go-custom-tag: otel:"domestic_push_to_card"
        domesticPullFromCard:
          allOf:
          - $ref: '#/components/schemas/DomesticPullFromCard'
          example: supported
          x-go-custom-tag: otel:"domestic_pull_from_card"
        paymentMethods:
          description: "Includes any payment methods generated for a newly linked\
            \ card, removing the need to \ncall the List Payment Methods endpoint\
            \ following a successful Link Card request.\n\n**NOTE: This field is only\
            \ populated for Link Card requests made with the `X-Wait-For` header.**\n"
          example:
          - paymentMethodID: 9506dbf6-4208-44c3-ad8a-e4431660e1f2
            paymentMethodType: card-payment
          - paymentMethodID: 3f9969cf-a1f3-4d83-8ddc-229a506651cf
            paymentMethodType: push-to-card
          items:
            $ref: '#/components/schemas/BasicPaymentMethod'
          type: array
      type: object
    Fingerprint:
      description: |
        Uniquely identifies a linked payment card or token.
        For Apple Pay, the fingerprint is based on the tokenized card number and may vary based on the user's device.
        This field can be used to identify specific payment methods across multiple accounts on your platform.
      example: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
      maxLength: 100
      type: string
    CardBrand:
      description: The card brand.
      enum:
      - American Express
      - Discover
      - Mastercard
      - Visa
      example: Discover
      type: string
    CardType:
      description: The type of the card.
      enum:
      - debit
      - credit
      - prepaid
      - unknown
      type: string
    CardExpiration:
      description: The expiration date of the card or token.
      example:
        month: "01"
        year: "21"
      properties:
        month:
          example: "01"
          maxLength: 2
          minLength: 2
          type: string
        year:
          example: "21"
          maxLength: 2
          minLength: 2
          type: string
      type: object
    CardVerifications:
      additionalProperties: false
      description: The results of submitting cardholder data to a card network for
        verification.
      properties:
        cvv:
          allOf:
          - $ref: '#/components/schemas/CardVerificationResult'
          example: match
          x-go-custom-tag: otel:"cvv"
        addressLine1:
          allOf:
          - $ref: '#/components/schemas/CardVerificationResult'
          example: match
          x-go-custom-tag: otel:"address_line1"
        postalCode:
          allOf:
          - $ref: '#/components/schemas/CardVerificationResult'
          example: match
          x-go-custom-tag: otel:"postal_code"
        accountName:
          allOf:
          - $ref: '#/components/schemas/AccountNameVerification'
          example:
            firstName: match
            lastName: match
            middleName: match
            fullName: match
          x-go-custom-tag: otel:"account_name_verification"
      type: object
    CardVerificationResult:
      enum:
      - noMatch
      - match
      - notChecked
      - unavailable
      - partialMatch
      example: match
      type: string
    AccountNameVerification:
      additionalProperties: false
      description: The results of submitting cardholder name to a card network for
        verification.
      properties:
        firstName:
          allOf:
          - $ref: '#/components/schemas/CardVerificationResult'
          example: match
          x-go-custom-tag: otel:"first_name"
        lastName:
          allOf:
          - $ref: '#/components/schemas/CardVerificationResult'
          example: match
          x-go-custom-tag: otel:"last_name"
        middleName:
          allOf:
          - $ref: '#/components/schemas/CardVerificationResult'
          example: match
          x-go-custom-tag: otel:"middle_name"
        fullName:
          allOf:
          - $ref: '#/components/schemas/CardVerificationResult'
          example: match
          x-go-custom-tag: otel:"full_name"
      type: object
    MerchantAccountID:
      description: "ID of the Moov account acting as a merchant or other entity authorized\
        \ to store the card. \nDefaults to your platform account ID if cardOnFile\
        \ is set to true and no other account is provided.\n"
      format: uuid
      maxLength: 36
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      type: string
    CardAccountUpdater:
      additionalProperties: false
      description: The results of the most recent card update request.
      example:
        updatedOn: 2000-01-23T04:56:07.000+00:00
        updateType: number-update
      properties:
        updatedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
        updateType:
          $ref: '#/components/schemas/CardUpdateReason'
      type: object
    CardUpdateReason:
      description: The results of the card update request.
      enum:
      - unspecified
      - account-closed
      - contact-cardholder
      - expiration-update
      - no-change
      - no-match
      - number-update
      example: number-update
      type: string
    DomesticPushToCard:
      description: Indicates which level of domestic push-to-card transfer is supported
        by the card, if any.
      enum:
      - not-supported
      - standard
      - fast-funds
      - unknown
      example: fast-funds
      type: string
    DomesticPullFromCard:
      description: Indicates if the card supports domestic pull-from-card transfer.
      enum:
      - not-supported
      - supported
      - unknown
      example: supported
      type: string
    CardPaymentMethods:
      description: "Includes any payment methods generated for a newly linked card,\
        \ removing the need to \ncall the List Payment Methods endpoint following\
        \ a successful Link Card request.\n\n**NOTE: This field is only populated\
        \ for Link Card requests made with the `X-Wait-For` header.**\n"
      example:
      - paymentMethodID: 9506dbf6-4208-44c3-ad8a-e4431660e1f2
        paymentMethodType: card-payment
      - paymentMethodID: 3f9969cf-a1f3-4d83-8ddc-229a506651cf
        paymentMethodType: push-to-card
      items:
        $ref: '#/components/schemas/BasicPaymentMethod'
      type: array
    CardRequest:
      additionalProperties: false
      description: Describes the card to link to the Moov account.
      example:
        cardCvv: "0123"
        holderName: Jules Jackson
        cardOnFile: false
        expiration:
          month: "01"
          year: "21"
        billingAddress:
          country: US
          stateOrProvince: CO
          city: Boulder
          postalCode: "80301"
          addressLine1: 123 Main Street
          addressLine2: Apt 302
        merchantAccountID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cardNumber: "4111111111111111"
      properties:
        cardNumber:
          description: "The card's Primary Account Number (PAN). \nTypical PANs are\
            \ 15 or 16 digits, though it's possible to have a PAN as short as 13 digits\
            \ or as long as 19 digits.\n"
          example: "4111111111111111"
          pattern: ^[0-9]{13,19}$
          type: string
        expiration:
          $ref: '#/components/schemas/CardExpiration'
        cardCvv:
          description: "The card's Card Verification Value (CVV). \nThis value is\
            \ known by a few different names - such as CVV2, CVC, or CID - depending\
            \ on the card brand. Visa,\nMastercard, and Discover typically assign\
            \ 3 digit CVVs, while American Express assigns a 4 digit value.\n"
          example: "0123"
          maxLength: 4
          minLength: 3
          type: string
        holderName:
          description: The name of the cardholder as it appears on the card.
          example: Jules Jackson
          type: string
        billingAddress:
          $ref: '#/components/schemas/CardAddress'
        cardOnFile:
          default: false
          description: "Indicates cardholder has authorized card to be stored for\
            \ future payments. \nOnly cards marked as card-on-file are eligible for\
            \ automatic updates via card account updater.\n"
          type: boolean
        merchantAccountID:
          description: "ID of the Moov account acting as a merchant or other entity\
            \ authorized to store the card. \nDefaults to your platform account ID\
            \ if cardOnFile is set to true and no other account is provided.\n"
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
      required:
      - billingAddress
      - cardCvv
      - cardNumber
      - expiration
      type: object
    CardAddress:
      additionalProperties: false
      example:
        country: US
        stateOrProvince: CO
        city: Boulder
        postalCode: "80301"
        addressLine1: 123 Main Street
        addressLine2: Apt 302
      properties:
        addressLine1:
          example: 123 Main Street
          maxLength: 60
          type: string
        addressLine2:
          example: Apt 302
          maxLength: 32
          type: string
        city:
          example: Boulder
          maxLength: 24
          type: string
        stateOrProvince:
          example: CO
          maxLength: 2
          type: string
        postalCode:
          example: "80301"
          maxLength: 5
          type: string
        country:
          example: US
          maxLength: 2
          type: string
      required:
      - postalCode
      type: object
    CardUpdateRequest:
      additionalProperties: false
      description: Describes properties of a card to update.
      example:
        cardCvv: cardCvv
        cardOnFile: false
        expiration:
          month: "01"
          year: "21"
        billingAddress:
          country: US
          stateOrProvince: CO
          city: Boulder
          postalCode: "80301"
          addressLine1: 123 Main Street
          addressLine2: Apt 302
      properties:
        expiration:
          $ref: '#/components/schemas/UpdateCardExpiration'
        cardCvv:
          allOf:
          - $ref: '#/components/schemas/CardVerificationValue'
          description: "Provide a CVV to trigger a re-verification of this card. \n\
            Omit CVV to update LinkedCard fields without re-verification.\n"
          nullable: true
          type: string
        billingAddress:
          $ref: '#/components/schemas/UpdateAddress'
        cardOnFile:
          default: false
          description: Indicates cardholder has authorized card to be stored for future
            payments.
          type: boolean
      type: object
    UpdateCardExpiration:
      description: "Provide expiration date fields as necessary to patch the currently\
        \ saved date. \nOmit any fields that should not be changed.\n"
      example:
        month: "01"
        year: "21"
      nullable: true
      properties:
        month:
          example: "01"
          maxLength: 2
          minLength: 2
          nullable: true
          type: string
        year:
          example: "21"
          maxLength: 2
          minLength: 2
          nullable: true
          type: string
      type: object
    CardVerificationValue:
      example: "123"
      maxLength: 4
      minLength: 3
      type: string
    UpdateAddress:
      additionalProperties: false
      description: "Provide address fields as necessary to patch the currently saved\
        \ address. \nOmit any fields that should not be changed.\n"
      example:
        country: US
        stateOrProvince: CO
        city: Boulder
        postalCode: "80301"
        addressLine1: 123 Main Street
        addressLine2: Apt 302
      nullable: true
      properties:
        addressLine1:
          example: 123 Main Street
          maxLength: 60
          nullable: true
          type: string
        addressLine2:
          example: Apt 302
          maxLength: 32
          nullable: true
          type: string
        city:
          example: Boulder
          maxLength: 24
          nullable: true
          type: string
        stateOrProvince:
          example: CO
          maxLength: 2
          nullable: true
          type: string
        postalCode:
          example: "80301"
          maxLength: 5
          nullable: true
          type: string
        country:
          example: US
          maxLength: 2
          nullable: true
          type: string
      type: object
    ApplePayMerchantDomains:
      example:
        accountID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        displayName: Example Merchant
        domains:
        - checkout.classbooker.dev
        updatedOn: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        accountID:
          description: ID of account.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        displayName:
          description: |
            A string of 64 or fewer UTF-8 characters. Displayed in the Buy button.
          example: Example Merchant
          maxLength: 64
          minLength: 0
          type: string
        domains:
          description: |
            A list of fully qualified top-level or sub-domain names where you will accept Apple Pay.
          example:
          - checkout.classbooker.dev
          items:
            type: string
          type: array
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
    RegisterApplePayMerchantDomains:
      example:
        displayName: Example Merchant
        domains:
        - checkout.classbooker.dev
      properties:
        displayName:
          description: |
            A string of 64 or fewer UTF-8 characters. Displayed in the Buy button.
          example: Example Merchant
          maxLength: 64
          minLength: 0
          type: string
        domains:
          description: |
            A list of fully qualified top-level or sub-domain names where you will accept Apple Pay. Items must be unique.
          example:
          - checkout.classbooker.dev
          items:
            type: string
          type: array
      required:
      - displayName
      - domains
    UpdateApplePayMerchantDomains:
      example:
        removeDomains:
        - checkout.classbooker.dev
        addDomains:
        - pay.classbooker.dev
      properties:
        addDomains:
          description: |
            A list of fully qualified top-level or sub-domain names to be added. Items must be unique.
          example:
          - pay.classbooker.dev
          items:
            type: string
          type: array
        removeDomains:
          description: |
            A list of previously added fully qualified top-level or sub-domain names to be removed.
          example:
          - checkout.classbooker.dev
          items:
            type: string
          type: array
    ApplePaySession:
      description: |
        Stringified session object returned from Apple Pay. This should be converted to JSON when passed to Apple.
      properties: {}
    CreateApplePaySession:
      example:
        displayName: Example Merchant
        domain: checkout.classbooker.dev
      properties:
        domain:
          description: |
            A fully qualified top-level or sub-domain name where you will accept Apple Pay. Should not include "https".
          example: checkout.classbooker.dev
          type: string
        displayName:
          description: |
            A string of 64 or fewer UTF-8 characters. Displayed in the Buy button.
          example: Example Merchant
          maxLength: 64
          minLength: 0
          type: string
      required:
      - displayName
      - domain
    LinkedApplePayPaymentMethod:
      example:
        applePay:
          fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
          dynamicLastFour: "1234"
          expiration:
            month: "01"
            year: "21"
          cardDisplayName: Visa 1234
          brand: Discover
        paymentMethodID: paymentMethodID
      properties:
        paymentMethodID:
          description: ID of the payment method.
          type: string
        paymentMethodType:
          $ref: '#/components/schemas/PaymentMethodType'
        applePay:
          $ref: '#/components/schemas/ApplePayResponse'
      required:
      - applePay
      - paymentMethodID
      - paymentMethodType
    LinkApplePay:
      example:
        billingContact:
          countryCode: US
          postalCode: "30345"
          locality: Phoenix
          addressLines:
          - 123 Sesame Street
          administrativeArea: AZ
        token:
          paymentData:
            data: 3+f4oOTwPa6f1UZ6tG...CE=
            signature: MIAGCSqGSIb3DQ.AAAA==
            header:
              ephemeralPublicKey: MFkwEK...Md==
              publicKeyHash: l0CnXdMv...D1I=
              transactionId: 32b...4f3
            version: EC_v1
          transactionIdentifier: 32b...4f3
          paymentMethod:
            displayName: Visa 1234
            type: debit
            network: Visa
      properties:
        token:
          $ref: '#/components/schemas/LinkApplePay_token'
        billingContact:
          $ref: '#/components/schemas/LinkApplePay_billingContact'
      required:
      - token
      type: object
    NetworkIDs:
      example:
        mastercardMid: "123456789012345"
        accountID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        discoverMid: "123456789012345"
        visaMid: "123456789012345"
        amexMid: "1234567890"
        updatedOn: 2000-01-23T04:56:07.000+00:00
      properties:
        accountID:
          description: ID of account.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        visaMid:
          example: "123456789012345"
          maxLength: 15
          nullable: true
          type: string
        mastercardMid:
          example: "123456789012345"
          maxLength: 15
          nullable: true
          type: string
        discoverMid:
          example: "123456789012345"
          maxLength: 15
          nullable: true
          type: string
        amexMid:
          example: "1234567890"
          maxLength: 10
          nullable: true
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
      required:
      - accountID
    IssuedCards:
      items:
        $ref: '#/components/schemas/IssuedCard'
      type: array
    IssuedCard:
      example:
        issuedCardID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        lastFourCardNumber: "1234"
        memo: memo
        expiration:
          month: "01"
          year: "21"
        brand: Discover
        authorizedUser:
          firstName: Jane
          lastName: Doe
        createdOn: 2000-01-23T04:56:07.000+00:00
        fundingWalletID: fundingWalletID
      properties:
        issuedCardID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        brand:
          $ref: '#/components/schemas/CardBrand'
        lastFourCardNumber:
          example: "1234"
          type: string
        expiration:
          $ref: '#/components/schemas/CardExpiration'
        authorizedUser:
          $ref: '#/components/schemas/AuthorizedUser'
        memo:
          description: Optional descriptor for the card.
          type: string
        fundingWalletID:
          description: Unique identifier for the wallet funding the card.
          type: string
        state:
          $ref: '#/components/schemas/IssuedCardState'
        formFactor:
          $ref: '#/components/schemas/IssuedCardFormFactor'
        createdOn:
          format: date-time
          maxLength: 24
          type: string
    AuthorizedUser:
      description: Fields for identifying an authorized individual.
      example:
        firstName: Jane
        lastName: Doe
      properties:
        firstName:
          example: Jane
          type: string
        lastName:
          example: Doe
          type: string
    IssuedCardState:
      description: |
        The `state` represents the operational status of an issued card. A card can only approve incoming authorizations if it is in an active state.

        - `active`: The card is operational and approves authorizations. Generally becomes active shortly after card creation.
        - `inactive`: The card cannot approve authorizations. This is currently a temporary state assigned post-creation during the activation process.
        - `closed`: The card is permanently deactivated and cannot approve authorizations. A card can be closed by request or when it expires.
        - `pending-verification`: Awaiting additional authorized user verification before the card can be activated.
      enum:
      - active
      - inactive
      - pending-verification
      - closed
      type: string
    IssuedCardFormFactor:
      description: Specifies the type of spend card to be issued. Presently supports
        virtual only, providing a digital number without a physical card.
      enum:
      - virtual
      type: string
    RequestCard:
      example:
        memo: memo
        expiration:
          month: "01"
          year: "21"
        authorizedUser:
          firstName: Jane
          lastName: Doe
          birthDate:
            month: 11
            year: 1989
            day: 9
        fundingWalletID: fundingWalletID
      properties:
        fundingWalletID:
          type: string
        authorizedUser:
          $ref: '#/components/schemas/CreateAuthorizedUser'
        formFactor:
          $ref: '#/components/schemas/IssuedCardFormFactor'
        memo:
          description: Optional descriptive name.
          type: string
        expiration:
          $ref: '#/components/schemas/CardExpiration'
      required:
      - authorizedUser
      - formFactor
      - fundingWalletID
    CreateAuthorizedUser:
      description: Fields for identifying an authorized individual.
      example:
        firstName: Jane
        lastName: Doe
        birthDate:
          month: 11
          year: 1989
          day: 9
      properties:
        firstName:
          example: Jane
          type: string
        lastName:
          example: Doe
          type: string
        birthDate:
          $ref: '#/components/schemas/BirthDate'
      required:
      - firstName
      - lastName
    UpdateIssuedCard:
      example:
        memo: memo
        authorizedUser:
          firstName: Jane
          lastName: Doe
          birthDate:
            month: 11
            year: 1989
            day: 9
      properties:
        state:
          $ref: '#/components/schemas/UpdateIssuedCardState'
        memo:
          description: Optional descriptive name.
          type: string
        authorizedUser:
          $ref: '#/components/schemas/CreateAuthorizedUser'
    UpdateIssuedCardState:
      description: Updates the state of a Moov issued card. Currently only supports
        the closed state.
      enum:
      - closed
      type: string
    FullIssuedCard:
      allOf:
      - $ref: '#/components/schemas/IssuedCard'
      - $ref: '#/components/schemas/PCICardDetails'
      description: Issued card with PAN, CVV, and expiration.
      type: object
    PCICardDetails:
      properties:
        pan:
          example: "1234560000007890"
          maxLength: 19
          minLength: 16
          type: string
        cvv:
          example: "123"
          maxLength: 4
          minLength: 3
          type: string
        expiration:
          $ref: '#/components/schemas/CardExpiration'
    IssuedCardTransactions:
      items:
        $ref: '#/components/schemas/IssuedCardTransaction'
      type: array
    IssuedCardTransaction:
      example:
        issuedCardID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        amount:
          currency: USD
          value: 1204
        transactionDateTime: 2000-01-23T04:56:07.000+00:00
        merchantData:
          country: US
          city: San Francisco
          postalCode: "94107"
          name: Whole Body Fitness
          networkID: "1234567890"
          state: CA
          mcc: "7298"
        createdOn: 2000-01-23T04:56:07.000+00:00
        transactionID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        fundingWalletID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        transactionID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        issuedCardID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        fundingWalletID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
        type:
          $ref: '#/components/schemas/IssuedCardTransactionType'
        status:
          $ref: '#/components/schemas/IssuedCardTransactionStatus'
        merchantData:
          $ref: '#/components/schemas/IssuedCardTransactionMerchant'
        network:
          $ref: '#/components/schemas/IssuedCardTransactionNetwork'
        transactionDateTime:
          format: date-time
          maxLength: 24
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
    IssuedCardTransactionType:
      description: Type of transaction.
      enum:
      - purchase
      - refund
      type: string
    IssuedCardTransactionStatus:
      description: Status of the transaction.
      enum:
      - pending
      - completed
      - declined
      - voided
      type: string
    IssuedCardTransactionMerchant:
      example:
        country: US
        city: San Francisco
        postalCode: "94107"
        name: Whole Body Fitness
        networkID: "1234567890"
        state: CA
        mcc: "7298"
      properties:
        networkID:
          description: External identifier used to identify the merchant with the
            card brand.
          example: "1234567890"
          type: string
        name:
          description: Name of merchant or company.
          example: Whole Body Fitness
          type: string
        city:
          description: Location of merchant.
          example: San Francisco
          type: string
        country:
          description: Two-letter code of the merchant country.
          example: US
          type: string
        postalCode:
          description: Five digit postal code.
          example: "94107"
          type: string
        state:
          description: Two-letter code of merchant state.
          example: CA
          type: string
        mcc:
          description: Merchant category code.
          example: "7298"
          type: string
    IssuedCardTransactionNetwork:
      description: The name of the network a card transaction is routed through.
      enum:
      - discover
      - shazam
      - visa
      type: string
    IssuedCardAuthorizations:
      items:
        $ref: '#/components/schemas/IssuedCardAuthorization'
      type: array
    IssuedCardAuthorization:
      example:
        issuedCardID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        cardVerification:
          cvv: match
          postalCode: notChecked
          addressLine1: noMatch
        authorizedAmount: -14.89
        cardTransactions:
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        - ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        authorizationID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        merchantData:
          country: US
          city: San Francisco
          postalCode: "94107"
          name: Whole Body Fitness
          networkID: "1234567890"
          state: CA
          mcc: "7298"
        createdOn: 2000-01-23T04:56:07.000+00:00
        fundingWalletID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        authorizationID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        issuedCardID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        fundingWalletID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        network:
          $ref: '#/components/schemas/IssuedCardTransactionNetwork'
        authorizedAmount:
          description: A decimal-formatted signed numerical string that represents
            up to 9 decimal place precision.
          example: -14.89
          pattern: ^-?\d+\.\d{1,9}$
          type: string
        status:
          $ref: '#/components/schemas/IssuedCardAuthorizationStatus'
        merchantData:
          $ref: '#/components/schemas/IssuedCardTransactionMerchant'
        cardTransactions:
          description: |
            List of card transaction IDs associated with this authorization.
          items:
            $ref: '#/components/schemas/UUID'
          type: array
        cardVerification:
          $ref: '#/components/schemas/IssuedCardVerification'
    IssuedCardAuthorizationStatus:
      description: Status of the authorization.
      enum:
      - pending
      - declined
      - canceled
      - cleared
      - expired
      type: string
    IssuedCardVerification:
      description: The results of validating cardholder data from for a card network
        transaction.
      example:
        cvv: match
        postalCode: notChecked
        addressLine1: noMatch
      properties:
        cvv:
          $ref: '#/components/schemas/IssuedCardVerificationResult'
        addressLine1:
          $ref: '#/components/schemas/IssuedCardVerificationResult'
        postalCode:
          $ref: '#/components/schemas/IssuedCardVerificationResult'
      type: object
    IssuedCardVerificationResult:
      enum:
      - noMatch
      - match
      - notChecked
      - unavailable
      example: match
      type: string
    IssuedCardAuthorizationEvents:
      items:
        $ref: '#/components/schemas/IssuedCardAuthorizationEvent'
      type: array
    IssuedCardAuthorizationEvent:
      example:
        eventID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        amount: -14.89
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        eventID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        eventType:
          $ref: '#/components/schemas/IssuedCardEventType'
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        amount:
          description: A decimal-formatted signed numerical string that represents
            up to 9 decimal place precision.
          example: -14.89
          pattern: ^-?\d+\.\d{1,9}$
          type: string
        result:
          $ref: '#/components/schemas/IssuedCardAuthorizationEventResult'
    IssuedCardEventType:
      description: The type of event that occurred on the card.
      enum:
      - authorization
      - reversal
      - authorization-advice
      - authorization-expiration
      - authorization-incremental
      - clearing
      type: string
    IssuedCardAuthorizationEventResult:
      description: The result of the event.
      enum:
      - approved
      - declined
      - processed
      type: string
    IssuedCardTransactionsNew:
      items:
        $ref: '#/components/schemas/IssuedCardTransactionNew'
      type: array
    IssuedCardTransactionNew:
      example:
        issuedCardID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        amount: -14.89
        authorizationID: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
        merchantData:
          country: US
          city: San Francisco
          postalCode: "94107"
          name: Whole Body Fitness
          networkID: "1234567890"
          state: CA
          mcc: "7298"
        authorizedOn: 2000-01-23T04:56:07.000+00:00
        cardTransactionID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        createdOn: 2000-01-23T04:56:07.000+00:00
        fundingWalletID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        cardTransactionID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        issuedCardID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        fundingWalletID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        amount:
          description: A decimal-formatted signed numerical string that represents
            up to 9 decimal place precision.
          example: -14.89
          pattern: ^-?\d+\.\d{1,9}$
          type: string
        authorizationID:
          description: UUID v4
          example: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
          format: uuid
          maxLength: 36
          nullable: true
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        authorizedOn:
          format: date-time
          maxLength: 24
          type: string
        merchantData:
          $ref: '#/components/schemas/IssuedCardTransactionMerchant'
    Dispute:
      description: Details about the card dispute.
      example:
        phase: pre-dispute
        amount:
          currency: USD
          value: 1204
        networkReasonCode: networkReasonCode
        transfer:
          transferID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        disputeID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        respondBy: 2000-01-23T04:56:07.000+00:00
        networkReasonDescription: networkReasonDescription
        merchantAccountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        createdOn: 2000-01-23T04:56:07.000+00:00
        status: response-needed
      properties:
        disputeID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        merchantAccountID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        amount:
          $ref: '#/components/schemas/Amount'
        networkReasonCode:
          description: Indicates the card network’s category for the dispute. These
            codes may differ between card brands. You can find more information on
            the code from the networkReasonDescription field.
          type: string
        networkReasonDescription:
          description: Provides detail on the card network's categorization of the
            dispute.
          type: string
        transfer:
          $ref: '#/components/schemas/Transfer'
        respondBy:
          format: date-time
          maxLength: 24
          type: string
        status:
          $ref: '#/components/schemas/DisputeStatus'
        phase:
          $ref: '#/components/schemas/DisputePhase'
      type: object
    Transfer:
      description: Details about the transfer.
      example:
        transferID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        transferID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
      type: object
    DisputeStatus:
      description: The status of a particular dispute. Read our [disputes guide](https://docs.moov.io/guides/money-movement/accept-payments/card-acceptance/disputes/#dispute-statuses)
        to learn what each status means.
      enum:
      - response-needed
      - resolved
      - under-review
      - closed
      - accepted
      - expired
      - won
      - lost
      example: response-needed
      type: string
    DisputePhase:
      description: The phase of a particular dispute.
      enum:
      - pre-dispute
      - inquiry
      - chargeback
      - unknown
      example: pre-dispute
      type: string
    DisputeEvidenceMetadata:
      description: Metadata about the dispute evidence.
      example:
        filename: filename
        size: 0
        disputeID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        evidenceID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        evidenceType: receipt
        mimeType: mimeType
        updatedOn: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        evidenceID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        disputeID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        mimeType:
          type: string
        filename:
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        size:
          type: integer
        evidenceType:
          enum:
          - receipt
          - proof-of-delivery
          - cancelation-policy
          - terms-of-service
          - customer-communication
          - generic-evidence
          - cover-letter
          - other
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
      type: object
    EvidenceFile:
      additionalProperties: false
      description: The file to upload as evidence.
      properties:
        file:
          description: The file to upload as evidence. Valid types are [jpeg, tiff,
            pdf].
          format: binary
          type: string
        evidenceType:
          $ref: '#/components/schemas/EvidenceType'
      required:
      - evidenceType
      - file
      type: object
    EvidenceType:
      description: The type of evidence being uploaded.
      enum:
      - receipt
      - proof-of-delivery
      - cancelation-policy
      - terms-of-service
      - customer-communication
      - generic-evidence
      - cover-letter
      - other
      type: string
    DisputeEvidence:
      description: Details about the dispute evidence.
      example:
        filename: filename
        size: 0
        data: data
        disputeID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        evidenceID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        evidenceType: receipt
        mimeType: mimeType
        updatedOn: 2000-01-23T04:56:07.000+00:00
        text: text
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        evidenceID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        disputeID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        mimeType:
          type: string
        filename:
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        size:
          type: integer
        evidenceType:
          enum:
          - receipt
          - proof-of-delivery
          - cancelation-policy
          - terms-of-service
          - customer-communication
          - generic-evidence
          - cover-letter
          - other
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
        text:
          type: string
        data:
          format: byte
          type: string
      type: object
    EvidenceText:
      additionalProperties: false
      description: The text to upload as evidence.
      example:
        text: text
      properties:
        text:
          description: The text to upload as evidence.
          type: string
        evidenceType:
          $ref: '#/components/schemas/EvidenceType'
      required:
      - evidenceType
      - text
      type: object
    EvidenceUpdate:
      description: The evidence fields to update.
      example: {}
      properties:
        evidenceType:
          $ref: '#/components/schemas/EvidenceType'
      type: object
    Files:
      items:
        $ref: '#/components/schemas/File'
      type: array
    File:
      additionalProperties: false
      description: Describes a file linked to a Moov account.
      example:
        fileSizeBytes: 1024
        accountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        fileName: logo.png
        metadata: '{"error_code": "document-name-mismatch", "requirement_id": "document.individual.verification",
          "representative_id": "c63ab175-251d-497e-a267-7346d087e180", "comment":
          "testing comment"'
        updatedOn: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
        decisionReason: not correct file
        fileID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        fileID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        fileName:
          example: logo.png
          maxLength: 64
          type: string
        filePurpose:
          $ref: '#/components/schemas/FilePurpose'
        fileStatus:
          $ref: '#/components/schemas/FileStatus'
        metadata:
          example: '{"error_code": "document-name-mismatch", "requirement_id": "document.individual.verification",
            "representative_id": "c63ab175-251d-497e-a267-7346d087e180", "comment":
            "testing comment"'
          format: json
          type: string
        decisionReason:
          example: not correct file
          type: string
        fileSizeBytes:
          example: 1024
          type: integer
        accountID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
      title: File
      type: object
    FilePurpose:
      description: |
        The file purpose.
        ###### Identity_verification is deprecated and will be removed in a future release. Use individual_verification, representative_verification, or business_verification instead.
      enum:
      - identity_verification
      - business_verification
      - representative_verification
      - individual_verification
      - merchant_underwriting
      - account_requirement
      type: string
    FileStatus:
      description: The file status.
      enum:
      - pending
      - approved
      - rejected
      type: string
    FileUploadRequest:
      additionalProperties: false
      description: Request to attach a file to an account.
      properties:
        file:
          description: The file to be added. Valid types are [csv, png, jpeg, pdf].
          format: binary
          type: string
        filePurpose:
          $ref: '#/components/schemas/FilePurpose'
        metadata:
          description: Additional metadata to be stored with the file. Valid keys
            are [representative_id, comment, requirement_id, error_code]
          format: json
          type: string
      required:
      - file
      - filePurpose
      type: object
    Underwriting:
      additionalProperties: false
      description: Describes underwriting values (in USD) used for card payment acceptance
      example:
        cardVolumeDistribution:
          ecommercePercentage: 20
          debtRepaymentPercentage: 20
          mailOrPhonePercentage: 20
          cardPresentPercentagePercentage: 20
        averageTransactionSize: 10000
        fulfillment:
          hasPhysicalGoods: true
          shipmentDurationDays: 7
          isShippingProduct: true
        volumeByCustomerType:
          consumerToBusinessPercentage: 20
          businessToBusinessPercentage: 20
        averageMonthlyTransactionVolume: 250000
        maxTransactionSize: 50000
      properties:
        averageTransactionSize:
          example: 10000
          format: int64
          type: integer
        maxTransactionSize:
          example: 50000
          format: int64
          type: integer
        averageMonthlyTransactionVolume:
          example: 250000
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/UnderwritingStatus'
        volumeByCustomerType:
          $ref: '#/components/schemas/Underwriting_volumeByCustomerType'
        cardVolumeDistribution:
          $ref: '#/components/schemas/Underwriting_cardVolumeDistribution'
        fulfillment:
          $ref: '#/components/schemas/Underwriting_fulfillment'
      type: object
    UnderwritingStatus:
      deprecated: true
      description: This field is deprecated and will be removed in a future release.
      enum:
      - approved
      - rejected
      - pendingReview
      - pending
      - notRequested
      type: string
    ReturnPolicy:
      description: Describes the return policy.
      enum:
      - none
      - exchangeOnly
      - withinThirtyDays
      - other
      type: string
    UnderwritingRequest:
      additionalProperties: false
      description: Describes underwriting values (in USD) used for card payment acceptance
      example:
        cardVolumeDistribution:
          ecommercePercentage: 20
          debtRepaymentPercentage: 20
          mailOrPhonePercentage: 20
          cardPresentPercentagePercentage: 20
        averageTransactionSize: 10000
        fulfillment:
          hasPhysicalGoods: true
          shipmentDurationDays: 7
          isShippingProduct: true
        volumeByCustomerType:
          consumerToBusinessPercentage: 20
          businessToBusinessPercentage: 20
        averageMonthlyTransactionVolume: 250000
        maxTransactionSize: 50000
      properties:
        averageTransactionSize:
          example: 10000
          format: int64
          type: integer
        maxTransactionSize:
          example: 50000
          format: int64
          type: integer
        averageMonthlyTransactionVolume:
          example: 250000
          format: int64
          type: integer
        volumeByCustomerType:
          $ref: '#/components/schemas/Underwriting_volumeByCustomerType'
        cardVolumeDistribution:
          $ref: '#/components/schemas/Underwriting_cardVolumeDistribution'
        fulfillment:
          $ref: '#/components/schemas/Underwriting_fulfillment'
      type: object
    PaymentMethods:
      items:
        $ref: '#/components/schemas/PaymentMethod'
      type: array
    PaymentMethod:
      additionalProperties: false
      description: A method of moving money
      discriminator:
        mapping:
          moov-wallet: '#/components/schemas/PaymentMethodWallet'
          ach-debit-fund: '#/components/schemas/PaymentMethodBankAccount'
          ach-debit-collect: '#/components/schemas/PaymentMethodBankAccount'
          ach-credit-standard: '#/components/schemas/PaymentMethodBankAccount'
          ach-credit-same-day: '#/components/schemas/PaymentMethodBankAccount'
          rtp-credit: '#/components/schemas/PaymentMethodBankAccount'
          card-payment: '#/components/schemas/PaymentMethodCard'
          apple-pay: '#/components/schemas/PaymentMethodApplePay'
        propertyName: paymentMethodType
      oneOf:
      - $ref: '#/components/schemas/PaymentMethodWallet'
      - $ref: '#/components/schemas/PaymentMethodBankAccount'
      - $ref: '#/components/schemas/PaymentMethodCard'
      - $ref: '#/components/schemas/PaymentMethodApplePay'
      type: object
    PaymentMethodWallet:
      allOf:
      - $ref: '#/components/schemas/BasicPaymentMethod'
      - $ref: '#/components/schemas/PaymentMethodWallet_allOf'
      description: A method of moving money that is a Moov wallet
      title: Wallet
    BasicPaymentMethod:
      properties:
        paymentMethodID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        paymentMethodType:
          $ref: '#/components/schemas/PaymentMethodType'
      type: object
    PaymentMethodType:
      description: The payment method type that represents a payment rail and directionality
      enum:
      - moov-wallet
      - ach-debit-fund
      - ach-debit-collect
      - ach-credit-standard
      - ach-credit-same-day
      - rtp-credit
      - card-payment
      - apple-pay
      - push-to-card
      - pull-from-card
      type: string
    WalletResponse:
      additionalProperties: false
      description: A Moov wallet to store funds for transfers.
      properties:
        walletID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
      type: object
    PaymentMethodBankAccount:
      allOf:
      - $ref: '#/components/schemas/BasicPaymentMethod'
      - $ref: '#/components/schemas/PaymentMethodBankAccount_allOf'
      description: A method of moving money that is a bank account
      title: Bank account
    PaymentMethodCard:
      allOf:
      - $ref: '#/components/schemas/BasicPaymentMethod'
      - $ref: '#/components/schemas/PaymentMethodCard_allOf'
      description: A method of moving money that is a credit or debit card
      title: Card
    PaymentMethodApplePay:
      allOf:
      - $ref: '#/components/schemas/BasicPaymentMethod'
      - $ref: '#/components/schemas/PaymentMethodApplePay_allOf'
      description: A method of moving money using an Apple Pay token.
      title: Apple Pay
    ApplePayResponse:
      additionalProperties: false
      description: Describes an Apple Pay token on a Moov account.
      example:
        fingerprint: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
        dynamicLastFour: "1234"
        expiration:
          month: "01"
          year: "21"
        cardDisplayName: Visa 1234
        brand: Discover
      properties:
        brand:
          $ref: '#/components/schemas/CardBrand'
        cardType:
          $ref: '#/components/schemas/CardType'
        cardDisplayName:
          description: "User-friendly name of the tokenized card returned by Apple.\
            \ \nIt usually contains the brand and the last four digits of the underlying\
            \ card for example, \"Visa 1256\". \nThere is no standard format.\n"
          example: Visa 1234
          type: string
        fingerprint:
          description: |
            Uniquely identifies a linked payment card or token.
            For Apple Pay, the fingerprint is based on the tokenized card number and may vary based on the user's device.
            This field can be used to identify specific payment methods across multiple accounts on your platform.
          example: 9948962d92a1ce40c9f918cd9ece3a22bde62fb325a2f1fe2e833969de672ba3
          maxLength: 100
          type: string
        expiration:
          $ref: '#/components/schemas/CardExpiration'
        dynamicLastFour:
          description: The last four digits of the Apple Pay token, which may differ
            from the tokenized card's last four digits
          example: "1234"
          type: string
      type: object
    Capability:
      additionalProperties: false
      description: Describes an action or set of actions that an account is permitted
        to perform.
      example:
        accountID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        disabledReason: disabledReason
        requirements:
          currentlyDue:
          - null
          - null
          errors:
          - {}
          - {}
        disabledOn: 2000-01-23T04:56:07.000+00:00
        updatedOn: 2000-01-23T04:56:07.000+00:00
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        capability:
          $ref: '#/components/schemas/CapabilityID'
        accountID:
          description: ID of account.
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        status:
          $ref: '#/components/schemas/CapabilityStatus'
        requirements:
          $ref: '#/components/schemas/Requirement'
        disabledReason:
          description: If status is `disabled`, the reason this capability was disabled.
          type: string
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
        disabledOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
      required:
      - capability
      - createdOn
      - status
      - updatedOn
      type: object
    Requirement:
      additionalProperties: false
      description: Represents individual and business data necessary to facilitate
        the enabling of a capability for an account.
      example:
        currentlyDue:
        - null
        - null
        errors:
        - {}
        - {}
      properties:
        currentlyDue:
          items:
            $ref: '#/components/schemas/RequirementID'
          type: array
        errors:
          items:
            $ref: '#/components/schemas/RequirementError'
          type: array
      type: object
    CapabilityRequestError:
      additionalProperties: false
      description: Error response for failed  HTTP requests.
      properties:
        error:
          example: cannot request capabilities for an account with failed verification
          type: string
      type: object
    AddCapabilityRequest:
      additionalProperties: false
      description: Request to add a capability to an account.
      example:
        capabilities:
        - null
        - null
      properties:
        capabilities:
          items:
            $ref: '#/components/schemas/CapabilityID'
          type: array
      required:
      - capabilities
      type: object
    Industries:
      additionalProperties: false
      description: A list of industries and their MCC/SIC/NAICS codes
      example:
        industries:
        - title: AC, Refrigeration Repair
          sic: "7623"
          mcc: "7623"
          naics: "811412"
        - title: AC, Refrigeration Repair
          sic: "7623"
          mcc: "7623"
          naics: "811412"
      properties:
        industries:
          items:
            $ref: '#/components/schemas/Industry'
          type: array
      type: object
    Industry:
      additionalProperties: false
      description: Describes an industry and its related codes
      example:
        title: AC, Refrigeration Repair
        sic: "7623"
        mcc: "7623"
        naics: "811412"
      properties:
        title:
          example: AC, Refrigeration Repair
          type: string
        naics:
          description: North American Industry Classification System
          example: "811412"
          maxLength: 6
          type: string
        sic:
          description: Standard Industrial Classification
          example: "7623"
          maxLength: 4
          type: string
        mcc:
          description: Merchant Category Code
          example: "7623"
          maxLength: 4
          type: string
      type: object
    FinancialInstitutions:
      description: List of all of the financial institutions found from a search
      example:
        achParticipants:
        - routingNumber: "123456789"
          phoneNumber: 123-456-7789
          officeCode: "0"
          newRoutingNumber: "987654321"
          servicingFRBNumber: "123456789"
          recordTypeCode: "1"
          revised: "041921"
          viewCode: "1"
          customerName: Main Street Bank
          achLocation:
            postalCodeExtension: "0000"
            address: 123 Main Street
            city: Boulder
            postalCode: "80301"
            state: Colorado
          statusCode: "1"
        - routingNumber: "123456789"
          phoneNumber: 123-456-7789
          officeCode: "0"
          newRoutingNumber: "987654321"
          servicingFRBNumber: "123456789"
          recordTypeCode: "1"
          revised: "041921"
          viewCode: "1"
          customerName: Main Street Bank
          achLocation:
            postalCodeExtension: "0000"
            address: 123 Main Street
            city: Boulder
            postalCode: "80301"
            state: Colorado
          statusCode: "1"
        wireParticipants:
        - date: "20000222"
          routingNumber: "123456789"
          fundsTransferStatus: "Y"
          fundsSettlementOnlyStatus: fundsSettlementOnlyStatus
          telegraphicName: MN STR BNK
          location:
            city: Boulder
            state: Colorado
          customerName: Main Street Bank
          bookEntrySecuritiesTransferStatus: "Y"
        - date: "20000222"
          routingNumber: "123456789"
          fundsTransferStatus: "Y"
          fundsSettlementOnlyStatus: fundsSettlementOnlyStatus
          telegraphicName: MN STR BNK
          location:
            city: Boulder
            state: Colorado
          customerName: Main Street Bank
          bookEntrySecuritiesTransferStatus: "Y"
      properties:
        achParticipants:
          items:
            $ref: '#/components/schemas/AchParticipant'
          type: array
        wireParticipants:
          items:
            $ref: '#/components/schemas/WireParticipant'
          type: array
      type: object
    AchParticipant:
      description: Financial institution information regarding an ACH participant
      example:
        routingNumber: "123456789"
        phoneNumber: 123-456-7789
        officeCode: "0"
        newRoutingNumber: "987654321"
        servicingFRBNumber: "123456789"
        recordTypeCode: "1"
        revised: "041921"
        viewCode: "1"
        customerName: Main Street Bank
        achLocation:
          postalCodeExtension: "0000"
          address: 123 Main Street
          city: Boulder
          postalCode: "80301"
          state: Colorado
        statusCode: "1"
      properties:
        routingNumber:
          example: "123456789"
          maxLength: 9
          type: string
        officeCode:
          example: "0"
          type: string
        servicingFRBNumber:
          example: "123456789"
          type: string
        recordTypeCode:
          example: "1"
          type: string
        revised:
          example: "041921"
          type: string
        newRoutingNumber:
          example: "987654321"
          maxLength: 9
          type: string
        customerName:
          example: Main Street Bank
          type: string
        phoneNumber:
          example: 123-456-7789
          type: string
        statusCode:
          example: "1"
          type: string
        viewCode:
          example: "1"
          type: string
        achLocation:
          $ref: '#/components/schemas/AchLocation'
      type: object
    AchLocation:
      additionalProperties: false
      example:
        postalCodeExtension: "0000"
        address: 123 Main Street
        city: Boulder
        postalCode: "80301"
        state: Colorado
      properties:
        address:
          example: 123 Main Street
          maxLength: 32
          type: string
        city:
          example: Boulder
          maxLength: 24
          type: string
        state:
          example: Colorado
          maxLength: 24
          type: string
        postalCode:
          example: "80301"
          maxLength: 5
          type: string
        postalCodeExtension:
          example: "0000"
          maxLength: 4
          type: string
      type: object
    WireParticipant:
      description: Financial institution information regarding a wire participant
      example:
        date: "20000222"
        routingNumber: "123456789"
        fundsTransferStatus: "Y"
        fundsSettlementOnlyStatus: fundsSettlementOnlyStatus
        telegraphicName: MN STR BNK
        location:
          city: Boulder
          state: Colorado
        customerName: Main Street Bank
        bookEntrySecuritiesTransferStatus: "Y"
      properties:
        routingNumber:
          example: "123456789"
          maxLength: 9
          type: string
        telegraphicName:
          example: MN STR BNK
          type: string
        customerName:
          example: Main Street Bank
          type: string
        location:
          $ref: '#/components/schemas/WireLocation'
        fundsTransferStatus:
          example: "Y"
          type: string
        fundsSettlementOnlyStatus:
          type: string
        bookEntrySecuritiesTransferStatus:
          example: "Y"
          type: string
        date:
          example: "20000222"
          type: string
      type: object
    WireLocation:
      additionalProperties: false
      example:
        city: Boulder
        state: Colorado
      properties:
        city:
          example: Boulder
          maxLength: 24
          type: string
        state:
          example: Colorado
          maxLength: 24
          type: string
      type: object
    Rail:
      description: A supported payment rail.
      enum:
      - ach
      - wire
      type: string
    EnrichmentAddress:
      additionalProperties: false
      description: Describes a suggested address
      example:
        entries: 75
        stateOrProvince: HI
        city: Honolulu
        postalCode: "96818"
        addressLine1: 123 Main St
        addressLine2: Apt
      properties:
        addressLine1:
          example: 123 Main St
          type: string
        addressLine2:
          example: Apt
          type: string
        city:
          example: Honolulu
          type: string
        stateOrProvince:
          example: HI
          type: string
        postalCode:
          example: "96818"
          type: string
        entries:
          example: 75
          type: integer
      type: object
    EnrichmentProfile:
      additionalProperties: false
      description: Describes an enriched business profile
      example:
        business:
          website: moov.io
          address:
            country: US
            stateOrProvince: CO
            city: Boulder
            postalCode: "80301"
            addressLine1: 123 Main Street
            addressLine2: Apt 302
          phone:
            number: "8185551212"
            countryCode: "1"
          legalBusinessName: Moov Financial Inc
          industryCodes:
            sic: "3750"
            naics: "480184"
          email: amanda@classbooker.dev
      properties:
        business:
          $ref: '#/components/schemas/EnrichedBusiness'
      type: object
    EnrichedBusiness:
      additionalProperties: false
      description: Describes a company
      example:
        website: moov.io
        address:
          country: US
          stateOrProvince: CO
          city: Boulder
          postalCode: "80301"
          addressLine1: 123 Main Street
          addressLine2: Apt 302
        phone:
          number: "8185551212"
          countryCode: "1"
        legalBusinessName: Moov Financial Inc
        industryCodes:
          sic: "3750"
          naics: "480184"
        email: amanda@classbooker.dev
      properties:
        legalBusinessName:
          example: Moov Financial Inc
          type: string
        address:
          $ref: '#/components/schemas/Address'
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        industryCodes:
          $ref: '#/components/schemas/EnrichedIndustryCodes'
        website:
          example: moov.io
          type: string
      type: object
    EnrichedIndustryCodes:
      additionalProperties: false
      description: Describes industry specific identifiers
      example:
        sic: "3750"
        naics: "480184"
      properties:
        naics:
          example: "480184"
          type: string
        sic:
          example: "3750"
          type: string
      type: object
    Webhook:
      example:
        lastUsedOn: 2000-01-23T04:56:07.000+00:00
        webhookID: ""
        description: description
        updatedOn: 2000-01-23T04:56:07.000+00:00
        eventTypes:
        - eventTypes
        - eventTypes
        createdOn: 2000-01-23T04:56:07.000+00:00
        url: url
      properties:
        webhookID:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: Unique identifier for this webhook.
        url:
          description: The URL of the webhook endpoint. Event payloads will be delivered
            to this URL.
          type: string
        description:
          description: An optional description of what the webhook is used for.
          type: string
        status:
          $ref: '#/components/schemas/Status'
        eventTypes:
          description: |
            The list of event types that the webhook is subscribed to.
            `["*"]` indicates the webhook is subscribed to all current and future event types.
          items:
            type: string
          type: array
        createdOn:
          format: date-time
          maxLength: 24
          type: string
        updatedOn:
          format: date-time
          maxLength: 24
          type: string
        lastUsedOn:
          format: date-time
          maxLength: 24
          nullable: true
          type: string
      required:
      - createdOn
      - eventTypes
      - status
      - updatedOn
      - url
      - webhookID
    Status:
      description: The status of the resource.
      enum:
      - enabled
      - disabled
      type: string
    EnabledEventTypes:
      description: |
        The list of event types that the webhook is subscribed to.
        `["*"]` indicates the webhook is subscribed to all current and future event types.
      items:
        type: string
      type: array
    CreateWebhook:
      example:
        description: description
        eventTypes:
        - eventTypes
        - eventTypes
        url: url
      properties:
        url:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        eventTypes:
          description: |
            The list of event types that the webhook is subscribed to.
            `["*"]` indicates the webhook is subscribed to all current and future event types.
          items:
            type: string
          type: array
      required:
      - eventTypes
      - status
      - url
    UpdateWebhook:
      example:
        description: description
        eventTypes:
        - eventTypes
        - eventTypes
        url: url
      properties:
        url:
          type: string
        description:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        eventTypes:
          description: |
            The list of event types that the webhook is subscribed to.
            `["*"]` indicates the webhook is subscribed to all current and future event types.
          items:
            type: string
          type: array
      required:
      - eventTypes
      - status
      - url
    PingResponse:
      example:
        responseStatusCode: 0
        webhook:
          lastUsedOn: 2000-01-23T04:56:07.000+00:00
          webhookID: ""
          description: description
          updatedOn: 2000-01-23T04:56:07.000+00:00
          eventTypes:
          - eventTypes
          - eventTypes
          createdOn: 2000-01-23T04:56:07.000+00:00
          url: url
        requestBodySent: '{}'
      properties:
        webhook:
          $ref: '#/components/schemas/Webhook'
        requestBodySent:
          description: The request body sent to the target URL. It will contain an
            event type of `event.test` and an empty (null) data payload.
          type: object
        responseStatusCode:
          description: The response status code after sending a ping event to the
            URL.
          type: integer
    WebhookSecretKey:
      description: Webhook secret key used to verify that a request came from Moov
      example:
        secret: secret
      properties:
        secret:
          nullable: false
          type: string
      required:
      - secret
    EventTypeObject:
      description: The type of event that Moov can generate.
      example:
        eventTypeID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        description: description
      properties:
        eventTypeID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        type:
          $ref: '#/components/schemas/EventType'
        description:
          type: string
      required:
      - description
      - eventTypeID
      - type
    EventType:
      description: The event type a webhook can subscribe to.
      enum:
      - '*'
      - account.created
      - account.deleted
      - account.updated
      - balance.updated
      - bankAccount.created
      - bankAccount.deleted
      - bankAccount.updated
      - card.autoUpdated
      - capability.requested
      - capability.updated
      - dispute.created
      - dispute.updated
      - networkID.updated
      - paymentMethod.disabled
      - paymentMethod.enabled
      - refund.created
      - refund.updated
      - representative.created
      - representative.deleted
      - representative.updated
      - transfer.created
      - transfer.updated
      - walletTransaction.updated
      type: string
    TimeRange:
      additionalProperties: false
      description: Specify a time range between two timestamps and then the interval
        duration for each result in the specific `tz` timezone
      example:
        tz: 2000-01-23T04:56:07.000+00:00
        from: 2000-01-23T04:56:07.000+00:00
        to: 2000-01-23T04:56:07.000+00:00
        every: 2000-01-23T04:56:07.000+00:00
      properties:
        from:
          format: date-time
          maxLength: 24
          type: string
        to:
          format: date-time
          maxLength: 24
          type: string
        every:
          format: date-time
          maxLength: 24
          type: string
        tz:
          format: date-time
          maxLength: 24
          type: string
      type: object
    TransferSum:
      additionalProperties: false
      description: Sum of all transfers between two timestamps
      example:
        amount: 0
        stop: 2000-01-23T04:56:07.000+00:00
        start: 2000-01-23T04:56:07.000+00:00
      properties:
        start:
          format: date-time
          maxLength: 24
          type: string
        stop:
          format: date-time
          maxLength: 24
          type: string
        amount:
          type: integer
      type: object
    LimitedTimeRange:
      additionalProperties: false
      description: Return `count` number of results within time range between two
        timestamps and then the interval duration for each result in the specific
        `tz` timezone
      example:
        tz: tz
        count: 0
        from: 2000-01-23T04:56:07.000+00:00
        to: 2000-01-23T04:56:07.000+00:00
        every: every
      properties:
        from:
          format: date-time
          maxLength: 24
          type: string
        to:
          format: date-time
          maxLength: 24
          type: string
        every:
          format: timezone
          type: string
        tz:
          format: timezone
          type: string
        count:
          type: integer
      type: object
    SpecificTransfer:
      additionalProperties: false
      description: Return a specific transfer result for the time frame between two
        timestamps
      example:
        amount: 0
        stop: 2000-01-23T04:56:07.000+00:00
        created_on: 2000-01-23T04:56:07.000+00:00
        start: 2000-01-23T04:56:07.000+00:00
        transfer_id: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        start:
          format: date-time
          maxLength: 24
          type: string
        stop:
          format: date-time
          maxLength: 24
          type: string
        transfer_id:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        created_on:
          format: date-time
          maxLength: 24
          type: string
        amount:
          type: integer
      type: object
    TransferStatusCount:
      additionalProperties: false
      description: Count all unique transfer statuses between two timestamps
      example:
        stop: 2000-01-23T04:56:07.000+00:00
        start: 2000-01-23T04:56:07.000+00:00
        count: 0
        status: status
      properties:
        start:
          format: date-time
          maxLength: 24
          type: string
        stop:
          format: date-time
          maxLength: 24
          type: string
        status:
          type: string
        count:
          type: integer
      type: object
    ProfilesCreatedInterval:
      additionalProperties: false
      description: Count all profile types between two timestamps
      example:
        stop: 2000-01-23T04:56:07.000+00:00
        profile: profile
        start: 2000-01-23T04:56:07.000+00:00
        count: 0
      properties:
        start:
          format: date-time
          maxLength: 24
          type: string
        stop:
          format: date-time
          maxLength: 24
          type: string
        profile:
          format: timezone
          type: string
        count:
          type: integer
      type: object
    TransferPaymentMethod:
      properties:
        accountID:
          description: ID of the account
          type: string
        paymentMethodID:
          description: ID of the payment method
          type: string
      type: object
    CardUpdateType:
      description: Result of the card update
      enum:
      - account-closed
      - contact-cardholder
      - expiration-update
      - number-update
      type: string
    DateTime:
      format: date-time
      maxLength: 24
      type: string
    GivenName:
      description: Name this person was given. This is usually the the same as first
        name.
      example: Amanda
      maxLength: 64
      pattern: ^\w+$
      type: string
    FamilyName:
      description: Family name of this person. This is usually the the same as last
        name.
      example: Yang
      maxLength: 64
      pattern: ^\w+$
      type: string
    OptionalURL:
      example: https://placekitten.com/408/287
      format: url
      maxLength: 255
      nullable: true
      type: string
    Base64:
      description: Base64 string of data.
      format: byte
      maxLength: 1024
      type: string
    DeviceFingerprint:
      description: Device hash generated by a frontend library.
      example: fBkwz3q43jlTHB8wFtiDgxT0WMpjUmDvMsTbQbz1
      maxLength: 64
      pattern: ^\w+$
      type: string
    OptionalDateTime:
      format: date-time
      maxLength: 24
      nullable: true
      type: string
    OptionalUUID:
      description: UUID v4
      example: f5f47bfa-fa5a-41f4-99eb-8671c1875b3f
      format: uuid
      maxLength: 36
      nullable: true
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      type: string
    Metadata:
      additionalProperties:
        type: string
      description: Free-form key-value pair list. Useful for storing information that
        is not captured elsewhere.
      type: object
    Phone:
      additionalProperties: false
      example:
        number: "8185551212"
        countryCode: "1"
      properties:
        number:
          example: "8185551212"
          format: phone
          maxLength: 10
          type: string
        countryCode:
          example: "1"
          maxLength: 1
          type: string
      type: object
    Address:
      additionalProperties: false
      example:
        country: US
        stateOrProvince: CO
        city: Boulder
        postalCode: "80301"
        addressLine1: 123 Main Street
        addressLine2: Apt 302
      properties:
        addressLine1:
          example: 123 Main Street
          maxLength: 60
          type: string
        addressLine2:
          example: Apt 302
          maxLength: 32
          type: string
        city:
          example: Boulder
          maxLength: 24
          type: string
        stateOrProvince:
          example: CO
          maxLength: 2
          type: string
        postalCode:
          example: "80301"
          maxLength: 5
          type: string
        country:
          example: US
          maxLength: 2
          type: string
      required:
      - addressLine1
      - city
      - country
      - postalCode
      - stateOrProvince
      type: object
    IpAddress:
      example: 127.0.0.1
      format: ipv4
      maxLength: 15
      type: string
    Document:
      description: Describes an uploaded file.
      example:
        uploadedAt: 2000-01-23T04:56:07.000+00:00
        documentID: e210a9d6
        type: DriversLicense
        parseErrors:
        - parseErrors
        - parseErrors
        contentType: application/pdf
      properties:
        documentID:
          description: A unique identifier for this document.
          example: e210a9d6
          type: string
        type:
          enum:
          - DriversLicense
          - Passport
          - UtilityBill
          - BankStatement
          type: string
        contentType:
          example: application/pdf
          type: string
        parseErrors:
          description: Optional array of errors encountered dring automated parsing.
          items:
            type: string
          type: array
        uploadedAt:
          format: date-time
          maxLength: 24
          type: string
      required:
      - contentType
      - documentID
      - type
      - uploadedAt
      type: object
    GovernmentID:
      additionalProperties: false
      properties:
        ssn:
          allOf:
          - $ref: '#/components/schemas/SSN'
          nullable: true
          type: object
        itin:
          allOf:
          - $ref: '#/components/schemas/ITIN'
          nullable: true
          type: object
      type: object
    SSN:
      additionalProperties: false
      properties:
        full:
          example: 123-45-6789
          maxLength: 64
          type: string
        lastFour:
          example: "6789"
          maxLength: 4
          type: string
      type: object
    ITIN:
      additionalProperties: false
      properties:
        full:
          example: 123-45-6789
          maxLength: 64
          type: string
        lastFour:
          example: "6789"
          maxLength: 4
          type: string
      type: object
    TaxID:
      additionalProperties: false
      description: An EIN (employer identification number) for the business. For sole
        proprietors, an SSN can be used as the EIN.
      properties:
        ein:
          $ref: '#/components/schemas/EIN'
      type: object
    EIN:
      additionalProperties: false
      properties:
        number:
          example: 123-45-6789
          maxLength: 64
          type: string
      type: object
    UserAgent:
      description: The user-agent of the user making the request.
      example: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
        (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36
      maxLength: 255
      type: string
    Name_2:
      description: Descriptive name allowing spaces.
      example: Amanda Yang
      maxLength: 64
      pattern: ^([\w ]+)$
      type: string
    UserID:
      description: ID of a user.
      format: uuid
      maxLength: 36
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      type: string
    Description:
      description: A description for the item.
      example: Here lies a description of the item
      maxLength: 1024
      pattern: ^([\w ]+)$
      type: string
    ApplicationScope:
      description: A scope, a permission that the application requests on another
        account.
      enum:
      - accounts.read
      - accounts.write
      - profile.read
      - profile.write
      - profile-enrichment.read
      - connections.read
      - connections.write
      - documents.read
      - documents.write
      - bank-accounts.read
      - bank-accounts.write
      - payment-methods.read
      - transfers.read
      - transfers.write
      - capabilities.read
      - capabilities.write
      - representatives.read
      - representatives.write
      - ping.read
      - fed.read
      - wallets.read
      - cards.read
      - cards.write
      - analytics.read
      - files.read
      - files.write
      type: string
    ApplicationScopes:
      description: List of scopes that this application will request access from another
        account.
      items:
        $ref: '#/components/schemas/ApplicationScope'
      maxItems: 100
      type: array
    Amount:
      description: A representation of money containing an integer value and its currency.
      example:
        currency: USD
        value: 1204
      properties:
        currency:
          description: A 3-letter ISO 4217 currency code.
          example: USD
          maxLength: 3
          pattern: ^[A-Za-z]+$
          type: string
          x-go-custom-tag: otel:"currency"
        value:
          description: Quantity in the smallest unit of the specified currency. In
            USD this is cents, so $12.04 is 1204 and $0.99 would be 99.
          example: 1204
          format: int64
          type: integer
          x-go-custom-tag: otel:"value"
      type: object
    DecimalString:
      description: A decimal-formatted numerical string that represents up to 9 decimal
        place precision.
      example: "12.987654321"
      pattern: ^\d+\.\d{1,9}$
      type: string
    SignedDecimalString:
      description: A decimal-formatted signed numerical string that represents up
        to 9 decimal place precision.
      example: -14.89
      pattern: ^-?\d+\.\d{1,9}$
      type: string
    RequirementID:
      description: The unique ID of what the requirement is asking to be filled out.
      enum:
      - account.tos-acceptance
      - individual.mobile
      - individual.email
      - individual.email-or-mobile
      - individual.firstname
      - individual.lastname
      - individual.address
      - individual.ssn-last4
      - individual.ssn
      - individual.birthdate
      - business.legalname
      - business.description-or-website
      - business.entity-type
      - business.dba
      - business.ein
      - business.address
      - business.phone
      - business.admins
      - business.controllers
      - business.owners
      - business.classification
      - business.industry-code-mcc
      - business.indicate-owners-provided
      - business.average-transaction-size
      - business.max-transaction-size
      - business.average-monthly-transaction-volume
      - business.volume-by-customer-type
      - business.card-volume-distribution
      - business.fulfillment
      - business.description
      - business.underwriting-documents-tier-one
      - bank-accounts.name
      - bank-accounts.routing-number
      - bank-accounts.account-number
      - document.business.verification
      - document.individual.tin
      - document.individual.verification
      - document.representative.{rep-uuid}.tin
      - document.representative.{rep-uuid}.verification
      - representative.{rep-uuid}.mobile
      - representative.{rep-uuid}.email
      - representative.{rep-uuid}.email-or-mobile
      - representative.{rep-uuid}.firstname
      - representative.{rep-uuid}.lastname
      - representative.{rep-uuid}.address
      - representative.{rep-uuid}.ssn-last4
      - representative.{rep-uuid}.ssn
      - representative.{rep-uuid}.birthdate
      - representative.{rep-uuid}.job-title
      - representative.{rep-uuid}.is-controller
      - representative.{rep-uuid}.is-owner
      - representative.{rep-uuid}.ownership
      - document.{doc-uuid}
      type: string
    RequirementError:
      additionalProperties: false
      description: Describes an error fulfilling a Requirement
      example: {}
      properties:
        requirement:
          $ref: '#/components/schemas/RequirementID'
        errorCode:
          $ref: '#/components/schemas/RequirementErrorCode'
      type: object
    RequirementErrorCode:
      enum:
      - invalid-value
      - failed-automatic-verification
      - failed-other
      - invalid-address
      - address-restricted
      - tax-id-mismatch
      - document-id-mismatch
      - document-date-of-birth-mismatch
      - document-name-mismatch
      - document-address.mismatch
      - document-number-mismatch
      - document-incomplete
      - document-failed-risk
      - document-illegible
      - document-unsupported
      - document-not-uploaded
      - document-corrupt
      - document-expired
      type: string
    inline_response_200:
      example:
        verified: true
        email: amanda@classbooker.dev
      properties:
        verified:
          type: boolean
        email:
          description: Email address.
          example: amanda@classbooker.dev
          format: email
          maxLength: 255
          pattern: ^([a-zA-Z0-9_\-\.]+\+?[a-zA-Z0-9\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
          type: string
    AvailableBalance_allOf:
      properties:
        valueDecimal:
          allOf:
          - $ref: '#/components/schemas/DecimalString'
          description: Same as `value`, but a decimal-formatted numerical string that
            represents up to 9 decimal place precision.
    GetTransferFull_allOf:
      properties:
        source:
          $ref: '#/components/schemas/GetTransferFullSource'
        destination:
          $ref: '#/components/schemas/GetTransferFullDestination'
    GetTransferFullSource_allOf:
      properties:
        transferID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        achDetails:
          $ref: '#/components/schemas/ACHDetailsSource'
    ACHDetailsSource_allOf:
      properties:
        debitHoldPeriod:
          $ref: '#/components/schemas/DebitHoldPeriod'
    GetTransferFullDestination_allOf:
      properties:
        rtpDetails:
          $ref: '#/components/schemas/RTPDetails'
    CreateTransfer_source:
      description: Where funds for a transfer originate. For the source, you must
        include either a `paymentMethodID` or a `transferID`. A `transferID` is used
        to create a [transfer group](https://docs.moov.io/guides/money-movement/transfer-groups/),
        associating the new transfer with a parent transfer.
      example:
        paymentMethodID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        transferID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        transferID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        paymentMethodID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        cardDetails:
          $ref: '#/components/schemas/CreateCardDetailsSource'
        achDetails:
          $ref: '#/components/schemas/CreateAchDetailsSource'
    CreateTransfer_destination:
      description: The final stage of a transfer and the ultimate recipient of the
        funds.
      example:
        paymentMethodID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        achDetails:
          companyEntryDescription: Gym Dues
          originatingCompanyName: Whole Body Fit
      properties:
        paymentMethodID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        cardDetails:
          $ref: '#/components/schemas/CreateCardDetailsDestination'
        achDetails:
          $ref: '#/components/schemas/CreateACHDetailsBase'
      required:
      - paymentMethodID
    CreateCardDetailsSource_allOf:
      properties:
        transactionSource:
          $ref: '#/components/schemas/TransactionSource'
    CreateAchDetailsSource_allOf:
      properties:
        debitHoldPeriod:
          allOf:
          - $ref: '#/components/schemas/DebitHoldPeriod'
          nullable: true
          type: string
        secCode:
          allOf:
          - $ref: '#/components/schemas/SECCode'
          nullable: true
          type: string
    CreateTransferOptions_source:
      example:
        accountID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
        paymentMethodID: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
      properties:
        accountID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
        paymentMethodID:
          description: UUID v4
          example: ec7e1848-dc80-4ab0-8827-dd7fc0737b43
          format: uuid
          maxLength: 36
          pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
          type: string
    LinkApplePay_token_paymentData_header:
      example:
        ephemeralPublicKey: MFkwEK...Md==
        publicKeyHash: l0CnXdMv...D1I=
        transactionId: 32b...4f3
      properties:
        ephemeralPublicKey:
          example: MFkwEK...Md==
          type: string
        publicKeyHash:
          example: l0CnXdMv...D1I=
          type: string
        transactionId:
          example: 32b...4f3
          type: string
      required:
      - ephemeralPublicKey
      - publicKeyHash
      - transactionId
    LinkApplePay_token_paymentData:
      example:
        data: 3+f4oOTwPa6f1UZ6tG...CE=
        signature: MIAGCSqGSIb3DQ.AAAA==
        header:
          ephemeralPublicKey: MFkwEK...Md==
          publicKeyHash: l0CnXdMv...D1I=
          transactionId: 32b...4f3
        version: EC_v1
      properties:
        version:
          example: EC_v1
          type: string
        data:
          example: 3+f4oOTwPa6f1UZ6tG...CE=
          type: string
        signature:
          example: MIAGCSqGSIb3DQ.AAAA==
          type: string
        header:
          $ref: '#/components/schemas/LinkApplePay_token_paymentData_header'
      required:
      - data
      - header
      - signature
      - version
    LinkApplePay_token_paymentMethod:
      example:
        displayName: Visa 1234
        type: debit
        network: Visa
      properties:
        displayName:
          example: Visa 1234
          type: string
        network:
          example: Visa
          type: string
        type:
          example: debit
          type: string
      required:
      - displayName
      - network
      - type
    LinkApplePay_token:
      example:
        paymentData:
          data: 3+f4oOTwPa6f1UZ6tG...CE=
          signature: MIAGCSqGSIb3DQ.AAAA==
          header:
            ephemeralPublicKey: MFkwEK...Md==
            publicKeyHash: l0CnXdMv...D1I=
            transactionId: 32b...4f3
          version: EC_v1
        transactionIdentifier: 32b...4f3
        paymentMethod:
          displayName: Visa 1234
          type: debit
          network: Visa
      properties:
        paymentData:
          $ref: '#/components/schemas/LinkApplePay_token_paymentData'
        paymentMethod:
          $ref: '#/components/schemas/LinkApplePay_token_paymentMethod'
        transactionIdentifier:
          example: 32b...4f3
          type: string
      required:
      - paymentData
      - paymentMethod
      - transactionIdentifier
    LinkApplePay_billingContact:
      example:
        countryCode: US
        postalCode: "30345"
        locality: Phoenix
        addressLines:
        - 123 Sesame Street
        administrativeArea: AZ
      properties:
        addressLines:
          example:
          - 123 Sesame Street
          items:
            type: string
          type: array
        locality:
          example: Phoenix
          type: string
        postalCode:
          example: "30345"
          type: string
        administrativeArea:
          example: AZ
          type: string
        countryCode:
          example: US
          type: string
    Underwriting_volumeByCustomerType:
      example:
        consumerToBusinessPercentage: 20
        businessToBusinessPercentage: 20
      properties:
        businessToBusinessPercentage:
          example: 20
          format: int64
          type: integer
        consumerToBusinessPercentage:
          example: 20
          format: int64
          type: integer
    Underwriting_cardVolumeDistribution:
      example:
        ecommercePercentage: 20
        debtRepaymentPercentage: 20
        mailOrPhonePercentage: 20
        cardPresentPercentagePercentage: 20
      properties:
        ecommercePercentage:
          example: 20
          format: int64
          type: integer
        cardPresentPercentagePercentage:
          example: 20
          format: int64
          type: integer
        mailOrPhonePercentage:
          example: 20
          format: int64
          type: integer
        debtRepaymentPercentage:
          example: 20
          format: int64
          type: integer
    Underwriting_fulfillment:
      example:
        hasPhysicalGoods: true
        shipmentDurationDays: 7
        isShippingProduct: true
      properties:
        hasPhysicalGoods:
          example: true
          type: boolean
        isShippingProduct:
          example: true
          type: boolean
        shipmentDurationDays:
          example: 7
          format: int64
          type: integer
        returnPolicy:
          $ref: '#/components/schemas/ReturnPolicy'
    PaymentMethodWallet_allOf:
      properties:
        wallet:
          allOf:
          - $ref: '#/components/schemas/WalletResponse'
          nullable: true
          type: object
    PaymentMethodBankAccount_allOf:
      properties:
        bankAccount:
          allOf:
          - $ref: '#/components/schemas/BankAccountResponse'
          nullable: true
          type: object
    PaymentMethodCard_allOf:
      properties:
        card:
          allOf:
          - $ref: '#/components/schemas/Card'
          nullable: true
          type: object
    PaymentMethodApplePay_allOf:
      properties:
        applePay:
          allOf:
          - $ref: '#/components/schemas/ApplePayResponse'
          nullable: true
          type: object
  securitySchemes:
    AccessToken:
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/authorize
          scopes:
            profile.read: Grants access to read a profile
          tokenUrl: /oauth2/token
      type: oauth2
    OAuth2Credentials:
      description: "Basic authentication per the OAuth 2.0 specification for authenticating\
        \ key usage per \n[section 2.3.1 of RFC 6749](https://tools.ietf.org/html/rfc6749#section-2.3.1).\
        \ \nUsername would be the `client_id` and password would be the `client_secret`.\
        \ If not \nauthorized a 401 code will be returned. This authentication method\
        \ is optional but preferred \nto passing the `client_id ` and `client_secret`\
        \ in the body of the request.\n"
      scheme: basic
      type: http
    GatewayAuth:
      bearerFormat: JWT
      description: JWT that comes from the gateway that validates against the gateways
        public RSA key
      scheme: bearer
      type: http
x-tagGroups:
- name: Authentication
  tags:
  - API authentication
  - Access token
  - Ping
- name: Moov accounts
  tags:
  - Accounts
  - Representatives
  - Capabilities
  - Files
  - Underwriting
- name: Sources
  tags:
  - Bank accounts
  - Cards
  - Payment methods
- name: Money movement
  tags:
  - Transfers
  - Disputes
- name: Wallets
  tags:
  - Wallets
  - Wallet transactions
- name: Card issuing
  tags:
  - Card issuing
  - Transactions
- name: Analytics
  tags:
  - Analytics
- name: Institution lookup
  tags:
  - Institutions
- name: Enrichment
  tags:
  - Avatars
  - Enriched address
  - Enriched profile
  - Industries
- name: Moov internal
  tags:
  - Signup
  - Email/Password
  - Multi-factor
  - Session
  - Verification
  - Devices
  - Open ID Connect
  - Connections
  - Users
  - Roles
  - Invites
  - Application
  - Webhooks
  - Events
  - Ping
  - User invites
